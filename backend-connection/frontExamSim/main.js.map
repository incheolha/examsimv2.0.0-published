{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Utility-shared/globalConstantShare.ts","webpack:///./src/app/Utility-shared/mainNavChange.model.ts","webpack:///./src/app/Utility-shared/utility.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/authentication.component.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/logout/logout.component.html","webpack:///./src/app/auth/logout/logout.component.scss","webpack:///./src/app/auth/logout/logout.component.ts","webpack:///./src/app/auth/profile.model.ts","webpack:///./src/app/auth/profile/profile-edit/edit-user-profile/edit-user-profile.component.html","webpack:///./src/app/auth/profile/profile-edit/edit-user-profile/edit-user-profile.component.scss","webpack:///./src/app/auth/profile/profile-edit/edit-user-profile/edit-user-profile.component.ts","webpack:///./src/app/auth/profile/profile-edit/exam-analysis/exam-analysis.component.html","webpack:///./src/app/auth/profile/profile-edit/exam-analysis/exam-analysis.component.scss","webpack:///./src/app/auth/profile/profile-edit/exam-analysis/exam-analysis.component.ts","webpack:///./src/app/auth/profile/profile-edit/exam-history/exam-history.component.html","webpack:///./src/app/auth/profile/profile-edit/exam-history/exam-history.component.scss","webpack:///./src/app/auth/profile/profile-edit/exam-history/exam-history.component.ts","webpack:///./src/app/auth/profile/profile-edit/profile-edit.component.html","webpack:///./src/app/auth/profile/profile-edit/profile-edit.component.scss","webpack:///./src/app/auth/profile/profile-edit/profile-edit.component.ts","webpack:///./src/app/auth/profile/profile-edit/profile-order-history/profile-order-history.component.html","webpack:///./src/app/auth/profile/profile-edit/profile-order-history/profile-order-history.component.scss","webpack:///./src/app/auth/profile/profile-edit/profile-order-history/profile-order-history.component.ts","webpack:///./src/app/auth/profile/purchased-history/purchased-history.component.html","webpack:///./src/app/auth/profile/purchased-history/purchased-history.component.scss","webpack:///./src/app/auth/profile/purchased-history/purchased-history.component.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.scss","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/auth/user.model.ts","webpack:///./src/app/error-interceptor.ts","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.scss","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/navigation/footer/footer.component.html","webpack:///./src/app/navigation/footer/footer.component.scss","webpack:///./src/app/navigation/footer/footer.component.ts","webpack:///./src/app/navigation/header/header.component.html","webpack:///./src/app/navigation/header/header.component.scss","webpack:///./src/app/navigation/header/header.component.ts","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.html","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.scss","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.ts","webpack:///./src/app/payment/model/payment.model.ts","webpack:///./src/app/payment/model/shoppingcart.model.ts","webpack:///./src/app/payment/model/stripeModel.ts","webpack:///./src/app/payment/payment-checkout/payment-notification/payment-notification.component.html","webpack:///./src/app/payment/payment-checkout/payment-notification/payment-notification.component.scss","webpack:///./src/app/payment/payment-checkout/payment-notification/payment-notification.component.ts","webpack:///./src/app/payment/payment-checkout/payment-order-summary/payment-order-summary.component.html","webpack:///./src/app/payment/payment-checkout/payment-order-summary/payment-order-summary.component.scss","webpack:///./src/app/payment/payment-checkout/payment-order-summary/payment-order-summary.component.ts","webpack:///./src/app/payment/payment-checkout/payment-proceed/payment-proceed.component.html","webpack:///./src/app/payment/payment-checkout/payment-proceed/payment-proceed.component.scss","webpack:///./src/app/payment/payment-checkout/payment-proceed/payment-proceed.component.ts","webpack:///./src/app/payment/payment-routing.module.ts","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/payment/payment.module.ts","webpack:///./src/app/payment/paymentAgency-Service/paypal-payment.service.ts","webpack:///./src/app/payment/paymentAgency-Service/stripe-payment.service.ts","webpack:///./src/app/payment/shoppingcart.service.ts","webpack:///./src/app/payment/shoppingcart/order-summary/order-summary.component.html","webpack:///./src/app/payment/shoppingcart/order-summary/order-summary.component.scss","webpack:///./src/app/payment/shoppingcart/order-summary/order-summary.component.ts","webpack:///./src/app/payment/shoppingcart/shoppingcart.component.html","webpack:///./src/app/payment/shoppingcart/shoppingcart.component.scss","webpack:///./src/app/payment/shoppingcart/shoppingcart.component.ts","webpack:///./src/app/shared/pipe-collection/shorten.pipe.1.ts","webpack:///./src/app/shared/pipe-collection/shorten.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/toefl/models/default.data.model.ts","webpack:///./src/app/toefl/models/join-paidtoefl-toefl.model.ts","webpack:///./src/app/toefl/models/reading.model.ts","webpack:///./src/app/toefl/models/toefl.model.ts","webpack:///./src/app/toefl/not-found/not-found.component.html","webpack:///./src/app/toefl/not-found/not-found.component.scss","webpack:///./src/app/toefl/not-found/not-found.component.ts","webpack:///./src/app/toefl/teacher/register-toefl.component.html","webpack:///./src/app/toefl/teacher/register-toefl.component.scss","webpack:///./src/app/toefl/teacher/register-toefl.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/listening-exam/listening-exam.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/listening-exam/listening-exam.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/listening-exam/listening-exam.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/make-exam-start/make-exam-start.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/make-exam-start/make-exam-start.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/make-exam-start/make-exam-start.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/makeexam.service.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/edit-reading-desc/edit-reading-desc.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/edit-reading-desc/edit-reading-desc.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/edit-reading-desc/edit-reading-desc.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-exam.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-exam.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-exam.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-problems/reading-problems.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-problems/reading-problems.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-problems/reading-problems.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section1/reading-section1.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section1/reading-section1.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section1/reading-section1.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section2/reading-section2.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section2/reading-section2.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section2/reading-section2.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section3/reading-section3.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section3/reading-section3.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section3/reading-section3.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section4/reading-section4.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section4/reading-section4.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading-section4/reading-section4.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/reading-exam/reading.service.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/speaking-exam/speaking-exam.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/speaking-exam/speaking-exam.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/speaking-exam/speaking-exam.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/writing-exam/writing-exam.component.html","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/writing-exam/writing-exam.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/make-toefl-exam/writing-exam/writing-exam.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-detail/regist-toefl-detail.component.html","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-detail/regist-toefl-detail.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-detail/regist-toefl-detail.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-edit/regist-toefl-edit.component.html","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-edit/regist-toefl-edit.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-edit/regist-toefl-edit.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-list/regist-item/regist-item.component.html","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-list/regist-item/regist-item.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-list/regist-item/regist-item.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-list/regist-toefl-list.component.html","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-list/regist-toefl-list.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/regist-toefl-exam/regist-toefl-list/regist-toefl-list.component.ts","webpack:///./src/app/toefl/teacher/register-toefl/register-toefl-start/register-toefl-start.component.html","webpack:///./src/app/toefl/teacher/register-toefl/register-toefl-start/register-toefl-start.component.scss","webpack:///./src/app/toefl/teacher/register-toefl/register-toefl-start/register-toefl-start.component.ts","webpack:///./src/app/toefl/teacher/stepper/stepper.component.html","webpack:///./src/app/toefl/teacher/stepper/stepper.component.scss","webpack:///./src/app/toefl/teacher/stepper/stepper.component.ts","webpack:///./src/app/toefl/teacher/stepper/stepper.model.ts","webpack:///./src/app/toefl/teacher/teacher-navigation/teacher-nav-header/teacher-nav-header.component.html","webpack:///./src/app/toefl/teacher/teacher-navigation/teacher-nav-header/teacher-nav-header.component.scss","webpack:///./src/app/toefl/teacher/teacher-navigation/teacher-nav-header/teacher-nav-header.component.ts","webpack:///./src/app/toefl/teacher/teacher-navigation/teacher-sidebar/teacher-sidebar.component.html","webpack:///./src/app/toefl/teacher/teacher-navigation/teacher-sidebar/teacher-sidebar.component.scss","webpack:///./src/app/toefl/teacher/teacher-navigation/teacher-sidebar/teacher-sidebar.component.ts","webpack:///./src/app/toefl/teacher/teacher-routing.module.ts","webpack:///./src/app/toefl/teacher/teacher.module.ts","webpack:///./src/app/toefl/teacher/teacher.service.ts","webpack:///./src/app/toefl/toeflExam/advance-toefl-list/advance-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/advance-toefl-list/advance-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/advance-toefl-list/advance-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/basic-toefl-list/basic-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/basic-toefl-list/basic-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/basic-toefl-list/basic-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/event-toefl-list/event-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/event-toefl-list/event-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/event-toefl-list/event-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/toefl-exam.component.ts","webpack:///./src/app/toefl/toeflExam/toefl-list/toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/toefl-list/toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/toefl-list/toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/toefl-routing.module.ts","webpack:///./src/app/toefl/toeflExam/toeflexam.module.ts","webpack:///./src/app/toefl/toeflExam/toeflexam.service.ts","webpack:///./src/app/tony-editorv1.0.0/GlobalSetting/command.model.ts","webpack:///./src/app/tony-editorv1.0.0/GlobalSetting/tony-editor.global.default.ts","webpack:///./src/app/tony-editorv1.0.0/Utility/tony-editor.utility.ts","webpack:///./src/app/tony-editorv1.0.0/services/executable-command.service.ts","webpack:///./src/app/tony-editorv1.0.0/tony-editor.toolbar/tony-editor.toolbar.component.html","webpack:///./src/app/tony-editorv1.0.0/tony-editor.toolbar/tony-editor.toolbar.component.scss","webpack:///./src/app/tony-editorv1.0.0/tony-editor.toolbar/tony-editor.toolbar.component.ts","webpack:///./src/app/tony-editorv1.0.0/tony-editor/tony-editor.component.html","webpack:///./src/app/tony-editorv1.0.0/tony-editor/tony-editor.component.scss","webpack:///./src/app/tony-editorv1.0.0/tony-editor/tony-editor.component.ts","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.scss","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;ACZO,MAAM,mBAAmB,GAAG;IAChC,kDAAkD;IAClD,OAAO,EAAE,uBAAuB;IAC/B,KAAK,EAAE,EAAE;CACZ,CAAC;;;;;;;;;;;;;;;ACHI;IACJ,YAAmB,WAAoB,EACpB,gBAAyB,EACzB,cAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAS;QACpB,qBAAgB,GAAhB,gBAAgB,CAAS;QACzB,mBAAc,GAAd,cAAc,CAAU;IAAG,CAAC;CAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL0C;AACJ;AAEI;AAG3C,IAAa,cAAc,GAA3B;IAaE,YAAoB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QAXnC,wBAAmB,GAAG,IAAI,oDAAO,EAAW,CAAC;QAC7C,uBAAkB,GAAG,IAAI,oDAAO,EAAW,CAAC,CAAG,kDAAkD;QACjG,qBAAgB,GAAG,IAAI,oDAAO,EAAU,CAAC;QACzC,mBAAc,GAAG,IAAI,oDAAO,EAAgB,CAAC,CAAQ,0BAA0B;QAC/E,yBAAoB,GAAG,IAAI,oDAAO,EAAW,CAAC,CAAI,iCAAiC;QACnF,6BAAwB,GAAG,IAAI,oDAAO,EAAW,CAAC,CAAE,8DAA8D;QAClH,iBAAY,GAAG,IAAI,oDAAO,EAAW,CAAC,CAAc,oBAAoB;QACvE,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAEpB,YAAO,GAAG,EAAE,aAAa,EAAE,sBAAsB,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;IAEpD,CAAC;IAG/C,YAAY,CAAC,KAAK,EAAE,OAAO;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAErD,CAAC;IAEF,UAAU,CAAC,KAAK,EAAE,OAAO;QACvB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,kBAAkB,CAAC,SAAiB;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,eAAe,CAAC,SAAiB,EAAE,iBAAyB,EAAE,WAAoB;QACjF,4DAA4D;QAC5D,gDAAgD;QAChD,4DAA4D;QAC1D,iDAAiD;QACjD,2DAA2D;QAE7D,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAEzB,EAAE,CAAC,CAAC,iBAAiB,KAAK,GAAG,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QACD,EAAE,CAAC,CAAC,iBAAiB,KAAK,GAAG,CAAC,CAAC,CAAC;YAE1B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACrB,CAAC;gBACD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,iBAAiB,KAAK,GAAG,CAAC,CAAC,CAAC;YAExB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;QACD,EAAE,CAAC,CAAC,iBAAiB,KAAK,GAAG,CAAC,CAAC,CAAC;YAExB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC;YACC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;CAEH;AAhFW,cAAc;IAD1B,gEAAU,EAAE;qCAckB,wDAAa;GAb/B,cAAc,CAgFzB;AAhFyB;;;;;;;;;;;;;;;;;;;;;;;;ACNc;AACc;AAEQ;AAK/D,MAAM,UAAU,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;IACnD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2EAAgB,EAAG;IAC9C,yFAAyF;IACxF,4FAA4F;CAC/F,CAAC;AAMF,IAAa,gBAAgB,GAA7B;CAAgC;AAAnB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC3C,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;ACnB7B,4d;;;;;;;;;;;ACAA,2CAA2C,sBAAsB,EAAE,oFAAoF,sBAAsB,EAAE,oDAAoD,aAAa,gBAAgB,iBAAiB,EAAE,yDAAyD,gBAAgB,uBAAuB,WAAW,YAAY,gBAAgB,iBAAiB,eAAe,uBAAuB,oBAAoB,qBAAqB,EAAE,iEAAiE,cAAc,eAAe,gBAAgB,iBAAiB,wBAAwB,sBAAsB,0DAA0D,qCAAqC,6BAA6B,wCAAwC,wCAAwC,gCAAgC,EAAE,yBAAyB,qCAAqC,sCAAsC,EAAE,G;;;;;;;;;;;;;;;;;ACA7/B;AAAA;;;;;;;;;;;;;;EAcE;;;;;;;;;;AAEgD;AACgD;AAC1C;AACU;AAUlE,IAAa,YAAY,GAAzB;IAWE,YAAoB,cAA8B,EAC9B,WAAwB,EACxB,MAAc,EACd,cAAiC;QAHjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAmB;QAZrD,UAAK,GAAG,KAAK,CAAC;QAEd,gBAAW,GAAG,KAAK,CAAC;QACpB,WAAM,GAAG,KAAK,CAAC;QACf,kBAAa,GAAG,KAAK,CAAC;QACtB,QAAG,GAAG,CAAC,CAAC;IAOgD,CAAC;IAEzD,QAAQ;QAEF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAuB,EAAE,EAAE;YAChG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;YAEzC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAE/C,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAEC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC7D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAE9D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,GAAG;YAC5C,MAAM,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC;QAGF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjC,EAAE,CAAC,CAAC,GAAG,YAAY,6DAAa,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC9B,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC,CAAC,CAAC;IAEX,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;CACF;AA3DY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;;;KAGrB,CAAC;qCAYoC,8EAAc;QACjB,8DAAW;QAChB,sDAAM;QACE,+DAAiB;GAd1C,YAAY,CA2DxB;AA3DwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BiC;AACqB;AACpB;AAEI;AACF;AAET;AAEV;AAEC;AACgC;AAC5B;AAEG;AACgB;AACZ;AAES;AACQ;AACiB;AAEpB;AACC;AACb;AAER;AAE0B;AACH;AACf;AAE+B;AACiB;AACqB;AACf;AACG;AACT;AACpC;AACb;AACE;AA0CzD,IAAa,SAAS,GAAtB;CAA0B;AAAb,SAAS;IAxCrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,4EAAgB;YAChB,oFAAe;YACf,qGAAoB;YACpB,uFAAiB;YACjB,oGAAkB;YAClB,8HAA0B;YAC1B,qHAAuB;YACvB,0IAA8B;YAC9B,2HAAyB;YACzB,oFAAe;YACf,qHAAuB;YACvB,iFAAW;YACX,sEAAc;SACf;QACD,OAAO,EAAE;YACP,uEAAa;YACb,4FAAuB;YACvB,wDAAU;YACV,qEAAgB;YAChB,6DAAU;YACV,iFAAkB;YAClB,kFAAe;YACf,qEAAgB;YAChB,mEAAY;YACZ,sEAAa;YACb,uDAAY,CAAC,OAAO,EAAE;YACtB,4EAAsB,CAAC,OAAO,EAAE;YAChC,iEAAe;SACf;QACF,OAAO,EAAE,CAAE,8DAAgB,CAAE;QAC7B,SAAS,EAAE;YACT,0EAAoB,EAAE,8DAAW,EAAE,+EAAc;YACjD,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,oEAAgB,EAAE,KAAK,EAAE,IAAI,EAAC;SACvE;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;QACzB,eAAe,EAAE,CAAC,sEAAc,CAAC;KAClC,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpF+C;AAE5B;AACc;AAEK;AACH;AACG;AACyB;AACe;AAC3D;AAElC,MAAM,UAAU,GAAW;IAClC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iFAAuB,EAAE,QAAQ,EAAE;YACpD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iGAAoB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;YAC9E,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gHAAyB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;YACxF,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;SACnD,EAAC;CACL,CAAC;AAOF,IAAa,iBAAiB,GAA9B;CAAiC;AAApB,iBAAiB;IAL7B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC5C,OAAO,EAAE,CAAC,4DAAY,CAAC;QACvB,SAAS,EAAE,CAAC,qDAAS,CAAC;KACvB,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Ba;AACwD;AAEtD;AAI7C,IAAa,SAAS,GAAtB;IAEE,YAAoB,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE/C,WAAW,CAAC,KAA6B,EAC7B,KAA0B;QAEpC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC;IACJ,CAAC;CACF;AAdY,SAAS;IADrB,gEAAU,EAAE;qCAGiB,sDAAM;QACD,yDAAW;GAHjC,SAAS,CAcrB;AAdqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRyB;AAEN;AAE4B;AACZ;AACG;AACA;AAGG;AAEL;AACN;AACK;AAC4B;AACuC;AACZ;AACd;AACG;AACD;AAwBpG,IAAa,UAAU,GAAvB;CAA0B;AAAb,UAAU;IAtBtB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACE,iFAAuB;YACvB,qEAAc;YACd,wEAAe;YACf,wEAAe;YACf,iGAAoB;YACpB,yIAA4B;YAC5B,6HAAwB;YACxB,+GAAoB;YACpB,kHAAqB;YACrB,iHAAyB;SAE1B;QACf,OAAO,EAAE;YACC,4DAAY;YACZ,kEAAY;YACZ,4EAAsB,CAAC,OAAO,EAAE;YAChC,iEAAW,CAAC,OAAO,EAAE;YACrB,sEAAiB;SAC1B;KACF,CAAC;GACW,UAAU,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CqD;AACjC;AACF;AACS;AACX;AAE8B;AACE;AAKzB;AAI9C,IAAa,WAAW,GAAxB;IAqBE,YAAoB,IAAgB,EAChB,MAAc,EACd,cAA8B;QAF9B,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QArBlD,cAAS,GAAG,uFAAmB,CAAC,OAAO,CAAC,CAAK,sBAAsB;QACnE,eAAU,GAAG,IAAI,oDAAO,EAAW,CAAC;QACpC,gBAAW,GAAG,IAAI,oDAAO,EAAW,CAAC;QAOrC,wBAAmB,GAAoB,EAAE,CAAC;QAC1C,2BAAsB,GAAmB,EAAE,CAAC;QAC5C,2BAAsB,GAAgB,IAAI,CAAC;QAE3C,oBAAe,GAAG,KAAK,CAAC;QACxB,2BAAsB,GAAG,KAAK,CAAC;QAExB,sBAAiB,GAAG,IAAI,oDAAO,EAAkB,CAAC;QAClD,mBAAc,GAAG,IAAI,oDAAO,EAAmB,CAAC;IAIF,CAAC;IACtD,MAAM,CAAC,IAAU;QAEX,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAQG,IAAI,CAAC,SAAS,GAAG,cAAc,EAAE,IAAI,CAAC;aAEtC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAEd,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;YAElD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,IAAU;QAEV,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAQG,IAAI,CAAC,SAAS,GAAG,aAAa,EAAE,IAAI,CAAC;aAErC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACd,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAEL,WAAW,CAAC,KAAK;QACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,MAAM,CAAC;IACT,CAAC;IAEO,WAAW,CAAC,WAAmB;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEzB,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,MAAM;QACM,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAA6B,gBAAgB;QACzE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAA4B,yBAAyB;QAClF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAA6B,QAAQ;QAClE,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAsB,gBAAgB;QAE1E,IAAI,CAAC,WAAW,GAAG,IAAI,0DAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAY,qBAAqB;QACpF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAM,yBAAyB;QAExF,IAAI,CAAC,YAAY,GAAG,IAAI,gFAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAa,WAAW;QAE1E,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAI,wBAAwB;QACvF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAmC,qBAAqB;IAChG,CAAC;IAED,MAAM;QACM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IACxC,CAAC;IAGD,YAAY;QACA,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAA4B,qDAAqD;IAChI,CAAC;IAED,cAAc;QACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IACxB,CAAC;IAED,WAAW;QAET,6DAA6D;QAE7D,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,SAAS,GAAG,oBAAoB,GAAG,SAAS,GAAG,KAAK,CAAC;aAChF,GAAG,CAAE,CAAC,OAAO,EAAE,EAAE;YAEhB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAA8B,2BAA2B;SACrF,CAAC;IACd,CAAC;CACF;AAvJY,WAAW;IADvB,gEAAU,EAAE;qCAsBe,+DAAU;QACR,sDAAM;QACE,8EAAc;GAvBvC,WAAW,CAuJvB;AAvJuB;;;;;;;;;;;;;;;;;;;;;;;;;ACfkB;AAQ1C,IAAa,uBAAuB,GAApC;IAEA,gBAAe,CAAC;CAEf;AAJY,uBAAuB;IANnC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE;;GAET;KACF,CAAC;;GACW,uBAAuB,CAInC;AAJmC;;;;;;;;;;;;ACTpC,06K;;;;;;;;;;;ACAA,yBAAyB,4DAA4D,2BAA2B,kBAAkB,EAAE,gCAAgC,sBAAsB,EAAE,4BAA4B,kCAAkC,mCAAmC,EAAE,2DAA2D,qCAAqC,kCAAkC,EAAE,mEAAmE,mBAAmB,EAAE,+DAA+D,qCAAqC,kCAAkC,EAAE,uEAAuE,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACClqB;AACO;AAEpB;AACwB;AAEjC;AACE;AAER;AAQjC,IAAa,cAAc,GAA3B;IAUE,YAAqB,EAAe,EACf,WAAwB,EACxB,MAAc,EACd,cAA8B;QAH9B,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAVnD,eAAU,GAAG,iDAAiD,CAAC;QAE/D,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;IAQH,CAAC;IAEhB,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC5F,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBAC5B,CAAC;SACb,CAAC,CAAC;IACnB,CAAC;IAIH,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,IAAI,GAAG,IAAI,gDAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAErD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;CACF;AA7CY,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;;;KAGtB,CAAC;qCAWyB,0DAAW;QACF,yDAAW;QAChB,sDAAM;QACE,8EAAc;GAbxC,cAAc,CA6C1B;AA7C0B;;;;;;;;;;;;AClB3B,4jC;;;;;;;;;;;ACAA,yBAAyB,8DAA8D,2BAA2B,kBAAkB,EAAE,aAAa,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzF;AACzB;AACP;AAEG;AAGwB;AAMtE,IAAa,eAAe,GAA5B;IAEE,YAAoB,QAAkB,EAClB,WAAwB,EACxB,cAA8B,EAC9B,MAAc,EACd,KAAqB;QAJrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAG9C,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAE5B,CAAC;IAED,MAAM;QAEJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;CACF;AAnBY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;;;KAGvB,CAAC;qCAG8B,wDAAQ;QACL,yDAAW;QACR,8EAAc;QACtB,sDAAM;QACP,8DAAc;GAN9B,eAAe,CAmB3B;AAnB2B;;;;;;;;;;;;;;;ACZtB;IACJ,YAAoB,KAAc,EACd,IAAa;QADb,UAAK,GAAL,KAAK,CAAS;QACd,SAAI,GAAJ,IAAI,CAAS;IAAI,CAAC;CACvC;;;;;;;;;;;;ACJD,kbAAkb,iBAAiB,0EAA0E,kBAAkB,4O;;;;;;;;;;;ACA/hB,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACd;AAO3C,IAAa,wBAAwB,GAArC;IAIE,gBAAgB,CAAC;CAElB;AAJU;IAAR,2DAAK,EAAE;8BAAW,gDAAI;0DAAC;AAFb,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;;;KAGlC,CAAC;;GACW,wBAAwB,CAMpC;AANoC;;;;;;;;;;;;ACRrC,sD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,qBAAqB,GAAlC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;;;KAG9B,CAAC;;GACW,qBAAqB,CAOjC;AAPiC;;;;;;;;;;;;ACPlC,qD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,oBAAoB,GAAjC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;;;KAG7B,CAAC;;GACW,oBAAoB,CAOhC;AAPgC;;;;;;;;;;;;ACPjC,kiF;;;;;;;;;;;ACAA,yBAAyB,oBAAoB,cAAc,YAAY,aAAa,cAAc,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvC;AAEZ;AAC2B;AAGnC;AAQzC,IAAa,oBAAoB,GAAjC;IAcE,YAAoB,WAAwB,EACxB,MAAc,EACd,mBAAwC;QAFxC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QAX5D,iBAAY,GAAG,CAAC,CAAC;QAEjB,eAAU,GAAe,EAAE,CAAC;QAE5B,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,gBAAW,GAAG,CAAC,CAAC;QAEhB,mBAAc,GAAoB,EAAE,CAAC;IAI2B,CAAC;IAEjE,QAAQ;QAEV,mFAAmF;QACzE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;QAC3D,EAAE,CAAC,CAAE,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAE,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,IAAI,aAAa,CAAC,SAAS,CAAC;YAC9C,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/C,CAAC;IACjB,CAAC;IAEH,kBAAkB,CAAC,aAAa;QAE1B,wCAAwC;QACnC,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/E,CAAC;QAAC,IAAI,CAAC,CAAC;YACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACpF,CAAC;QAEA,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;IACb,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;CAEA;AAjDY,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;;;KAG7B,CAAC;qCAeiC,yDAAW;QAChB,sDAAM;QACO,iFAAmB;GAhBjD,oBAAoB,CAiDhC;AAjDgC;;;;;;;;;;;;ACdjC,g1BAAg1B,4IAA4I,sBAAsB,yZAAyZ,yBAAyB,0HAA0H,6CAA6C,yeAAye,0BAA0B,oJAAoJ,0BAA0B,kHAAkH,2MAA2M,kDAAkD,oDAAoD,sGAAsG,MAAM,mGAAmG,2CAA2C,8GAA8G,gMAAgM,2CAA2C,qH;;;;;;;;;;;ACAlvG,mB;;;;;;;;;;;;;;;;;;;;;;;;ACA+F;AAQ/F,IAAa,4BAA4B,GAAzC;IAmBE,YAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QAb1B,eAAU,GAAe,EAAE,CAAC;QAInC,iBAAY,GAAG,CAAC,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAE/B,eAAU,GAAG,CAAC,CAAC;QACf,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAAW,IAAI,CAAC,YAAY,CAAC;QAC7C,0BAAqB,GAAG,CAAC,CAAC;QAC1B,yBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAIhD,WAAM,GAAG,KAAK,CAAC;IAFgB,CAAC;IAGxC,QAAQ,KAAI,CAAC;IAGb,MAAM,CAAC,EAAgB;QAErB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YACtC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,KAAU;QACnB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;IACH,CAAC;IACD,QAAQ,CAAC,KAAU;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1D,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAChE,CAAC;IACD,YAAY,CAAC,KAAU;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAE,CAAC;gBAC/F,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,CAAC;QACP,CAAC;QAEC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAChE,CAAC;IACD,SAAS;QACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IAC/D,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACtF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB;gBACxB,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7F,CAAC;IACH,CAAC;CACF;AAhGU;IAAR,2DAAK,EAAE;;oEAAiC;AAChC;IAAR,2DAAK,EAAE;;iEAAqB;AAEpB;IAAR,2DAAK,EAAE;;wEAA4B;AAC3B;IAAR,2DAAK,EAAE;8BAAa,KAAK;gEAAW;AAGZ;IAAtB,kEAAY,CAAC,OAAO,CAAC;8BAAQ,uDAAS;2DAAM;AATpC,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;;;KAGtC,CAAC;qCAoByB,wDAAU;GAnBxB,4BAA4B,CAkGxC;AAlGwC;;;;;;;;;;;;ACRzC,0lDAA0lD,mIAAmI,sBAAsB,sXAAsX,yBAAyB,yGAAyG,6CAA6C,yGAAyG,gCAAgC,kyB;;;;;;;;;;;ACAj6E,yBAAyB,oBAAoB,cAAc,YAAY,aAAa,cAAc,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AACyB;AACrE;AAEmC;AAQ5E,IAAa,yBAAyB,GAAtC;IAiBE,YAAoB,mBAAwC,EACxC,MAAc,EACd,YAA6B,EAC7B,KAAwB;QAHxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,UAAK,GAAL,KAAK,CAAmB;QAV5C,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAUzC,WAAM,GAAG,KAAK,CAAC;IAFyB,CAAC;IAIjD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;QAEpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;IACpD,CAAC;IAED,eAAe;QACb,IAAI,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC;QAE3D,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;QACjD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC;IAED,mBAAmB,CAAC,IAAS;QAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC;IAED,QAAQ;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,MAAM,CAAC,EAAgB;QAErB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YACtC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;CAEF;AAjEyC;IAAvC,+DAAS,CAAC,iFAA2B,CAAC;8BAAqB,iFAA2B;qEAAC;AAR7E,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;;;KAGlC,CAAC;qCAkByC,iFAAmB;QAChC,sDAAM;QACA,qEAAe;QACtB,+DAAiB;GApBjC,yBAAyB,CAyErC;AAzEqC;;;;;;;;;;;;ACZtC,2mM;;;;;;;;;;;ACAA,yBAAyB,4DAA4D,2BAA2B,kBAAkB,EAAE,6BAA6B,sBAAsB,EAAE,oFAAoF,sBAAsB,EAAE,oDAAoD,aAAa,gBAAgB,iBAAiB,EAAE,yDAAyD,gBAAgB,uBAAuB,WAAW,YAAY,gBAAgB,iBAAiB,eAAe,uBAAuB,oBAAoB,qBAAqB,EAAE,iEAAiE,cAAc,eAAe,gBAAgB,iBAAiB,wBAAwB,sBAAsB,0DAA0D,qCAAqC,6BAA6B,wCAAwC,wCAAwC,gCAAgC,EAAE,yBAAyB,qCAAqC,sCAAsC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACE5kC;AACsB;AACoB;AACnC;AACL;AAG+B;AAOxE,IAAa,eAAe,GAA5B;IAQE,YAAoB,EAAe,EACf,UAAuB,EACvB,MAAc,EACd,cAA8B;QAH9B,OAAE,GAAF,EAAE,CAAa;QACf,eAAU,GAAV,UAAU,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QATlD,eAAU,GAAG,SAAS,CAAC;QAEvB,cAAS,GAAG,KAAK,CAAC;QAGlB,eAAU,GAAG,iDAAiD,CAAC;IAKlD,CAAC;IAEd,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YACjE,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAC/B,CAAC,CAAC,CAAC;QAE/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC;YAChB,aAAa,EAAE,CAAC,SAAS,CAAC;SAC7B,CAAC,CAAC;IACnB,CAAC;IAED,QAAQ;QAEN,MAAM,IAAI,GAAG,IAAI,gDAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAE3D,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;CACF;AA3CY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;;;KAGvB,CAAC;qCASwB,0DAAW;QACH,yDAAW;QACf,sDAAM;QACE,8EAAc;GAXvC,eAAe,CA2C3B;AA3C2B;;;;;;;;;;;;;;;ACftB;IACJ,YAAoB,KAAa,EACb,QAAgB,EAChB,IAAa,EACb,aAAsB,EACtB,UAAiB,EACjB,SAAgB,EAChB,QAAiB,EACjB,SAAkB,EAClB,QAAiB,EACjB,MAAe;QATf,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAS;QACb,kBAAa,GAAb,aAAa,CAAS;QACtB,eAAU,GAAV,UAAU,CAAO;QACjB,cAAS,GAAT,SAAS,CAAO;QAChB,aAAQ,GAAR,QAAQ,CAAS;QACjB,cAAS,GAAT,SAAS,CAAS;QAClB,aAAQ,GAAR,QAAQ,CAAS;QACjB,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;CACzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXD;;;EAGE;AAEyC;AAMC;AACT;AAEW;AACW;AAGzD,IAAa,gBAAgB,GAA7B;IAEE,YAAqB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAC3C,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAEhD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,YAAY,GAAG,2BAA2B,CAAC;YAC/C,IAAI,UAAU,GAAG,uBAAuB,CAAC;YACzC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxB,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;gBACnC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;YACjC,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,qEAAc,EAAE,EAAC,IAAI,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAC,EAAC,CAAC,CAAC;YACvF,MAAM,CAAC,wDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAlBY,gBAAgB;IAD5B,gEAAU,EAAE;qCAGkB,2DAAS;GAF3B,gBAAgB,CAkB5B;AAlB4B;;;;;;;;;;;;ACnB7B,uhBAAuhB,cAAc,iEAAiE,gBAAgB,wP;;;;;;;;;;;ACAtnB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCuD;AACM;AAET;AAOpD,IAAa,cAAc,GAA3B;IAIE,YAA4C,IAAuC;QAAvC,SAAI,GAAJ,IAAI,CAAmC;IAAG,CAAC;IAEvF,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;CAEF;AAR0B;IAAxB,+DAAS,CAAC,YAAY,CAAC;8BAAa,oEAAc;kDAAC;AAFzC,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;;;KAGtB,CAAC;IAKa,uEAAM,CAAC,iEAAe,CAAC;;GAJzB,cAAc,CAU1B;AAV0B;;;;;;;;;;;;ACX3B,89G;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,eAAe,GAA5B;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;;;KAGvB,CAAC;;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;ACP5B,o4FAAo4F,2BAA2B,k1CAAk1C,yBAAyB,+OAA+O,4BAA4B,+OAA+O,kDAAkD,+cAA+c,wgEAAwgE,yBAAyB,yvD;;;;;;;;;;;ACAtyO,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0F;AAEpC;AACkB;AAEjB;AAEd;AAOzC,IAAa,eAAe,GAA5B;IAkBA,YAAoB,WAAwB,EACxB,MAAc,EACd,mBAAwC;QAFxC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QAlB5D,gCAAgC;QAClB,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAUvD,wBAAwB;QACpB,sBAAiB,GAAmB,EAAE,CAAC;QACvC,4BAAuB,GAAG,CAAC,CAAC;IAKgC,CAAC;IAE/D,QAAQ;QAEP,iBAAiB;QAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,UAAmB,EAAE,EAAE;YAChF,YAAY;YACF,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACnC,0CAA0C;YAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,qBAAqB;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;gBACrD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAG1C,oBAAoB;gBACtB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,aAAsB,EAAE,EAAE;oBAClE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBACnC,CAAC,CAAC,CAAC;gBAEpC,sDAAsD;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,mBAAmB,CAAC,qBAAqB;yBAC/C,SAAS,CAAC,CAAC,YAA4B,EAAE,EAAE;wBAC5C,2CAA2C;wBAC3C,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACzF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAE/D,CAAC,CAAC,CAAC;oBACnC,0FAA0F;oBACvF,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,CAAC;gBAC5D,CAAC;YACH,CAAC;QAEjB,CAAC,CAAC,CAAC;IAEL,CAAC;IACC,+BAA+B;IAC/B,sBAAsB,CAAC,gBAA8B;QACnD,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;IACrE,CAAC;IAED,0DAA0D;IAC1D,sBAAsB;QACpB,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC;IACxC,CAAC;IAED,kDAAkD;IAClD,kBAAkB;QAChB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;IACpC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEH,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAEC,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;IAC/C,CAAC;CAEF;AA/Fa;IAAT,4DAAM,EAAE;;sDAA0C;AAC1C;IAAR,2DAAK,EAAE;;+CAAiB;AAChB;IAAR,2DAAK,EAAE;;sDAAwB;AACvB;IAAR,2DAAK,EAAE;8BAAc,+DAAW;oDAAC;AANzB,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;;;KAGvB,CAAC;qCAmB+B,8DAAW;QAChB,sDAAM;QACO,iFAAmB;GApB/C,eAAe,CAkG3B;AAlG2B;;;;;;;;;;;;ACd5B,qtG;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C,IAAa,oBAAoB,GAAjC;CACC;AADY,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;;;KAG7B,CAAC;GACW,oBAAoB,CAChC;AADgC;;;;;;;;;;;;;;;ACL3B;IACF,YACuB,SAAkB,EAClB,iBAAkC,EAClC,MAAe;QAFf,cAAS,GAAT,SAAS,CAAS;QAClB,sBAAiB,GAAjB,iBAAiB,CAAiB;QAClC,WAAM,GAAN,MAAM,CAAS;IAAG,CAAC;CAC7C;;;;;;;;;;;;;;;ACPK;IACF,YACsB,MAAc,EACd,SAAiB,EACjB,SAAkB;QAFlB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QACjB,cAAS,GAAT,SAAS,CAAS;IACrC,CAAC;CACP;;;;;;;;;;;;;;;ACLK;IAEF,YAAoB,cAAuB,EACvB,eAAwB,EACxB,aAAsB,EACtB,OAAgB,EAChB,SAAkB,EAClB,iBAAkC,EAClC,MAAe,EACf,UAAmB,EACnB,UAAmB,EACnB,OAAgB;QAThB,mBAAc,GAAd,cAAc,CAAS;QACvB,oBAAe,GAAf,eAAe,CAAS;QACxB,kBAAa,GAAb,aAAa,CAAS;QACtB,YAAO,GAAP,OAAO,CAAS;QAChB,cAAS,GAAT,SAAS,CAAS;QAClB,sBAAiB,GAAjB,iBAAiB,CAAiB;QAClC,WAAM,GAAN,MAAM,CAAS;QACf,eAAU,GAAV,UAAU,CAAS;QACnB,eAAU,GAAV,UAAU,CAAS;QACnB,YAAO,GAAP,OAAO,CAAS;IACrB,CAAC;CACnB;;;;;;;;;;;;ACdD,mB;;;;;;;;;;;ACAA,0BAA0B,sBAAsB,uBAAuB,EAAE,kBAAkB,kCAAkC,6BAA6B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3F;AACY;AACJ;AACR;AACR;AACiC;AAO1F,IAAa,4BAA4B,GAAzC;IAIE,YAAoB,cAA8B,EAC9B,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,aAAmC;QAJnC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAsB;IACzC,CAAC;IAEf,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,IAAI,gFAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAI,wBAAwB;QACvF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAyB,uCAAuC;QACvG,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IAE3C,CAAC;IAED,eAAe;QACb,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,CAAC;QACpF,CAAC,EAAE,CAAC,CAAC,CAAC;IAER,CAAC;CACF;AA5BY,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;;;KAGrC,CAAC;qCAKoC,8EAAc;QACtB,sDAAM;QACP,8DAAc;QACR,8DAAW;QACT,kGAAoB;GAR5C,4BAA4B,CA4BxC;AA5BwC;;;;;;;;;;;;ACZzC,wXAAwX,mCAAmC,8fAA8f,mCAAmC,oe;;;;;;;;;;;ACA57B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AACN;AACF;AAOzC,IAAa,4BAA4B,GAAzC;IAME,YAAoB,QAAkB,EAClB,MAAc;QADd,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QALlC,sBAAiB,GAAG,KAAK,CAAC;IAKW,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IACD,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;CAGF;AAbU;IAAR,2DAAK,EAAE;;iEAAqB;AAJlB,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;;;KAGtC,CAAC;qCAO8B,wDAAQ;QACV,sDAAM;GAPvB,4BAA4B,CAiBxC;AAjBwC;;;;;;;;;;;;ACTzC,6iS;;;;;;;;;;;ACAA,4BAA4B,uBAAuB,gBAAgB,uBAAuB,sBAAsB,qBAAqB,EAAE,uBAAuB,mBAAmB,iBAAiB,kBAAkB,EAAE,uBAAuB,mBAAmB,EAAE,iBAAiB,mBAAmB,EAAE,iBAAiB,mBAAmB,EAAE,qBAAqB,mBAAmB,EAAE,gBAAgB,mBAAmB,EAAE,mBAAmB,mBAAmB,EAAE,wBAAwB,mBAAmB,EAAE,uBAAuB,mBAAmB,EAAE,gBAAgB,sBAAsB,sBAAsB,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApiB;AAC1B;AAC+B;AACf;AAE+B;AAE5C;AACE;AAEW;AACyB;AACA;AAW1F,IAAa,uBAAuB,GAApC;IA8BE,YAAoB,EAAe,EACf,MAAc,EACd,KAAqB,EACrB,cAA8B,EAC9B,mBAAwC,EACxC,oBAA0C,EAC1C,oBAA0C,EAC1C,aAA4B;QAP5B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,kBAAa,GAAb,aAAa,CAAe;QAlChD,gBAAW,GAAG,CAAC,CAAC;QAchB,mBAAc,GAAoB;YAChC,MAAM,EAAE,MAAM;SACf,CAAC;QAMF,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;IAS4B,CAAC;IAEpD,QAAQ;QAEA,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACG,IAAI,CAAC,WAAW,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAE3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC3C,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;aACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;gBAEzD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YACxC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;gBACzD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YACxC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAClC,CAAC;QACb,CAAC,CAAC,CAAC;IAEjB,CAAC;IAED,cAAc;QAEZ,IAAI,CAAC,aAAa;aACC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,IAAI,EAAC,CAAC;aACpC,SAAS,CAAC,MAAM,CAAC,EAAE;YACV,EAAE,CAAC,CAAE,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC;gBACnB,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;gBACpC,IAAI,CAAC,UAAU,GAAG,IAAI,8DAAW,CACb,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,EACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,EACrC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,EACnC,WAAW,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,WAAW,GAAG,GAAG,CACvB,CAAC;gBACpB,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,2BAA2B,CAAC,CAAC;YACpF,CAAC;QACX,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,4DAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAErF,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;IAGD,YAAY;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IAEZ,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;CACZ;AAnIY,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;;;KAGhC,CAAC;qCA+BwB,0DAAW;QACP,sDAAM;QACP,8DAAc;QACL,8EAAc;QACT,yEAAmB;QAClB,kGAAoB;QACpB,kGAAoB;QAC3B,wDAAa;GArCrC,uBAAuB,CAmInC;AAnImC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBK;AAC0B;AAEW;AACvB;AACgD;AACe;AAG/G,MAAM,aAAa,GAAW;IACjC;QACI,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,mEAAgB,EAAE,QAAQ,EAAE;YACpD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAC;YACxD,EAAC,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,mHAAuB,EAAC;YACnE,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kIAA4B,EAAC;SAC5D;KACJ;CAEJ,CAAC;AAOF,IAAa,oBAAoB,GAAjC;CAAqC;AAAxB,oBAAoB;IAJhC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC/C,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AC1BS;AAW1C,IAAa,gBAAgB,GAA7B;IACI,gBAAe,CAAC;CAEnB;AAHY,gBAAgB;IAR5B,+DAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE;;;oCAGsB;KACnC,CAAC;;GAEW,gBAAgB,CAG5B;AAH4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXY;AACsB;AAE/D,0DAA0D;AAC1D,UAAU;AAEsD;AACT;AAGuB;AACe;AAC2B;AAEjE;AACgD;AACe;AAEzD;AACyB;AACA;AAE1C;AAM5C,sBAAsB;AAwBtB,IAAa,aAAa,GAA1B;CAA6B;AAAhB,aAAa;IArBzB,8DAAQ,CAAC;QACN,YAAY,EAAE;YACZ,mEAAgB;YAChB,0FAAqB;YACrB,yGAAqB;YACrB,mHAAuB;YACvB,oIAA4B;YAC5B,kIAA4B;SAC7B;QACD,OAAO,EAAE;YAEL,4EAAoB;YACpB,kEAAY;YACZ,2DAAe,CAAC,OAAO,CAAC,kCAAkC,CAAC;YAC3D,4EAAsB,CAAC,OAAO,EAAE;SAEnC;QACD,SAAS,EAAG,CAAE,0EAAmB;YACnB,mGAAoB;YACpB,mGAAoB,CAAE;KACvC,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDqD;AAEf;AAEd;AACM;AACX;AAG7C,IAAa,oBAAoB,GAAjC;IAII,YAAoB,IAAU,EACV,mBAAwC;QADxC,SAAI,GAAJ,IAAI,CAAM;QACV,wBAAmB,GAAnB,mBAAmB,CAAqB;QAF5D,cAAS,GAAG,uFAAmB,CAAC,OAAO,CAAC,CAAK,iBAAiB;IAEC,CAAC;IAGhE,cAAc,CAAC,OAAgB;QAE7B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE1B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAErC,MAAM,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,uBAAuB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACxE,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC;QAC1C,CAAC,CAAC;YACF,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IAED,eAAe;QACX,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,wBAAwB,GAAG,SAAS,GAAG,KAAK,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC;aACzF,SAAS,CACN,CAAC,GAAa,EAAE,EAAE;YACd,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,0BAA0B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjG,CAAC,CACJ,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,KAAe;QACxB,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,0DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;CACJ;AAzCY,oBAAoB;IADhC,gEAAU,EAAE;qCAKiB,kDAAI;QACW,yEAAmB;GALnD,oBAAoB,CAyChC;AAzCgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRU;AACa;AAEjB;AAE+B;AACR;AACrB;AACsC;AAG/E,IAAa,oBAAoB,GAAjC;IAMI,YAAoB,IAAU,EACV,MAAc,EACd,mBAAwC,EACxC,cAA8B;QAH9B,SAAI,GAAJ,IAAI,CAAM;QACV,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAPpD,cAAS,GAAG,uFAAmB,CAAC,OAAO,CAAC;QAExC,sBAAiB,GAAG,IAAI,oDAAO,EAAkB,CAAC;QAClD,mBAAc,GAAG,IAAI,oDAAO,EAAmB,CAAC;IAIO,CAAC;IAExD,gBAAgB,CAAC,cAA2B;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAEnE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,gBAAgB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC;aAC1E,SAAS,CAAC,CAAC,GAAa,EAAE,EAAE;YACzB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAExB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC;YACxE,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC/F,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,CAAC;QAEL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAChC,CAAC;IAER,CAAC;CACJ;AA9BY,oBAAoB;IADhC,gEAAU,EAAE;qCAOiB,kDAAI;QACF,sDAAM;QACO,yEAAmB;QACxB,8EAAc;GATzC,oBAAoB,CA8BhC;AA9BgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX2C;AAGzB;AACI;AAChB;AACE;AAGU;AACgB;AAKnE,IAAa,mBAAmB,GAAhC;IAcI,YACY,IAAU,EACV,MAAc,EACd,WAAwB,EACxB,cAA8B;QAH9B,SAAI,GAAJ,IAAI,CAAM;QACV,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAhB1C,cAAS,GAAG,uFAAmB,CAAC,OAAO,CAAC;QACxC,sBAAiB,GAAmB,EAAE,CAAC;QACvC,mBAAc,GAAoB,EAAE,CAAC,CAA8B,4BAA4B;QAC/F,0BAAqB,GAAG,IAAI,oDAAO,EAAkB,CAAC;QACtD,uBAAkB,GAAG,IAAI,oDAAO,EAAmB,CAAC;QAGpD,gBAAW,GAAG,KAAK,CAAC;IASyB,CAAC;IAGlD,qEAAqE;IACrE,uBAAuB;QACjB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,YAA4B,EAAE,EAAE;YAC5E,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;YACtC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAE,+BAA+B;QAC7H,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,cAA+B,EAAE,EAAE;YAC3E,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACT,CAAC;IAED,uEAAuE;IACrE,mBAAmB,CAAC,mBAAiC;QAEjD,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAE,CAAC,YAA0B,EAAE,EAAE;YAC9D,MAAM,CAAC,YAAY,CAAC,MAAM,KAAK,mBAAmB,CAAC,MAAM,CAAC;QAC1D,CAAC,CAAE,CAAC;QAE7B,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAE,uBAAuB,EAAE,MAAM,CAAC,CAAC;YACnE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAA2B,+BAA+B;QACpH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;QACpE,CAAC;IAEL,CAAC;IAED,uCAAuC;IACnC,uBAAuB,CAAC,gBAA8B;QAElD,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACxE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAgC,mBAAmB;QACpG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAyB,oCAAoC;IACzH,CAAC;IAEL,uEAAuE;IACnE,0BAA0B,CAAC,cAAc;QACjC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACxD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC;IACpB,CAAC;IAED,oBAAoB;QAClB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,kBAAkB;QAEhB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,MAAM;QACJ,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEpD,MAAM,MAAM,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAEjE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,SAAS,GAAG,KAAK,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC;aACpF,SAAS,CACG,CAAC,GAAa,EAAE,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAG,+BAA+B;QAC9F,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAChC,CAAC;IAEtB,CAAC;CACN;AAzGY,mBAAmB;IAF/B,gEAAU,EAAE;qCAiBS,kDAAI;QACF,sDAAM;QACD,8DAAW;QACR,8EAAc;GAlBjC,mBAAmB,CAyG/B;AAzG+B;;;;;;;;;;;;AChBhC,uXAAuX,mCAAmC,mRAAmR,mCAAmC,syC;;;;;;;;;;;ACAhtB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACd;AACF;AAOzC,IAAa,qBAAqB,GAAlC;IAIE,YAAoB,QAAkB,EAClB,MAAc;QADd,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAIvC,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;CAGF;AApBU;IAAR,2DAAK,EAAE;;0DAAqB;AAFlB,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;;;KAG9B,CAAC;qCAK8B,wDAAQ;QACV,sDAAM;GALvB,qBAAqB,CAsBjC;AAtBiC;;;;;;;;;;;;ACTlC,snCAAsnC,qBAAqB,gUAAgU,wBAAwB,oFAAoF,4CAA4C,wQAAwQ,mCAAmC,0V;;;;;;;;;;;ACA94D,4BAA4B,uBAAuB,gBAAgB,uBAAuB,sBAAsB,qBAAqB,EAAE,cAAc,gBAAgB,EAAE,kCAAkC,6BAA6B,qBAAqB,WAAW,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtN;AAIM;AACK;AAExB;AAQrC,IAAa,qBAAqB,GAAlC;IAOE,YAAqB,mBAAwC,EACxC,WAAwB;QADxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QAN3C,sBAAiB,GAAmB,EAAE,CAAC;QACvC,0BAAqB,GAAG,IAAI,oDAAO,EAAgB,CAAC;QACpD,gBAAW,GAAG,CAAC,CAAC;IAI8B,CAAC;IAEjD,QAAQ;QACA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;QACzE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,GAAG,CAAC,CAAE,MAAM,MAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC;QAC3C,CAAC;IACT,CAAC;CAEF;AAlBY,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;;;KAG7B,CAAC;qCAQ0C,yEAAmB;QAC3B,8DAAW;GARlC,qBAAqB,CAkBjC;AAlBiC;;;;;;;;;;;;;;;;;;;;;;ACfkB;AAKpD,IAAa,YAAY,GAAzB;IAEE,SAAS,CAAC,KAAU,EAAE,KAAa;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC;QACzC,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;CAEF;AATY,YAAY;IAHxB,0DAAI,CAAC;QACJ,IAAI,EAAE,UAAU;KACjB,CAAC;GACW,YAAY,CASxB;AATwB;;;;;;;;;;;;;;;;;;;;;;ACL2B;AAKpD,IAAa,WAAW,GAAxB;IAEE,SAAS,CAAC,KAAU,EAAE,KAAa;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC;QACzC,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;CAEF;AATY,WAAW;IAHvB,0DAAI,CAAC;QACJ,IAAI,EAAE,SAAS;KAChB,CAAC;GACW,WAAW,CASvB;AATuB;;;;;;;;;;;;;;;;;;;;;;;;;ACJuB;AACN;AACyB;AAClE,sBAAsB;AAC+C;AACrE,sBAAsB;AAC4C;AAelE,IAAa,YAAY,GAAzB;CAA4B;AAAf,YAAY;IAbxB,8DAAQ,CAAC;QAER,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,iEAAW;YACX,sEAAgB;YAChB,iEAAW;YACX,kEAAY;SACf;KAEF,CAAC;GACW,YAAY,CAAG;AAAH;;;;;;;;;;;;;;ACrBzB,+DAAe;IAEX;QACI,kCAAkC;QAClC,IAAI,EAAE;;;2UAG6T;KACtU;IACD;QACI,8BAA8B;QAE9B,IAAI,EAAE;;;2UAG6T;KACtU;IACD;QACI,gCAAgC;QAEhC,IAAI,EAAE;;;2UAG6T;KACtU;IACD;QACI,8BAA8B;QAE9B,IAAI,EAAE;;;2UAG6T;KACtU;IACD;QACI,+BAA+B;QAE/B,IAAI,EAAE;;;2UAG6T;KACtU;CAEJ;;;;;;;;;;;;;;;AC1CK;IACJ,YACmB,OAAe,EACf,SAAiB,EACjB,UAAmB,EACnB,UAAmB,EACnB,gBAA0B;QAJ1B,YAAO,GAAP,OAAO,CAAQ;QACf,cAAS,GAAT,SAAS,CAAQ;QACjB,eAAU,GAAV,UAAU,CAAS;QACnB,eAAU,GAAV,UAAU,CAAS;QACnB,qBAAgB,GAAhB,gBAAgB,CAAU;IAAG,CAAC;CAClD;;;;;;;;;;;;;;;ACPK;IAiBI,YACY,OAAe,EACf,kBAAyB,EACzB,aAAsB,EACtB,cAAuB,EACvB,eAAmC,EACnC,aAAsB,EACtB,cAAuB,EACvB,eAAmC,EACnC,aAAsB,EACtB,cAAuB,EACvB,eAAmC,EACnC,aAAsB,EACtB,cAAuB,EACvB,eAAmC;QAG7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;CACV;;;;;;;;;;;;;;;AChDK;IAkBJ,YACY,OAAe,EACf,SAAiB,EACjB,UAAmB,EACnB,gBAAuB,EACvB,kBAA2B,EAC3B,UAAmB,EACnB,UAAmB,EACnB,WAAoB,EACpB,aAAsB,EACtB,WAAoB,EACpB,YAAqB,EACrB,MAAe,EACf,iBAAsC,EACtC,UAAmB;QAGzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAEjD,CAAC;CACF;;;;;;;;;;;;ACpDD,69C;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,iBAAiB,GAA9B;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;;;KAG1B,CAAC;;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;ACP9B,wqB;;;;;;;;;;;ACAA,+BAA+B,oBAAoB,cAAc,YAAY,cAAc,aAAa,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhE;AACW;AACE;AACzB;AAUjD,IAAa,sBAAsB,GAAnC;IAIE,YAAoB,cAA8B,EAC9B,KAAqB;QADrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QAFzC,gBAAW,GAAG,EAAE,CAAC;IAE4B,CAAC;IAE9C,QAAQ;QAEN,IAAI,CAAC,YAAY,GAAG,IAAI,gFAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAgB,4CAA4C;QAC9G,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAE7D,CAAC;CAEF;AAdY,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;;;KAG/B,CAAC;qCAKoC,8EAAc;QACvB,8DAAc;GAL9B,sBAAsB,CAclC;AAdkC;;;;;;;;;;;;ACbnC,gRAAgR,wBAAwB,qGAAqG,iCAAiC,oLAAoL,8BAA8B,08E;;;;;;;;;;;ACAhoB,6BAA6B,uBAAuB,eAAe,YAAY,iBAAiB,aAAa,mBAAmB,EAAE,WAAW,kBAAkB,sBAAsB,mBAAmB,EAAE,YAAY,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACArM;AACA;AACF;AAOvD,IAAa,sBAAsB,GAAnC;IAKE,YAAoB,MAAc,EACd,KAAqB;QADrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAJzC,gBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAImB,CAAC;IAE7C,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAE,yBAAyB,CAAC,CAAC;IAC1C,CAAC;IACD,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAE,yBAAyB,CAAC,CAAC;IAC1C,CAAC;IACD,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAE,yBAAyB,CAAC,CAAC;IAC1C,CAAC;IACD,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAE,yBAAyB,CAAC,CAAC;IAC1C,CAAC;IACD,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAE,yBAAyB,CAAC,CAAC;IAC1C,CAAC;IACD,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAE,yBAAyB,CAAC,CAAC;IAC1C,CAAC;CACF;AA3BU;IAAR,2DAAK,EAAE;8BAAe,yDAAK;4DAAC;AACpB;IAAR,2DAAK,EAAE;;uEAAkC;AAJ/B,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;;;KAG/B,CAAC;qCAM4B,sDAAM;QACP,8DAAc;GAN9B,sBAAsB,CA8BlC;AA9BkC;;;;;;;;;;;;ACTnC,ilF;;;;;;;;;;;ACAA,+BAA+B,oBAAoB,cAAc,YAAY,cAAc,aAAa,mBAAmB,EAAE,UAAU,uBAAuB,eAAe,kBAAkB,EAAE,WAAW,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCvL;AACI;AAGgB;AAC3B;AACU;AAWhE,IAAa,sBAAsB,GAAnC;IAYM,YAAoB,cAA8B,EAC9B,oBAA0C,EAC1C,eAAgC,EAChC,KAAqB,EACrB,MAAc;QAJd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAElB,QAAQ;QAEC,qCAAqC;QAEpC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAK,mCAAmC;QAC9F,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3F,CAAC;IAED,eAAe;QAEb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnF,CAAC;IACD,iBAAiB;QAEf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAEnF,CAAC;IACD,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnF,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnF,CAAC;CAEF;AAhD0B;IAAxB,+DAAS,CAAC,YAAY,CAAC;;0DAAmB;AAFhC,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;;;KAGhC,CAAC;qCAawC,8EAAc;QACR,qEAAoB;QACzB,iEAAe;QACzB,8DAAc;QACb,sDAAM;GAhB3B,sBAAsB,CAkDlC;AAlDkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBgB;AACK;AAKX;AACV;AACI;AACoB;AAI3D,IAAa,eAAe,GAA5B;IAMI,YAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHvB,iBAAY,GAAG,IAAI,oDAAO,EAAS,CAAC;QACpC,gBAAW,GAAG,IAAI,oDAAO,EAAU,CAAC;IAEV,CAAC;IAGlC,cAAc,CAAC,OAAe;QAEpB,6DAA6D;QAE7D,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,GAAG,OAAO,GAAG,SAAS,GAAG,KAAK,CAAC;aACjF,GAAG,CACF,CAAC,OAAiB,EAAE,EAAE;YAEhB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAC5B,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAe,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAEnE,CAAC;IAEb,yCAAyC;IACzC,cAAc,CAAC,OAAgB;QAE7B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,GAAG,SAAS,GAAG,KAAK,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAClG,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE;YAC1B,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC;aAED,KAAK,CAAC,CAAC,KAAe,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAW,2BAA2B;IAE7G,CAAC;IAED,YAAY,CAAC,KAAe;QAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,0DAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,4BAA4B;IAE5B,qBAAqB,CAAC,WAAmB,EAAE,OAAe;QAExD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACT,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtB,KAAK,GAAG,CAAO,MAAM;gBAErB,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBACnC,KAAK,CAAC;YACN,KAAK,GAAG,CAAQ,WAAW;gBAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YACN,KAAK,GAAG,CAAS,eAAe;gBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAGnC,KAAK,CAAC;YACN,KAAK,GAAG,CAAS,iBAAiB;gBAClC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YACN,KAAK,GAAG,CAAU,eAAe;gBACjC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACP,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEjC,KAAK,CAAC;YACN,KAAK,GAAG,CAAU,gBAAgB;gBAClC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAGnC,KAAK,CAAC;YACN,KAAK,GAAG,CAAU,oBAAoB;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EAGJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN,CAAC;gBAEpC,KAAK,CAAC;YACN,KAAK,GAAG,CAAW,oBAAoB;gBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EAGJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YACN,KAAK,GAAG,CAAW,oBAAoB;gBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EAGJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAGnC,KAAK,CAAC;YACN,KAAK,IAAI,CAAW,oBAAoB;gBACxC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAO,sBAAsB;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EAEJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAQ,sBAAsB;gBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EAEJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAS,sBAAsB;gBACxC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EAEJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAS,sBAAsB;gBACxC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EAEJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAU,sBAAsB;gBACzC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAU,sBAAsB;gBACzC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAW,iCAAiC;gBACrD,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAW,4BAA4B;gBAChD,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,KAAK,EAEL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAW,iBAAiB;gBACrC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAW,kBAAkB;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAW,kBAAkB;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAW,kBAAkB;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,IAAI,CACL;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAY,iBAAiB;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,CACL;gBAEnC,KAAK,CAAC;YAEN,KAAK,IAAI,CAAY,kBAAkB;gBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,CAAC,IAAI,EACL,OAAO,EACP,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAGL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEL,KAAK,EACL,KAAK,EAEL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,CACN;gBAEnC,KAAK,CAAC;QAEN,CAAC;QAEf,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CAEA;AAh5BY,eAAe;IAD3B,gEAAU,EAAE;qCAOiB,kDAAI;GANrB,eAAe,CAg5B3B;AAh5B2B;;;;;;;;;;;;ACb5B,0D;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,wBAAwB,GAArC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;;;KAGlC,CAAC;;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;ACPrC,wQAAwQ,wBAAwB,iGAAiG,iCAAiC,kLAAkL,4BAA4B,gyD;;;;;;;;;;;ACAhnB,6BAA6B,uBAAuB,eAAe,YAAY,iBAAiB,aAAa,mBAAmB,EAAE,WAAW,kBAAkB,sBAAsB,mBAAmB,EAAE,YAAY,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACArM;AACF;AAEE;AAOzD,IAAa,oBAAoB,GAAjC;IAKE,YAAoB,MAAc,EACd,KAAqB;QADrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAFzC,gBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAEoB,CAAC;IAE9C,QAAQ;QACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAChC,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;IACD,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;IACD,iBAAiB;QAEf,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;IACD,iBAAiB;QAEf,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;CAEF;AA9BU;IAAR,2DAAK,EAAE;8BAAe,yDAAK;0DAAC;AAFlB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;;;KAG7B,CAAC;qCAM4B,sDAAM;QACP,8DAAc;GAN9B,oBAAoB,CAgChC;AAhCgC;;;;;;;;;;;;ACVjC,y7L;;;;;;;;;;;ACAA,iCAAiC,cAAc,eAAe,iBAAiB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA/C;AAOlD,IAAa,wBAAwB,GAArC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;KAGjC,CAAC;;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;ACPrC,+hKAA+hK,qBAAqB,42C;;;;;;;;;;;ACApjK,+BAA+B,oBAAoB,cAAc,YAAY,cAAc,aAAa,qBAAqB,EAAE,eAAe,kBAAkB,EAAE,oBAAoB,kBAAkB,qBAAqB,EAAE,UAAU,uBAAuB,eAAe,kBAAkB,EAAE,WAAW,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACjC;AACF;AACH;AAID;AACZ;AAE+D;AAC1D;AAEyB;AAQlF,IAAa,wBAAwB,GAArC;IAoBE,YAAoB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,eAAgC,EAChC,cAA8B,EAC9B,wBAAkD,EAClD,QAAsB,CAAO,4CAA4C;IAC5C,kCAAkC;IAClC,mDAAmD;;QARhF,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAc,CAAO,4CAA4C;QAnB7F,sBAAiB,GAAG,EAAE,CAAC;QAIvB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,KAAK,CAAC;IAgBf,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAK,gCAAgC;QAChC,2CAA2C;QAE5F,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAE;YACnC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAGtC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAE,MAAM,CAAC,EAAE;YAC1D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAE3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,gEAAgE;oBAChE,8CAA8C;oBAC9C,uEAAuE;oBAEvE,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;oBAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAElG,CAAC;YACH,CAAC;QACT,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;QAER,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QAEN,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5D,MAAM,OAAO,GAAG,IAAI,6DAAO,CAAC,IAAI,CAAC,OAAO,EAClB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,EACvC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,OAAO,CAAC;qBACzB,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACP,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACtF,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBAEjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,OAAO,CAAC;qBAC5B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACf,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBAC9E,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBAEjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,CAAC;QACP,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAExB,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAE;YACnC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,eAAe,EAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9E,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7B,CAAC;CACN;AA/H2B;IAAzB,+DAAS,CAAC,aAAa,CAAC;8BAAc,wDAAU;6DAAC;AAlBvC,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;QAGhC,aAAa,EAAE,+DAAiB,CAAC,IAAI;KACtC,CAAC;qCAqB2B,8DAAc;QACb,sDAAM;QACE,+DAAc;QACb,iEAAe;QAChB,8EAAc;QACJ,+GAAwB;QACxC,sEAAY,CAAO,4CAA4C;QAC5C,kCAAkC;QAClC,mDAAmD;;GA5BzF,wBAAwB,CAiJpC;AAjJoC;;;;;;;;;;;;ACrBrC,giKAAgiK,qBAAqB,42C;;;;;;;;;;;ACArjK,+BAA+B,oBAAoB,cAAc,YAAY,cAAc,aAAa,qBAAqB,EAAE,eAAe,kBAAkB,EAAE,oBAAoB,kBAAkB,qBAAqB,EAAE,UAAU,uBAAuB,eAAe,kBAAkB,EAAE,WAAW,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACjC;AACF;AACH;AAID;AACZ;AAE+D;AAC1D;AAEyB;AAQlF,IAAa,wBAAwB,GAArC;IAmBE,YAAoB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,eAAgC,EAChC,cAA8B,EAC9B,wBAAkD,EAClD,QAAsB,CAAO,4CAA4C;IAC5C,kCAAkC;IAClC,mDAAmD;;QARhF,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAc,CAAO,4CAA4C;QAlB7F,sBAAiB,GAAG,EAAE,CAAC;QAIvB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,KAAK,CAAC;IAef,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAK,gCAAgC;QAChC,2CAA2C;QAC5F,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAE;YACpC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAE,MAAM,CAAC,EAAE;YAC1D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBACzE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,gEAAgE;oBAChE,8CAA8C;oBAC9C,uEAAuE;oBAEvE,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;oBAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAElG,CAAC;YACH,CAAC;QACT,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;QAER,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QAEN,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7D,MAAM,QAAQ,GAAG,IAAI,6DAAO,CAAC,IAAI,CAAC,OAAO,EACnB,IAAI,CAAC,WAAW,EAChB,EAAE,EACF,EAAE,EACF,EAAE,EACF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,EACxC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC;qBAC1B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACP,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACtF,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,QAAQ,CAAC;qBAC7B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACf,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBAC9E,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,CAAC;QACP,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAExB,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAE;YACpC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,eAAe,EAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9E,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7B,CAAC;CACN;AA7H2B;IAAzB,+DAAS,CAAC,aAAa,CAAC;8BAAc,wDAAU;6DAAC;AAjBvC,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;QAGhC,aAAa,EAAE,+DAAiB,CAAC,IAAI;KACtC,CAAC;qCAoB2B,8DAAc;QACb,sDAAM;QACE,+DAAc;QACb,iEAAe;QAChB,8EAAc;QACJ,+GAAwB;QACxC,sEAAY,CAAO,4CAA4C;QAC5C,kCAAkC;QAClC,mDAAmD;;GA3BzF,wBAAwB,CA8IpC;AA9IoC;;;;;;;;;;;;ACrBrC,82JAA82J,qBAAqB,gzC;;;;;;;;;;;ACAn4J,+BAA+B,oBAAoB,cAAc,YAAY,cAAc,aAAa,qBAAqB,EAAE,eAAe,kBAAkB,EAAE,oBAAoB,kBAAkB,qBAAqB,EAAE,UAAU,uBAAuB,eAAe,kBAAkB,EAAE,WAAW,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACjC;AACF;AACH;AAID;AACZ;AAE+D;AAC1D;AAEyB;AAQlF,IAAa,wBAAwB,GAArC;IAmBE,YAAoB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,eAAgC,EAChC,cAA8B,EAC9B,wBAAkD,EAClD,QAAsB,CAAO,4CAA4C;IAC5C,kCAAkC;IAClC,mDAAmD;;QARhF,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAc,CAAO,4CAA4C;QAlB7F,sBAAiB,GAAG,EAAE,CAAC;QAIvB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,KAAK,CAAC;IAef,CAAC;IAEL,QAAQ;QAGN,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAK,gCAAgC;QAChC,2CAA2C;QAG5F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAE;YACpC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjF,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAE,MAAM,CAAC,EAAE;YAC1D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBACzE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,gEAAgE;oBAChE,8CAA8C;oBAC9C,uEAAuE;oBAEvE,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;oBAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAElG,CAAC;YACH,CAAC;QACT,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;QAER,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QAEN,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7D,MAAM,QAAQ,GAAG,IAAI,6DAAO,CAAC,IAAI,CAAC,OAAO,EACnB,IAAI,CAAC,WAAW,EAChB,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,EACxC,IAAI,CAAC,WAAW,EAChB,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC;qBAC1B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACP,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACtF,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,QAAQ,CAAC;qBAC7B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACf,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBAC9E,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,CAAC;QACP,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAExB,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAE;YACpC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,eAAe,EAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9E,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7B,CAAC;CACN;AAvI2B;IAAzB,+DAAS,CAAC,aAAa,CAAC;8BAAc,wDAAU;6DAAC;AAjBvC,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;QAGhC,aAAa,EAAE,+DAAiB,CAAC,IAAI;KACtC,CAAC;qCAoB2B,8DAAc;QACb,sDAAM;QACE,+DAAc;QACb,iEAAe;QAChB,8EAAc;QACJ,+GAAwB;QACxC,sEAAY,CAAO,4CAA4C;QAC5C,kCAAkC;QAClC,mDAAmD;;GA3BzF,wBAAwB,CAwJpC;AAxJoC;;;;;;;;;;;;ACrBrC,82JAA82J,qBAAqB,gzC;;;;;;;;;;;ACAn4J,+BAA+B,oBAAoB,cAAc,YAAY,cAAc,aAAa,qBAAqB,EAAE,eAAe,kBAAkB,EAAE,oBAAoB,kBAAkB,qBAAqB,EAAE,UAAU,uBAAuB,eAAe,kBAAkB,EAAE,WAAW,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACjC;AACF;AACH;AAID;AACZ;AAE+D;AAC1D;AAEyB;AAQlF,IAAa,wBAAwB,GAArC;IAmBE,YAAoB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,eAAgC,EAChC,cAA8B,EAC9B,wBAAkD,EAClD,QAAsB,CAAO,4CAA4C;IAC5C,kCAAkC;IAClC,mDAAmD;;QARhF,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAc,CAAO,4CAA4C;QAlB7F,sBAAiB,GAAG,EAAE,CAAC;QAIvB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,KAAK,CAAC;IAef,CAAC;IAEL,QAAQ;QAGN,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAK,gCAAgC;QAChC,2CAA2C;QAG5F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAE;YACpC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAElF,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAE,MAAM,CAAC,EAAE;YAC1D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBACzE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,gEAAgE;oBAChE,8CAA8C;oBAC9C,uEAAuE;oBAEvE,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;oBAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAElG,CAAC;YACH,CAAC;QACT,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;QAER,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QAEN,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7D,MAAM,QAAQ,GAAG,IAAI,6DAAO,CAAC,IAAI,CAAC,OAAO,EACnB,IAAI,CAAC,WAAW,EAChB,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,EACxC,IAAI,CAAC,WAAW,EAChB,EAAE,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC;qBAC1B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACP,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACtF,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEN,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,QAAQ,CAAC;qBAC7B,SAAS,CAAC,MAAM,CAAC,EAAE;oBAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;oBACtD,IAAI,CAAC,mBAAmB;wBACf,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBAC9E,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjE,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,CAAC;QACP,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAExB,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAE;YACpC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,eAAe,EAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9E,gBAAgB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7B,CAAC;CACN;AAvI2B;IAAzB,+DAAS,CAAC,aAAa,CAAC;8BAAc,wDAAU;6DAAC;AAjBvC,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;QAGhC,aAAa,EAAE,+DAAiB,CAAC,IAAI;KACtC,CAAC;qCAoB2B,8DAAc;QACb,sDAAM;QACE,+DAAc;QACb,iEAAe;QAChB,8EAAc;QACJ,+GAAwB;QACxC,sEAAY,CAAO,4CAA4C;QAC5C,kCAAkC;QAClC,mDAAmD;;GA3BzF,wBAAwB,CAwJpC;AAxJoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBM;AACa;AAGX;AAGV;AAE4C;AAG/E,IAAa,cAAc,GAA3B;IAGE,YAAoB,IAAU,EACV,cAA8B;QAD9B,SAAI,GAAJ,IAAI,CAAM;QACV,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAGtD,iBAAiB,CAAC,OAAe;QAE/B,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,GAAG,OAAO,GAAG,SAAS,GAAG,KAAK,CAAE;aACpE,GAAG,CAAC,CAAC,GAAa,EAAE,EAAE;YACtB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC;QACZ,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAe,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,iBAAiB,CAAC,OAAgB;QAChC,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAErC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,MAAM,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,GAAG,SAAS,GAAG,KAAK,EAAE,IAAI,EAAE,EAAC,OAAO,EAAG,MAAM,EAAC,CAAE;aAC9E,GAAG,CAAC,CAAC,GAAa,EAAE,EAAE;YACrB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAe,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,oBAAoB,CAAC,OAAgB;QACnC,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAE,IAAI,CAAC,CAAC;QACpC,MAAM,MAAM,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,+BAA+B,GAAG,SAAS,GAAG,KAAK,EAAE,IAAI,EAAE,EAAC,OAAO,EAAG,MAAM,EAAC,CAAE;aAC/E,GAAG,CAAC,CAAC,GAAa,EAAE,EAAE;YACrB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAe,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,WAAW,CAAC,KAAe;QAChC,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,CAAC,0DAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;CACF;AA9DY,cAAc;IAD1B,gEAAU,EAAE;qCAIe,kDAAI;QACM,8EAAc;GAJvC,cAAc,CA8D1B;AA9D0B;;;;;;;;;;;;ACZ3B,gRAAgR,wBAAwB,oGAAoG,iCAAiC,gMAAgM,6BAA6B,i+E;;;;;;;;;;;ACA1oB,6BAA6B,uBAAuB,eAAe,YAAY,iBAAiB,aAAa,mBAAmB,EAAE,WAAW,kBAAkB,sBAAsB,mBAAmB,EAAE,YAAY,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACArM;AACF;AAEE;AAMzD,IAAa,qBAAqB,GAAlC;IAKE,YAAoB,MAAc,EACd,KAAqB;QADrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QALzC,gBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAKmB,CAAC;IAE7C,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IACC,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IACD,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IACD,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IACD,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IACD,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IACD,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;CACJ;AA3BU;IAAR,2DAAK,EAAE;8BAAe,yDAAK;2DAAC;AACpB;IAAR,2DAAK,EAAE;;qEAAiC;AAH9B,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;;;KAG9B,CAAC;qCAM4B,sDAAM;QACP,8DAAc;GAN9B,qBAAqB,CA6BjC;AA7BiC;;;;;;;;;;;;ACTlC,gRAAgR,wBAAwB,mGAAmG,iCAAiC,oLAAoL,4BAA4B,4wC;;;;;;;;;;;ACA5nB,6BAA6B,uBAAuB,eAAe,YAAY,iBAAiB,aAAa,mBAAmB,EAAE,WAAW,kBAAkB,sBAAsB,mBAAmB,EAAE,YAAY,uBAAuB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACArM;AACF;AAEE;AAOzD,IAAa,oBAAoB,GAAjC;IAME,YAAoB,MAAc,EACd,KAAqB;QADrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QALzC,gBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAKmB,CAAC;IAE7C,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IACD,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;CACF;AAjBU;IAAR,2DAAK,EAAE;8BAAe,yDAAK;0DAAC;AACpB;IAAR,2DAAK,EAAE;;mEAAgC;AAJ7B,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;;;KAG7B,CAAC;qCAO4B,sDAAM;QACP,8DAAc;GAP9B,oBAAoB,CAoBhC;AApBgC;;;;;;;;;;;;ACVjC,miBAAmiB,iBAAiB,gKAAgK,mBAAmB,4yB;;;;;;;;;;;ACAvuB,yBAAyB,kBAAkB,sBAAsB,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCzB;AACI;AAGD;AACe;AAQ/E,IAAa,0BAA0B,GAAvC;IAUE,YAAoB,oBAA0C,EAC1C,cAA8B,EAC9B,KAAqB,EACrB,MAAc;QAHd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QATlC,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC,CAAG,sBAAsB;QAI7C,iBAAY,GAAG,KAAK,CAAC;IAKiB,CAAC;IAEvC,QAAQ;QAEN,oEAAoE;QACpE,0CAA0C;QAC1C,2DAA2D;QAE3D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAEjB,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAE7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,YAAqB,EAAE,EAAE;YACzD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7D,CAAC;IACD,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAoB,yBAAyB;QACjG,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAgB,uBAAuB;QAC/F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAS,kBAAkB;IAC5F,CAAC;IACD,oBAAoB;QAClB,8EAA8E;QAChF,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAE,CAAC;IAC3D,CAAC;CACF;AAjDY,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;;;KAGpC,CAAC;qCAW0C,qEAAoB;QAC1B,8EAAc;QACvB,8DAAc;QACb,sDAAM;GAbvB,0BAA0B,CAiDtC;AAjDsC;;;;;;;;;;;;ACdvC,gRAAgR,WAAW,yhDAAyhD,YAAY,0jBAA0jB,YAAY,g6GAAg6G,u7B;;;;;;;;;;;ACAtyL,uCAAuC,0BAA0B,EAAE,cAAc,2BAA2B,EAAE,0BAA0B,uBAAuB,EAAE,oBAAoB,iBAAiB,mBAAmB,EAAE,wBAAwB,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlM;AACH;AACc;AACf;AACiB;AAEb;AAMpE,IAAa,wBAAwB,GAArC;IA0BE,YAAoB,oBAA0C,EAC1C,cAA8B,EAC9B,KAAqB,EACrB,MAAc;QAHd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAvBlC,oBAAe,GAAS,IAAI,CAAC;QAC7B,oBAAe,GAAS,IAAI,CAAC;QAC7B,eAAU,GAAgB,EAAE,CAAC;QAC7B,aAAQ,GAAG,IAAI,CAAC;QAChB,aAAQ,GAAG,IAAI,CAAC;QAEhB,cAAS,GAAQ,4CAA4C,CAAC,CAAwB,mCAAmC;QACzH,cAAS,GAAQ,sDAAsD,CAAC,CAAc,mCAAmC;QAEzH,aAAQ,GAAG,EAAE,CAAC;QACd,sBAAiB,GAAG,EAAE,CAAC;QAKvB,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,KAAK,CAAC;QACjB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,kBAAa,GAAG,eAAe,CAAC;IAKM,CAAC;IAEvC,QAAQ;QAEN,IAAI,CAAC,WAAW,GAAG;YACG,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;YACxC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;YAClC,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE;YAChD,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;YACxC,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAE;SACzD,CAAC;QAGpB,4DAA4D;QAC5D,iDAAiD;QACjD,2DAA2D;QAE3D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAE,CAAE,MAAc,EAAG,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjB,yDAAyD;QAEtF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,QAAgB,EAAE,EAAE;YACtG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEL,CAAC;IAEO,QAAQ;QAEd,oDAAoD;QAEpD,IAAI,CAAC,QAAQ,GAAG,kEAAe,CAAC;QAEhC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEvC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEtB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/E,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC;YACvC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,UAAU,CAAC;YAE1C,iCAAiC;YAEjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;YAG/E,2DAA2D;YAE3D,4CAA4C;YAC5C,kEAAkE;YAClE,qCAAqC;YACrC,0BAA0B;YAC1B,gEAAgE;YAChE,2EAA2E;YAC3E,iGAAiG;YACjG,iHAAiH;YACjH,iDAAiD;YACjD,2BAA2B;YAC3B,WAAW;YACX,MAAM;YACN,IAAI;QAGN,CAAC;QAAC,IAAI,CAAC,CAAC;YAEN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,CAAC;YAE1D,mFAAmF;YACnF,gCAAgC;YAChC,MAAM;YAEN,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC;QAE3C,CAAC;QAED,0CAA0C;QAExC,IAAI,CAAC,iBAAiB,GAAG,IAAI,wDAAS,CAAC;YACnC,aAAa,EAAE,IAAI,0DAAW,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChE,WAAW,EAAE,IAAI,0DAAW,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5D,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YAC5C,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YAE5C,8CAA8C;SAE7C,CAAC,CAAC;IAEX,CAAC;IAED,8FAA8F;IAC9F,sDAAsD;IACtD,kBAAkB;IAClB,kFAAkF;IAClF,IAAI;IAEJ,0CAA0C;IAE1C,2CAA2C;IAC3C,yCAAyC;IACzC,uCAAuC;IACvC,qCAAqC;IACrC,sCAAsC;IACtC,4CAA4C;IACJ,2CAA2C;IACnF,OAAO;IACP,gDAAgD;IAChD,iCAAiC;IACjC,uCAAuC;IACvC,+CAA+C;IAE/C,IAAI;IACJ,2CAA2C;IAC3C,yCAAyC;IACzC,uCAAuC;IACvC,qCAAqC;IACrC,sCAAsC;IACtC,4CAA4C;IAGX,2CAA2C;IAC5E,OAAO;IACP,gDAAgD;IAEhD,iCAAiC;IACjC,uCAAuC;IACvC,+CAA+C;IAC/C,2DAA2D;IAE3D,IAAI;IAEJ,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,eAAe,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QACjC,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;IAE5C,CAAC;IAED,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,eAAe,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QACjC,CAAC,CAAC;QACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;IAE5C,CAAC;IAGD,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAErC,8FAA8F;QAC9F,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE1B,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QACxE,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3E,QAAQ,CAAC,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1D,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAyB,uBAAuB;QACtG,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAuB,yBAAyB;QACxG,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAyB,uBAAuB;QACtG,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAwB,wBAAwB;QAE7F,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACtD,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACtD,CAAC;QAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAE5E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;YACjD,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzE,CAAC;QACJ,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAGD,yBAAyB;IACzB,uEAAuE;IACvE,sBAAsB;IACtB,gEAAgE;IAChE,iDAAiD;IACjD,uEAAuE;IACvE,uFAAuF;IACvF,mDAAmD;IACnD,uBAAuB;IACvB,OAAO;IACP,IAAI;IAEJ,qBAAqB,CAAC,KAAa;QACrB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,mBAAmB,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAE,CAAC;IAC/D,CAAC;IAEH,WAAW;QACT,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;IAElD,CAAC;CACA;AAlQY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;;;KAGlC,CAAC;qCA2B0C,qEAAoB;QAC1B,8EAAc;QACvB,8DAAc;QACb,sDAAM;GA7BvB,wBAAwB,CAkQpC;AAlQoC;;;;;;;;;;;;ACZrC,iYAAiY,iBAAiB,obAAob,iBAAiB,+gBAA+gB,kCAAkC,oGAAoG,2CAA2C,qIAAqI,4BAA4B,yD;;;;;;;;;;;ACAxrD,wBAAwB,2BAA2B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCc;AACT;AAES;AACiB;AAC3C;AAMzC,IAAa,mBAAmB,GAAhC;IAOE,YAAoB,oBAA0C,EAC1C,MAAc,EACd,cAA8B;QAF9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QALlD,eAAU,GAAG,KAAK,CAAC;IAKkC,CAAC;IACtD,QAAQ;QAER,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,kBAAkB;aACrC,SAAS,CAAC,CAAC,WAAoB,EAAE,EAAE;YACzB,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAC9B,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,OAAO,CAAC,UAAmB;QAEzB,2DAA2D;QAC3D,yDAAyD;QACzD,wCAAwC;QACxC,4DAA4D;QAC5D,iDAAiD;QACjD,2DAA2D;QAG3D,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QAC9E,CAAC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;CACF;AArCS;IAAR,2DAAK,EAAE;8BAAQ,yDAAK;kDAAC;AACb;IAAR,2DAAK,EAAE;;kDAAe;AAHX,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;;;KAG5B,CAAC;qCAQ0C,qEAAoB;QAClC,sDAAM;QACE,8EAAc;GATvC,mBAAmB,CAuC/B;AAvC+B;;;;;;;;;;;;ACZhC,2lBAA2lB,6ZAA6Z,qN;;;;;;;;;;;ACAx/B,8BAA8B,kBAAkB,qBAAqB,uBAAuB,EAAE,sDAAsD,iDAAiD,8BAA8B,wBAAwB,EAAE,gDAAgD,gBAAgB,8BAA8B,EAAE,sDAAsD,wBAAwB,iDAAiD,wEAAwE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC1d;AACZ;AAGP;AAEwB;AAOjF,IAAa,wBAAwB,GAArC;IAUE,YAAoB,oBAA0C,EAC1C,MAAc,EACd,KAAqB,EACrB,cAA8B;QAH9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAXlD,WAAM,GAAY,EAAE,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;IAUP,CAAC;IAEhB,QAAQ;QAEN,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,cAAc,CAAC,oBAAoB;aACvC,SAAS,CAAC,CAAC,mBAA4B,EAAE,EAAE;YAC1C,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEpC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,wBAAwB;aAC7C,SAAS,CAAC,CAAC,YAAqB,EAAE,EAAE;YACnC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAErC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY;YAChC,SAAS,CAAC,CAAC,eAAwB,EAAE,EAAE;YAC3B,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAErC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC,CAAG,oBAAoB;IACrF,CAAC;IAID,sBAAsB;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;CACF;AAjDY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;;;KAGlC,CAAC;qCAW0C,qEAAoB;QAClC,sDAAM;QACP,8DAAc;QACL,8EAAc;GAbvC,wBAAwB,CAiDpC;AAjDoC;;;;;;;;;;;;ACdrC,6vB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,2BAA2B,GAAxC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,2BAA2B;IALvC,+DAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;;;KAGrC,CAAC;;GACW,2BAA2B,CAOvC;AAPuC;;;;;;;;;;;;ACPxC,igBAAigB,qBAAqB,40G;;;;;;;;;;;ACAthB,4BAA4B,eAAe,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAJ;AACA;AACV;AAC0B;AAOzE,IAAa,gBAAgB,GAA7B;IAIE,YAAoB,MAAc,EACd,KAAqB,EACrB,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAExC,CAAC;IAED,UAAU;QAER,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IACD,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;IAEjE,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC;IAE/E,CAAC;IAED,uBAAuB;QACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,uBAAuB;QACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,uBAAuB;QACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,uBAAuB;QACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC,CAAC;IAC/F,CAAC;CAEF;AAxDU;IAAR,2DAAK,EAAE;8BAAc,2DAAY;qDAAC;AAFxB,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;;;KAGxB,CAAC;qCAK4B,sDAAM;QACP,8DAAc;QACL,8EAAc;GANvC,gBAAgB,CA0D5B;AA1D4B;;;;;;;;;;;;;;;ACTvB;IACJ,YACqB,IAAe,EACf,OAAiB,EACjB,SAAoB,EACpB,WAAsB,EACtB,aAAwB,EACxB,WAAsB,EACtB,YAAuB,EAEvB,eAA0B,EAC1B,eAA0B,EAC1B,eAA0B,EAC1B,eAA0B,EAE1B,iBAA4B,EAC5B,iBAA4B,EAC5B,iBAA4B,EAC5B,iBAA4B,EAC5B,iBAA4B,EAC5B,iBAA4B,EAE5B,eAA0B,EAC1B,eAA0B,EAE1B,gBAA2B,EAC3B,gBAA2B,EAC3B,gBAA2B,EAC3B,gBAA2B,EAC3B,gBAA2B,EAC3B,gBAA2B;QA5B3B,SAAI,GAAJ,IAAI,CAAW;QACf,YAAO,GAAP,OAAO,CAAU;QACjB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAW;QACtB,kBAAa,GAAb,aAAa,CAAW;QACxB,gBAAW,GAAX,WAAW,CAAW;QACtB,iBAAY,GAAZ,YAAY,CAAW;QAEvB,oBAAe,GAAf,eAAe,CAAW;QAC1B,oBAAe,GAAf,eAAe,CAAW;QAC1B,oBAAe,GAAf,eAAe,CAAW;QAC1B,oBAAe,GAAf,eAAe,CAAW;QAE1B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAE5B,oBAAe,GAAf,eAAe,CAAW;QAC1B,oBAAe,GAAf,eAAe,CAAW;QAE1B,qBAAgB,GAAhB,gBAAgB,CAAW;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAW;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAW;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAW;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAW;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAW;IAC7C,CAAC;CACL;;;;;;;;;;;;ACjCD,u7DAAu7D,yBAAyB,sb;;;;;;;;;;;ACAh9D,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC+E;AACtC;AACmC;AACI;AAEpB;AAQ5D,IAAa,yBAAyB,GAAtC;IAOE,YAAoB,MAAc,EACd,WAAwB,EACxB,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAJxC,mBAAc,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAIE,CAAC;IAEvD,QAAQ;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACzD,CAAC;IAED,UAAU;QAER,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAW,eAAe;QAC9E,IAAI,CAAC,YAAY,GAAG,IAAI,gFAAY,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAM,0DAA0D;QACzH,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAI,wBAAwB;QACvF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;CACF;AAtBW;IAAT,4DAAM,EAAE;;iEAA2C;AALzC,yBAAyB;IANrC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;;;KAGnC,CAAC;qCAS4B,sDAAM;QACD,8DAAW;QACR,8EAAc;GATvC,yBAAyB,CA2BrC;AA3BqC;;;;;;;;;;;;ACdtC,09F;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,uBAAuB,GAApC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;;;KAGhC,CAAC;;GACW,uBAAuB,CAOnC;AAPmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNK;AACc;AAEL;AAGkB;AAC+C;AACe;AACG;AAEjB;AAER;AAC2B;AACF;AACA;AACA;AACA;AAIrI,MAAM,aAAa,GAAW;IAC5B,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gFAAsB,EAAE,QAAQ,EAAE;YAC5D,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+HAA2B,EAAE;YACpD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gJAAwB,EAAC;YACnD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,8IAA0B,EAAE;YACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gJAAwB,EAAC;YAExD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gIAAsB,EAAC;YAE1D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,mJAAwB,EAAC;YACnE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,wHAAoB,EAAC;YAChE,EAAE,IAAI,EAAE,8BAA8B,EAAE,SAAS,EAAE,kJAAwB,EAAC;YAC5E,EAAE,IAAI,EAAE,8BAA8B,EAAE,SAAS,EAAE,kJAAwB,EAAC;YAC5E,EAAE,IAAI,EAAE,8BAA8B,EAAE,SAAS,EAAE,kJAAwB,EAAC;YAC5E,EAAE,IAAI,EAAE,8BAA8B,EAAE,SAAS,EAAE,kJAAwB,EAAC;YAG5E,yFAAyF;SAC5F;KACF;CACA,CAAC;AAUF,IAAa,oBAAoB,GAAjC;CAAoC;AAAvB,oBAAoB;IARhC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACC,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;SAC7C;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;QACvB,SAAS,EAAE,CAAE,0DAAS,CAAE;KAEzB,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDQ;AACM;AAEgB;AAEC;AAImD;AAC/C;AACwD;AACM;AACL;AACD;AACnE;AAEC;AAEuD;AACR;AAGW;AACF;AACN;AACG;AAClB;AAEe;AAC2B;AACF;AACA;AACA;AACA;AACA;AACtC;AAEC;AACuB;AAEhB;AACxC;AAEY;AAoC3E,IAAa,kBAAkB,GAA/B;CAAkC;AAArB,kBAAkB;IAlC9B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,gFAAsB;YACtB,wIAAwB;YACxB,8IAA0B;YAC1B,yIAAmB;YACnB,+HAA2B;YAC3B,wIAAwB;YACxB,iIAAsB;YACtB,8HAAyB;YACzB,sHAAuB;YACvB,yHAAoB;YACpB,+HAAsB;YACtB,yHAAoB;YACpB,4HAAqB;YACrB,oJAAwB;YACxB,kJAAwB;YACxB,kJAAwB;YACxB,kJAAwB;YACxB,kJAAwB;YACxB,yGAAmB;YACnB,gIAA0B;YAC1B,kJAAwB;YACxB,4EAAgB;YAChB,oFAAY;SACb;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,mEAAY;YACZ,4EAAsB,CAAC,OAAO,EAAE;YAChC,4EAAoB;SACrB;QACD,SAAS,EAAE,CAAE,sEAAoB,EAAE,yGAAe,EAAE,gHAAwB,EAAE,4GAAc,CAAE;KAC/F,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFgD;AAEpC;AACJ;AAMW;AAEoB;AAItE,IAAa,oBAAoB,GAAjC;IAWE,YAAoB,IAAgB,EAChB,cAA8B;QAD9B,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAVlD,6BAAwB,GAAG,IAAI,oDAAO,EAAW,CAAC;QAElD,cAAS,GAAG,uFAAmB,CAAC,OAAO,CAAC,CAAI,gBAAgB;QAE5D,gBAAW,GAAG,CAAC,CAAC;QAER,SAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,WAAM,GAAY,EAAE,CAAC;IAGwB,CAAC;IAEtD,iBAAiB;QAEf,6DAA6D;QAE7D,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuC,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,SAAS,GAAG,KAAK,CAAC;aAC3F,SAAS,CAAE,CAAC,cAAc,EAAE,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAAC,CAAC;YAChC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACD,gDAAgD;QAC1G,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAA8B,2BAA2B;SACrF,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEnD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAEH,qCAAqC;IACnC,gBAAgB,CAAC,OAAe;QAC9B,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACnD,wDAAwD;QAE1D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;MAIE;IAEF,cAAc;QACZ,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;IACpF,CAAC;IAED,qBAAqB;IAErB,kHAAkH;IAClH,iCAAiC;IACjC,uDAAuD;IACvD,uCAAuC;IACvC,gBAAgB;IAChB,IAAI;IAGJ,kBAAkB;IAClB,oBAAoB,CAAC,OAAe,EAAE,QAAkB;QAEtD,qEAAqE;QACrE,oEAAoE;QACpE,gFAAgF;QAChF,4DAA4D;QAC5D,iDAAiD;QACjD,2DAA2D;QAG3D,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAqC,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,OAAO,GAAG,SAAS,GAAG,KAAK,EAAE,QAAQ,CAAC;aAC5G,SAAS,CAAE,CAAC,UAAU,EAAG,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACrD,iFAAiF;QAEnF,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAc,2BAA2B;SACvE,CAAC;IAClB,CAAC;IAED,kDAAkD;IAElD,uBAAuB,CAAC,OAAe,EAAE,QAAkB;QAEzD,oEAAoE;QACpE,mEAAmE;QACnE,4DAA4D;QAC5D,iDAAiD;QACjD,2DAA2D;QAG3D,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAqC,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,OAAO,GAAG,SAAS,GAAG,KAAK,EAAE,QAAQ,CAAC;aAC7G,SAAS,CAAC,CAAE,YAAY,EAAG,EAAE;YAE5B,OAAO,CAAC,GAAG,CAAE,aAAa,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;YAChD,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC1D,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC;YACD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACjF,CAAC,EACH,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;IAClB,CAAC;IAED,mBAAmB;IAEnB,uBAAuB,CAAC,OAAe;QAErC,8CAA8C;QAC9C,wEAAwE;QAExE,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAmC,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,OAAO,GAAG,SAAS,GAAG,KAAK,CAAC;aAClG,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAE1B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAE,CAAC;YAEvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC;YACD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACvD,CAAC,EACH,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5B,CAAC;IAClB,CAAC;CAGF;AAxJY,oBAAoB;IADhC,gEAAU,EAAE;qCAYe,+DAAU;QACA,8EAAc;GAZvC,oBAAoB,CAwJhC;AAxJgC;;;;;;;;;;;;ACfjC,6NAA6N,maAAma,kBAAkB,8LAA8L,iBAAiB,uCAAuC,oBAAoB,oMAAoM,gCAAgC,qpFAAqpF,0BAA0B,2LAA2L,0BAA0B,sHAAsH,iPAAiP,kDAAkD,oDAAoD,wGAAwG,MAAM,6IAA6I,2CAA2C,kHAAkH,oOAAoO,2CAA2C,sL;;;;;;;;;;;ACAxnK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAsF;AAC7C;AAImC;AACH;AAES;AAMlF,IAAa,yBAAyB,GAAtC;IAsBE,YAAoB,mBAAwC,EACxC,MAAc,EACd,GAAe;QAFf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAY;QAdnC,UAAK,GAAG,uFAAmB,CAAC,KAAK,CAAC;QAGlC,iBAAY,GAAG,CAAC,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAC/B,eAAU,GAAG,CAAC,CAAC;QACf,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAAW,IAAI,CAAC,YAAY,CAAC;QAC7C,0BAAqB,GAAG,CAAC,CAAC;QAC1B,yBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IAO1C,CAAC;IAEX,cAAc,CAAC,KAAoB;QAEjC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACA,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,CAAC;IACP,CAAC;IAED,eAAe,CAAC,KAAoB;QAClC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAGD,iBAAiB,CAAC,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,KAAU;QACC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;IACvB,CAAC;IACD,QAAQ,CAAC,KAAU;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1D,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IACD,YAAY,CAAC,KAAU;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAE,CAAC;gBAC/F,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,CAAC;QACP,CAAC;QAEC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IAED,SAAS;QACa,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjF,CAAC;IACD,QAAQ;QACY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACtF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB;gBACxB,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7F,CAAC;IACrB,CAAC;CAEJ;AAvHU;IAAR,2DAAK,EAAE;;yDAAiB;AAChB;IAAR,2DAAK,EAAE;;gEAAwB;AAEvB;IAAR,2DAAK,EAAE;;yDAAyB;AAExB;IAAR,2DAAK,EAAE;;qEAA4B;AAC3B;IAAR,2DAAK,EAAE;8BAAa,KAAK;6DAAM;AAIT;IAAtB,kEAAY,CAAC,OAAO,CAAC;8BAAQ,uDAAS;wDAAM;AAZlC,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;;;KAGnC,CAAC;qCAuByC,iFAAmB;QAChC,sDAAM;QACT,wDAAU;GAxBxB,yBAAyB,CAyHrC;AAzHqC;;;;;;;;;;;;ACdtC,6NAA6N,maAAma,kBAAkB,8LAA8L,iBAAiB,uCAAuC,oBAAoB,oMAAoM,gCAAgC,8pFAA8pF,0BAA0B,2LAA2L,0BAA0B,sHAAsH,iPAAiP,kDAAkD,oDAAoD,wGAAwG,MAAM,6IAA6I,2CAA2C,kHAAkH,oOAAoO,2CAA2C,sL;;;;;;;;;;;ACAjoK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCsF;AAC7C;AAImC;AACH;AAES;AAOlF,IAAa,uBAAuB,GAApC;IAsBE,YAAoB,mBAAwC,EACxC,MAAc,EACd,GAAe;QAFf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAY;QAdnC,UAAK,GAAG,uFAAmB,CAAC,KAAK,CAAC;QAGlC,iBAAY,GAAG,CAAC,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAC/B,eAAU,GAAG,CAAC,CAAC;QACf,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAAW,IAAI,CAAC,YAAY,CAAC;QAC7C,0BAAqB,GAAG,CAAC,CAAC;QAC1B,yBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IAO1C,CAAC;IAEX,cAAc,CAAC,KAAoB;QAEjC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACA,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,CAAC;IACP,CAAC;IAED,eAAe,CAAC,KAAoB;QAClC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAGD,iBAAiB,CAAC,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,KAAU;QACC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;IACvB,CAAC;IACD,QAAQ,CAAC,KAAU;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1D,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IACD,YAAY,CAAC,KAAU;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAE,CAAC;gBAC/F,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,CAAC;QACP,CAAC;QAEC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IAED,SAAS;QACa,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjF,CAAC;IACD,QAAQ;QACY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACtF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB;gBACxB,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7F,CAAC;IACrB,CAAC;CAEJ;AAvHU;IAAR,2DAAK,EAAE;;uDAAiB;AAChB;IAAR,2DAAK,EAAE;;8DAAwB;AAEvB;IAAR,2DAAK,EAAE;;uDAAyB;AAExB;IAAR,2DAAK,EAAE;;mEAA4B;AAC3B;IAAR,2DAAK,EAAE;8BAAa,KAAK;2DAAM;AAIT;IAAtB,kEAAY,CAAC,OAAO,CAAC;8BAAQ,uDAAS;sDAAM;AAZlC,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;KAGjC,CAAC;qCAuByC,iFAAmB;QAChC,sDAAM;QACT,wDAAU;GAxBxB,uBAAuB,CAyHnC;AAzHmC;;;;;;;;;;;;AChBpC,6NAA6N,maAAma,kBAAkB,8LAA8L,iBAAiB,uCAAuC,oBAAoB,oMAAoM,gCAAgC,8pFAA8pF,0BAA0B,2LAA2L,0BAA0B,sHAAsH,iPAAiP,kDAAkD,oDAAoD,wGAAwG,MAAM,6IAA6I,2CAA2C,kHAAkH,oOAAoO,2CAA2C,sL;;;;;;;;;;;ACAjoK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAsF;AAC7C;AAImC;AACH;AAES;AAOlF,IAAa,0BAA0B,GAAvC;IAuBE,YAAoB,mBAAwC,EACxC,MAAc,EACd,GAAe;QAFf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAY;QAdnC,UAAK,GAAG,uFAAmB,CAAC,KAAK,CAAC;QAGlC,iBAAY,GAAG,CAAC,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAC/B,eAAU,GAAG,CAAC,CAAC;QACf,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAAW,IAAI,CAAC,YAAY,CAAC;QAC7C,0BAAqB,GAAG,CAAC,CAAC;QAC1B,yBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IAO1C,CAAC;IAEX,cAAc,CAAC,KAAoB;QAEjC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACA,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,CAAC;IACP,CAAC;IAED,eAAe,CAAC,KAAoB;QAClC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAGD,iBAAiB,CAAC,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,KAAU;QACC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;IACvB,CAAC;IACD,QAAQ,CAAC,KAAU;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1D,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IACD,YAAY,CAAC,KAAU;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAE,CAAC;gBAC/F,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,CAAC;QACP,CAAC;QAEC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IAED,SAAS;QACa,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjF,CAAC;IACD,QAAQ;QACY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACtF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB;gBACxB,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7F,CAAC;IACrB,CAAC;CAEJ;AAvHU;IAAR,2DAAK,EAAE;;0DAAiB;AAChB;IAAR,2DAAK,EAAE;;iEAAwB;AAEvB;IAAR,2DAAK,EAAE;;0DAAyB;AAExB;IAAR,2DAAK,EAAE;;sEAA4B;AAC3B;IAAR,2DAAK,EAAE;8BAAa,KAAK;8DAAM;AAIT;IAAtB,kEAAY,CAAC,OAAO,CAAC;8BAAQ,uDAAS;yDAAM;AAblC,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;;;KAGpC,CAAC;qCAwByC,iFAAmB;QAChC,sDAAM;QACT,wDAAU;GAzBxB,0BAA0B,CA0HtC;AA1HsC;;;;;;;;;;;;ACfvC,guN;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,uBAAuB,GAApC;IAEE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;KAGjC,CAAC;;GACW,uBAAuB,CAOnC;AAPmC;;;;;;;;;;;;ACPpC,wKAAwK,oWAAoW,kBAAkB,uKAAuK,iBAAiB,yCAAyC,oBAAoB,wKAAwK,gCAAgC,gpFAAgpF,0BAA0B,0JAA0J,0BAA0B,sHAAsH,mNAAmN,kDAAkD,oDAAoD,wGAAwG,MAAM,yIAAyI,2CAA2C,kHAAkH,oOAAoO,2CAA2C,sL;;;;;;;;;;;ACA34J,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCsF;AAC7C;AAEmC;AACH;AAIS;AAOlF,IAAa,8BAA8B,GAA3C;IAsBE,YAAoB,mBAAwC,EACxC,MAAc,EACd,GAAe;QAFf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAY;QAdnC,UAAK,GAAG,uFAAmB,CAAC,KAAK,CAAC;QAGlC,iBAAY,GAAG,CAAC,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAC/B,eAAU,GAAG,CAAC,CAAC;QACf,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAAW,IAAI,CAAC,YAAY,CAAC;QAC7C,0BAAqB,GAAG,CAAC,CAAC;QAC1B,yBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IAKhB,CAAC;IAGrC,cAAc,CAAC,KAAoB;QAEjC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACA,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,CAAC;IACP,CAAC;IAED,eAAe,CAAC,KAAoB;QAClC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAGD,iBAAiB,CAAC,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,KAAU;QACC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;IACvB,CAAC;IACD,QAAQ,CAAC,KAAU;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1D,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IACD,YAAY,CAAC,KAAU;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAE,CAAC;gBAC/F,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,CAAC;QACP,CAAC;QAEC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IAED,SAAS;QACa,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjF,CAAC;IACD,QAAQ;QACY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACtF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB;gBACxB,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7F,CAAC;IACrB,CAAC;CAEJ;AAtHU;IAAR,2DAAK,EAAE;;8DAAiB;AAChB;IAAR,2DAAK,EAAE;;qEAAwB;AAEvB;IAAR,2DAAK,EAAE;;8DAAyB;AAExB;IAAR,2DAAK,EAAE;;0EAA4B;AAC3B;IAAR,2DAAK,EAAE;8BAAa,KAAK;kEAAM;AAIT;IAAtB,kEAAY,CAAC,OAAO,CAAC;8BAAQ,uDAAS;6DAAM;AAZlC,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,6BAA6B;;;KAGxC,CAAC;qCAuByC,iFAAmB;QAChC,sDAAM;QACT,wDAAU;GAxBxB,8BAA8B,CAwH1C;AAxH0C;;;;;;;;;;;;;;;;;;;;;;;;;ACfD;AAQ1C,IAAa,kBAAkB,GAA/B;IAEA,gBAAe,CAAC;CAEf;AAJY,kBAAkB;IAN9B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE;;GAET;KACF,CAAC;;GACW,kBAAkB,CAI9B;AAJ8B;;;;;;;;;;;;ACT/B,wKAAwK,oWAAoW,kBAAkB,uKAAuK,iBAAiB,yCAAyC,oBAAoB,wKAAwK,gCAAgC,gpFAAgpF,0BAA0B,0JAA0J,0BAA0B,sHAAsH,mNAAmN,kDAAkD,oDAAoD,wGAAwG,MAAM,yIAAyI,2CAA2C,kHAAkH,oOAAoO,2CAA2C,sL;;;;;;;;;;;ACA34J,yBAAyB,4DAA4D,2BAA2B,kBAAkB,EAAE,aAAa,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApE;AACrD;AAGgC;AACG;AAGM;AAOlF,IAAa,kBAAkB,GAA/B;IAyBE,YAAoB,mBAAwC,EACxC,MAAc,EACd,GAAe;QAFf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAY;QAdjC,iBAAY,GAAG,CAAC,CAAC;QACjB,8BAAyB,GAAG,EAAE,CAAC;QAE/B,eAAU,GAAG,CAAC,CAAC;QACf,sBAAiB,GAAG,CAAC,CAAC;QACtB,qBAAgB,GAAW,IAAI,CAAC,YAAY,CAAC;QAC7C,0BAAqB,GAAG,CAAC,CAAC;QAC1B,yBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAEtD,8CAA8C;QAC9C,UAAK,GAAG,uFAAmB,CAAC,KAAK,CAAC;IAIE,CAAC;IAEvC,cAAc,CAAC,KAAoB;QAEjC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACA,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9D,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,CAAC;IACP,CAAC;IAED,eAAe,CAAC,KAAoB;QAClC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,IAAI,8EAAY,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,KAAK;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,KAAU;QACC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;IACvB,CAAC;IACD,QAAQ,CAAC,KAAU;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1D,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IACD,YAAY,CAAC,KAAU;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAE,CAAC;gBAC/F,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,yBAAyB,CAAC;gBAC7D,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5F,CAAC;QACP,CAAC;QAEC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAClF,CAAC;IAED,SAAS;QACa,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACjF,CAAC;IACD,QAAQ;QACY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,KAAK,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACtF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB;gBACxB,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7F,CAAC;IACrB,CAAC;CAEF;AAvHU;IAAR,2DAAK,EAAE;;kDAAiB;AAChB;IAAR,2DAAK,EAAE;;yDAAwB;AAEvB;IAAR,2DAAK,EAAE;;kDAAyB;AAExB;IAAR,2DAAK,EAAE;;8DAA4B;AAC3B;IAAR,2DAAK,EAAE;8BAAa,KAAK;sDAAM;AAIP;IAAtB,kEAAY,CAAC,OAAO,CAAC;8BAAQ,uDAAS;iDAAM;AAZpC,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;;;KAG3B,CAAC;qCA0ByC,iFAAmB;QAChC,sDAAM;QACT,wDAAU;GA3BxB,kBAAkB,CAyH9B;AAzH8B;;;;;;;;;;;;;;;;;;;;;;;;;ACdU;AAE2B;AAIR;AAErD,MAAM,eAAe,GAAW;IACtC,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wEAAkB,EAAE,QAAQ,EAAE,EAE7D,EAAC;CACF,CAAC;AAMF,IAAa,sBAAsB,GAAnC;CAAsC;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QACjD,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBM;AACM;AACiB;AAEJ;AAEF;AAEH;AAcvD,IAAa,eAAe,GAA5B;CAA+B;AAAlB,eAAe;IAZ3B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,wEAAkB;SAEnB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,kEAAY;YACZ,4EAAsB;SACvB;QACD,SAAS,EAAE,CAAE,mEAAgB,CAAE;KAChC,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBmD;AAGpC;AACJ;AACW;AAGlD,IAAa,gBAAgB,GAA7B;IAME,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,uBAAkB,GAAG,KAAK,CAAC;QAC3B,cAAS,GAAG,uFAAmB,CAAC,OAAO,CAAC,CAAE,iBAAiB;QACnD,WAAM,GAAY,EAAE,CAAC;QACtB,qBAAgB,GAAG,IAAI,oDAAO,EAAW,CAAC;IACT,CAAC;IAEzC,gBAAgB;QAEd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;aACnE,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YACI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/C,CAAC,EACC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC5D,CAAC;IAChB,CAAC;CAEF;AAnBY,gBAAgB;IAD5B,gEAAU,EAAE;qCAOe,+DAAU;GANzB,gBAAgB,CAmB5B;AAnB4B;;;;;;;;;;;;;;ACR7B;AAAA,+DAA+D;AAEzD;IAGF,YAAY,WAAmB,EAAE,KAAa;QAC1C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;CACJ;;;;;;;;;;;;;;;ACTD;AAAA;;GAEG;AACI,MAAM,YAAY,GAAG;IACxB,QAAQ,EAAE,IAAI;IACd,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,OAAO;IAClB,KAAK,EAAE,MAAM;IACb,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE,KAAK;IAChB,aAAa,EAAE,IAAI;IACnB,WAAW,EAAE,IAAI;IACjB,WAAW,EAAE,oBAAoB;IACjC,aAAa,EAAE,EAAE;IACjB,OAAO,EAAE;QACL,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC;QAC/B,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC;QACjC,CAAC,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,EAAE,QAAQ,CAAC;QACzE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;KAC3B;CACJ,CAAC;AAEK,MAAM,MAAM,GAAG;IAElB,YAAY,EAAE,GAAG;IACjB,cAAc,EAAE,GAAG;IACnB,SAAS,EAAE,GAAG;IACd,SAAS,EAAE,GAAG;IACd,WAAW,EAAE,GAAG;IAChB,UAAU,EAAE,GAAG;CAElB,CAAC;;;;;;;;;;;;;;;;AChCF;AAAA,cAAc;AAER,iCAAkC,KAAa,EAAE,OAAY;IAC/D,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACR,EAAE,EAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBACjC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACvC,CAAC;IACL,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AAED,0BAA0B;AAEpB;IACF,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACtB,MAAM,QAAQ,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjC,EAAE,EAAC,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC;IACL,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;AAED,wBAAwB;AAElB,0BAA2B,KAAK;IAClC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACR,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC5B,GAAG,CAAC,eAAe,EAAE,CAAC;YACtB,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/C,KAAK,CAAC,MAAM,EAAE,CAAC;YACf,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACjD0C;AAEJ;AAGvC,IAAa,wBAAwB,GAArC;IADA;QAGI,sDAAsD;QAE/C,gBAAW,GAAG,IAAI,oDAAO,EAAU,CAAC;QAE3C,mBAAc,GAAQ,SAAS,CAAC;IA8BpC,CAAC;IA5BG,OAAO,CAAC,OAAe,EAAE,KAAa;QAClC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,OAAO,KAAK,sBAAsB,CAAC,CAAC,CAAC;YAC7D,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC3C,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,sBAAsB,CAAC,CAAC,CAAC;YACrC,QAAQ,CAAC,WAAW,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7D,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,YAAY,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;YACzD,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,kBAAkB,CAAC,CAAC,CAAC;YACjC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC;QAED,MAAM,CAAC;IACX,CAAC;CAEJ;AApCY,wBAAwB;IADpC,gEAAU,EAAE;GACA,wBAAwB,CAoCpC;AApCoC;;;;;;;;;;;;ACLrC,swN;;;;;;;;;;;ACAA,iCAAiC,cAAc,eAAe,iBAAiB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlB;AAEV;AACP;AAGoB;AAC1B;AAQxD,IAAa,0BAA0B,GAAvC;IAQE,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QALtE,mBAAc,GAAG,IAAI,CAAC;QAGZ,YAAO,GAA+B,IAAI,0DAAY,EAAgB,CAAC;IAEP,CAAC;IAE3E,QAAQ;IACR,CAAC;IACD,uBAAuB,CAAC,KAAK;QAE3B,MAAM,CAAC,oFAA6B,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,gFAAM,CAAC,YAAY,CAAC,CAAC;gBAC/D,KAAK,CAAC;YACN,KAAK,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,gFAAM,CAAC,cAAc,CAAC,CAAC;gBACjE,KAAK,CAAC;YACN,KAAK,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,gFAAM,CAAC,SAAS,CAAC,CAAC;gBAC5D,KAAK,CAAC;YACN,KAAK,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,gFAAM,CAAC,SAAS,CAAC,CAAC;gBAC5D,KAAK,CAAC;YACN,KAAK,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,gFAAM,CAAC,WAAW,CAAC,CAAC;gBAC9D,KAAK,CAAC;YACN,KAAK,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,gFAAM,CAAC,UAAU,CAAC,CAAC;gBAC7D,KAAK,CAAC;QACR,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,cAAc,CAAC,OAAgB,EAAE,KAAK;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,yEAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;CACF;AA7CU;IAAR,2DAAK,EAAE;;0DAAa;AACX;IAAT,4DAAM,EAAE;8BAAU,0DAAY;2DAAkD;AANtE,0BAA0B;IANtC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;;;KAIpC,CAAC;qCAS8C,6FAAwB;GAR3D,0BAA0B,CAkDtC;AAlDsC;;;;;;;;;;;;ACfvC,q7B;;;;;;;;;;;ACAA,gCAAgC,uBAAuB,EAAE,gEAAgE,iCAAiC,qBAAqB,qBAAqB,iBAAiB,EAAE,gCAAgC,yBAAyB,gBAAgB,EAAE,sDAAsD,yBAAyB,2CAA2C,+BAA+B,sCAAsC,2BAA2B,yBAAyB,mBAAmB,2BAA2B,EAAE,oHAAoH,qBAAqB,EAAE,2EAA2E,4BAA4B,2CAA2C,+BAA+B,EAAE,4CAA4C,yBAAyB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACE/2B;AACpC;AACJ;AAEwB;AAGO;AAC1B;AAcxD,IAAa,mBAAmB,2BAAhC;IA6BE,YAAoB,wBAAkD,EAClD,QAAmB,EACnB,QAAsB;QAFtB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAW;QACnB,aAAQ,GAAR,QAAQ,CAAc;QAnB1C,YAAO,GAAG,OAAO,CAAC;QAIR,SAAI,GAAyB,IAAI,0DAAY,EAAU,CAAC;QACxD,UAAK,GAAyB,IAAI,0DAAY,EAAU,CAAC;QAKnE,UAAK,GAAQ,yDAAK,CAAC;QAKnB,WAAM,GAAG,sFAAY,CAAC;IAKR,CAAC;IAEf,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAErC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9D,CAAC;QACA,kDAAkD;QAClD,2DAA2D;QAC3D,wCAAwC;QACxC,+DAA+D;IAEjE,CAAC;IAGD,UAAU,CAAC,KAAU;QACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;YAC9E,KAAK,GAAG,IAAI,CAAC;QACf,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACA,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IACF,eAAe;QACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,CAAC;IACT,CAAC;IACD,aAAa;QACX,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,cAAc;QACZ,oDAAoD;QACpD,IAAI,CAAC,wBAAwB,CAAC,cAAc,GAAG,0EAAmB,EAAE,CAAC;IACvE,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC1C,SAAS,IAAI,OAAO,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACzD,CAAC;IAED,eAAe,CAAC,IAAY;QAE1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAG,qCAAqC;IAE/F,CAAC;IAED,cAAc,CAAC,OAAqB;QAClC,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5E,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,MAAM,eAAe,GAAG,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QACrF,MAAM,CAAC;IACT,CAAC;CAGF;AApGU;IAAR,2DAAK,EAAE;;wDAAqB;AAEnB;IAAT,4DAAM,EAAE;8BAAO,0DAAY;iDAAsC;AACxD;IAAT,4DAAM,EAAE;8BAAQ,0DAAY;kDAAsC;AAExC;IAA1B,+DAAS,CAAC,cAAc,CAAC;8BAAW,wDAAU;qDAAC;AACtB;IAAzB,+DAAS,CAAC,aAAa,CAAC;;wDAAkB;AApBhC,mBAAmB;IAZ/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;;;QAG3B,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,gEAAiB;gBAC1B,WAAW,EAAE,gEAAU,CAAC,GAAG,EAAE,CAAC,qBAAmB,CAAC;gBAClD,KAAK,EAAE,IAAI;aACZ;SACF;KACF,CAAC;qCA8B8C,6FAAwB;QACxC,uDAAS;QACT,sEAAY;GA/B/B,mBAAmB,CAkH/B;AAlH+B;;;;;;;;;;;;;ACxBhC,yhZ;;;;;;;;;;;ACAA,yBAAyB,8DAA8D,2BAA2B,iBAAiB,EAAE,YAAY,YAAY,aAAa,gBAAgB,kBAAkB,EAAE,mBAAmB,uBAAuB,iBAAiB,EAAE,aAAa,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5O;AAEV;AAGmB;AAIA;AAEK;AAO3E,IAAa,gBAAgB,GAA7B;IA8CE,YACoB,gBAAkC,EAClC,WAAwB,EACxB,kBAAuC;QAFvC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAqB;QA/C1D,qBAAqB;QACjB,WAAM,GAAY,EAAE,CAAC;QAEzB,qBAAqB;QACjB,sBAAiB,GAAoB,EAAE,CAAC;QAIxC,wBAAmB,GAAoB,EAAE,CAAC;QAE1C,mBAAc,GAAoB,EAAE,CAAC;QACrC,gBAAW,GAAoB,EAAE,CAAC;QAClC,uBAAkB,GAAoB,EAAE,CAAC;QACzC,mBAAc,GAAoB,EAAE,CAAC;QAGxC,kBAAkB;QAChB,mBAAc,GAAG,KAAK,CAAC;QACvB,WAAM,GAAG,KAAK,CAAC;QACf,kBAAa,GAAG,KAAK,CAAC;QAMxB,+BAA+B;QAE3B,iBAAY,GAAG,CAAC,CAAC;QAEjB,eAAU,GAAe,EAAE,CAAC;QAG5B,uBAAkB,GAAe,EAAE,CAAC;QAGpC,oBAAe,GAAe,EAAE,CAAC;QAGjC,oBAAe,GAAe,EAAE,CAAC;QAGjC,kBAAa,GAAe,EAAE,CAAC;IAOtB,CAAC;IAEf,QAAQ;QAGP;;;UAGE;QAEA,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB;aAClB,SAAS,CAAC,CAAC,cAA+B,EAAE,EAAE;YAC7C,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAE3D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;aACV,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAEpD,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE/D,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;gBAC5B,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC1B,GAAG,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACnD,EAAE,CAAC,CAAE,SAAS,CAAC,OAAO,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;4BAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBACjC,CAAC;oBACH,CAAC;oBACD,IAAI,CAAC,aAAa,GAAG,IAAI,sFAAa,CAAC,SAAS,CAAC,OAAO,EAChB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,UAAU,EACpB,SAAS,CAAC,UAAU,EACpB,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC7D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;gBAEhC,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,sFAAa,CAAC,SAAS,CAAC,OAAO,EACtB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,UAAU,EACpB,SAAS,CAAC,UAAU,EACpB,IAAI,CAAC,cAAc,CAAC,CAAC;oBACvD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;YAEL,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAE,SAAS,CAAC,UAAU,KAAK,UAAW,CAAC,CAAC,CAAC;oBACtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC1C,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,SAAS,CAAC,UAAU,KAAK,OAAQ,CAAC,CAAC,CAAC;oBAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACvC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,SAAS,CAAC,UAAU,KAAK,cAAe,CAAC,CAAC,CAAC;oBACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9C,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,SAAS,CAAC,UAAU,KAAK,UAAW,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC1C,CAAC;YACL,CAAC;YAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,cAAc,CAAC,CAAC;YAG/C,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAE3D,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QACtE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAS,YAAY;QACpE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAG,iBAAiB;IAEnF,CAAC;IAED,WAAW;QACT,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;IAC/C,CAAC;IAED,kBAAkB,CAAC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,cAAc;QAE5E,4BAA4B;QAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAClF,CAAC;QAEK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QAEP,oCAAoC;QAEpC,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9F,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAClG,CAAC;QAEK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,0BAA0B,EAAE,CAAC,EAAE,EAAE,CAAC;YACtD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;QAER,iCAAiC;QAEhC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACpF,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAChG,CAAC;QACO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;YACvD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QAGR,wCAAwC;QAExC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACpF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAC1F,CAAC;QACG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;YACvD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QAET,oCAAoC;QAEhC,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACzF,CAAC;QAAC,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAC7F,CAAC;QACG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC,EAAE,EAAE,CAAC;YACjD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC;IACb,CAAC;CACJ;AApMY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;;;KAGxB,CAAC;qCAgDsC,mFAAgB;QACrB,8DAAW;QACJ,iFAAmB;GAjDhD,gBAAgB,CAoM5B;AApM4B;;;;;;;;;;;;;;AClB7B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export const GlobalConstantShare = {\n   //   httpUrl: 'https://examsimv100.herokuapp.com',\n   httpUrl: 'http://localhost:3000',\n    price: 10\n};\n","\nexport class MainNavModel {\n  constructor(public showMainNav: boolean,\n              public checkLogoutOrNot: boolean,\n              public isTeacherLogin?: boolean) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MainNavModel } from './mainNavChange.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProfileInfo } from '../auth/profile.model';\n@Injectable()\nexport class UtilityService {\n\n  public loadingStateChanged = new Subject<boolean>();\n  public soundButtonChanged = new Subject<boolean>();   // toefl list에서 audio button을 클릭하였을때를 감시하는 subject\n  public audioPathChanged = new Subject<string>();\n  public mainNavChanged = new Subject<MainNavModel>();        // main Nav 화면 보이고 안보이고 할때\n  public toeflListShowChanged = new Subject<boolean>();    // toefl list를 화면에 보이고 안보이고 할때 사용\n  public teacherNavSideBarChanged = new Subject<boolean>();  // make exam 생성시 teacher navigation의 sidebar를 보이거나 안보이거나 할때 사용\n  public stepperCheck = new Subject<boolean>();              // stepper 단계 점검시 사용\n  private audio = new Audio();\n\n  private options = { positionClass: 'toast-top-full-width', closeButton: true, progressBar: true };\n\n  constructor(private toaster: ToastrService) { }\n\n\n  successToast(title, message) {\n    this.toaster.success(title, message, this.options);\n\n  }\n\n errorToast(title, message) {\n   this.toaster.error(title, message, this.options);\n }\n\n getChangedAudioUrl(audioPath: string) {\n  this.audioPathChanged.next(audioPath);\n }\n\n audioPlaySevice(audioPath: string, soundLocationMode: string, soundButton: boolean) {\n  // 만일 toefl List를 보여주는 것이라면 audio.play()가 실행되고 있는지의 여부를 확인하여\n  // 실행되고 있다면 반드시 중지 시키고 새로 시작하여야만 중복된 소리가 들리지 않는다\n  // Audio Play Service 중 toefl List에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add, detail, edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n  console.log('this is the service area:' + this.soundButtonChanged);\n  console.log(soundLocationMode);\n\n        if (soundLocationMode === '0') {\n          this.audio.pause();\n        }\n        if (soundLocationMode === '1') {\n\n              if (soundButton) {\n                if (this.audio.play()) {\n                  this.audio.pause();\n                  this.soundButtonChanged.next(true);\n                }\n              } else {\n                  if (this.audio.play()) {\n                    this.audio.pause();\n                  }\n                  this.audio = new Audio();\n                  this.audio.src = audioPath;\n                  this.audio.autoplay = true;\n                  this.audio.loop = true;\n                  this.soundButtonChanged.next(false);\n                }\n        }\n        if (soundLocationMode === '2') {\n\n                if (this.audio.play()) {\n                  this.audio.pause();\n                }\n                this.soundButtonChanged.next(true);\n        }\n        if (soundLocationMode === '3') {\n\n                if (this.audio.play()) {\n                  this.audio.pause();\n                }\n                  this.audio = new Audio();\n                  this.audio.src = audioPath;\n                  this.audio.autoplay = true;\n                  this.audio.loop = true;\n                  this.soundButtonChanged.next(false);\n        }\n    }\n\n }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AuthenticationComponent } from './auth/authentication.component';\nimport { NotFoundComponent } from './toefl/not-found/not-found.component';\nimport { AppComponent } from './app.component';\n\nconst APP_ROUTES: Routes = [\n   { path: '', redirectTo: '/home', pathMatch: 'full'},\n   { path: 'home', component: WelcomeComponent  }\n   // { path: 'teacher', loadChildren: './toefl/teacher/teacher.module#ToeflTeacherModule'},\n    // { path: 'toeflexam', loadChildren: './toefl/toeflExam/toeflexam.module#ToeflExamModule'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n<!--Double navigation-->\\n<header *ngIf=\\\"!mainNavHide\\\">\\n    <!-- Sidebar navigation -->\\n    <mdb-sidenav #sidenav class=\\\"sn-bg-1\\\" [fixed]=\\\"false\\\">\\n       <app-sidenav-list></app-sidenav-list>\\n    </mdb-sidenav>\\n    <!--/. Sidebar navigation -->\\n    <app-header [profileInfo] = 'profileInfo' [isAuth]=\\\"isAuth\\\" [isteacherAuth]=\\\"isteacherAuth\\\" (sidenavToggle)=\\\"sidenav.toggle()\\\"></app-header>\\n</header>\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \".form-light .font-small {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"radio\\\"] + label,\\n.form-light [type=\\\"checkbox\\\"] + label {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"checkbox\\\"] + label:before {\\n  top: 2px;\\n  width: 15px;\\n  height: 15px; }\\n\\n.form-light input[type=\\\"checkbox\\\"] + label:before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 17px;\\n  height: 17px;\\n  z-index: 0;\\n  border-radius: 1px;\\n  margin-top: 2px;\\n  transition: 0.2s; }\\n\\n.form-light input[type=\\\"checkbox\\\"]:checked + label:before {\\n  top: -4px;\\n  left: -3px;\\n  width: 12px;\\n  height: 22px;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: transparent #EB3573 #EB3573 transparent;\\n  -webkit-transform: rotate(40deg);\\n  transform: rotate(40deg);\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform-origin: 100% 100%;\\n  transform-origin: 100% 100%; }\\n\\n.form-light .footer {\\n  border-bottom-left-radius: .3rem;\\n  border-bottom-right-radius: .3rem; }\\n\"","/*\n    이 mainNavChanged Subject은 주 nav menu를 활성화 시키는 역할을 수행한다\n    만일 main nav상태가 false이면 main nav가 활성화 되어 있고 만일 true이면\n    이 main nav는 hide되면서 상대적으로 teacher-nav-header가 활성화 되는 기능이다\n    이기능에서 navStatus가 MainNavModel을 사용하고 있으며\n    다음 3 가지 기능을 수행한다 1) showMainNav를 hide or not\n                          2) logout 점검,\n                          3) teacherLogin 점검\n    또한 로그인 후 사용자 이름을 가져올수 있는 profileInfo정보를 수행하며 특히\n    payment구현시 반드시 prfileInfo()가 localstorage에 저장된 userName을 가지고 와야\n    property 'name' not defined error 가 발생하자 않는다\n    이기능은 또한 routing 시 처음에는 곧바로 welcomComponent가 불러지므로 활성화 되지는 않지만\n    logout/isAuth/teacherLogin/mainNav가 변경되자 마자 작동되는 기능이므로\n    많은 시간을 소비한 곳이므로 잘 기억해두기 바란다\n*/\n\nimport { AuthService } from './auth/auth.service';\nimport { Component, OnInit, ChangeDetectorRef, AfterViewChecked, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UtilityService } from './Utility-shared/utility.service';\nimport { MainNavModel } from './Utility-shared/mainNavChange.model';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ProfileInfo } from './auth/profile.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewChecked, OnDestroy {\n\n  title = 'app';\n  profileInfo: ProfileInfo;\n  mainNavHide = false;\n  isAuth = false;\n  isteacherAuth = false;\n  val = 0;\n\n  utilitySubscription: Subscription;\n\n  constructor(private utilityService: UtilityService,\n              private authService: AuthService,\n              private router: Router,\n              private changeDetector: ChangeDetectorRef) {}\n\n  ngOnInit() {\n\n        this.utilitySubscription = this.utilityService.mainNavChanged.subscribe((navStatus: MainNavModel) => {\n            this.mainNavHide = navStatus.showMainNav;\n\n            console.log('main nav 상태점검', this.mainNavHide);\n\n            if (navStatus.checkLogoutOrNot) {               // logout상태가 호출되었으므로 모든것이 초기화됨\n\n                                              this.isAuth = false;\n                                              this.isteacherAuth = false;\n            } else if (!navStatus.isTeacherLogin) {              // 일반 사용자 로그인\n                                               this.isAuth = true;\n                                               this.isteacherAuth = false;\n\n            } else {                                        // login상태에서 홈버튼이 click한경우  teacher모드로 기존 토큰이 존재함\n              this.isAuth = true;\n              this.isteacherAuth = true;\n            }\n            this.profileInfo = this.authService.getProfileInfo();\n            console.log(this.profileInfo);\n          });\n\n          this.router.routeReuseStrategy.shouldReuseRoute = function() {\n                return false;\n          };\n\n\n          this.router.events.subscribe((evt) => {\n              if (evt instanceof NavigationEnd) {\n                  this.router.navigated = false;\n                  window.scrollTo(0, 0);\n              }\n          });\n\n  }\n\n  ngOnDestroy() {\n    this.utilitySubscription.unsubscribe();\n  }\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\nimport { MDBSpinningPreloader } from 'ng-uikit-pro-standard';\n\nimport { MatDialogModule } from '@angular/material';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\nimport { AuthService } from './auth/auth.service';\nimport { UtilityService } from './Utility-shared/utility.service';\nimport { SharedModule } from './shared/shared.module';\n\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\n\nimport { ToeflTeacherModule } from './toefl/teacher/teacher.module';\nimport { ToeflExamModule } from './toefl/toeflExam/toeflexam.module';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AuthModule } from './auth/auth.module';\n\nimport { NotFoundComponent } from './toefl/not-found/not-found.component';\nimport { FooterComponent } from './navigation/footer/footer.component';\nimport { PaymentModule} from './payment/payment.module';\n\nimport { ToeflListComponent } from './toefl/toeflExam/toefl-list/toefl-list.component';\nimport { BasicToeflListComponent } from './toefl/toeflExam/basic-toefl-list/basic-toefl-list.component';\nimport { IntermediateToeflListComponent } from './toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component';\nimport { AdvanceToeflListComponent } from './toefl/toeflExam/advance-toefl-list/advance-toefl-list.component';\nimport { BeginnerToeflListComponent } from './toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component';\nimport { EventToeflListComponent } from './toefl/toeflExam/event-toefl-list/event-toefl-list.component';\nimport { ShortenPipe } from './shared/pipe-collection/shorten.pipe';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    HeaderComponent,\n    SidenavListComponent,\n    NotFoundComponent,\n    ToeflListComponent,\n    BeginnerToeflListComponent,\n    BasicToeflListComponent,\n    IntermediateToeflListComponent,\n    AdvanceToeflListComponent,\n    FooterComponent,\n    EventToeflListComponent,\n    ShortenPipe,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    HttpClientModule,\n    AuthModule,\n    ToeflTeacherModule,\n    ToeflExamModule,\n    AppRoutingModule,\n    SharedModule,\n    PaymentModule,\n    ToastrModule.forRoot(),\n    MDBBootstrapModulesPro.forRoot(),\n    MatDialogModule\n   ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  providers: [\n    MDBSpinningPreloader, AuthService, UtilityService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { AuthenticationComponent } from './authentication.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ProfileEditComponent } from './profile/profile-edit/profile-edit.component';\nimport { PurchasedHistoryComponent } from './profile/purchased-history/purchased-history.component';\nimport { AuthGuard } from './auth.guard';\n\nexport const authRoutes: Routes = [\n{ path: 'auth', component: AuthenticationComponent, children: [\n          { path: 'signup', component: SignupComponent },\n          { path: 'login', component: LoginComponent },\n          { path: 'profile', component: ProfileEditComponent, canActivate: [AuthGuard] },\n          { path: 'orderHistory', component: PurchasedHistoryComponent, canActivate: [AuthGuard] },\n          { path: 'logout', component: LogoutComponent }\n    ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AuthRoutingModule {}\n\n\n","\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private authService: AuthService) {}\n\n   canActivate(route: ActivatedRouteSnapshot,\n               state: RouterStateSnapshot\n               ): boolean | Observable<boolean> | Promise<boolean> {\n     if (this.authService.isAuth()) {\n       return true;\n     } else {\n       this.router.navigate(['/auth/login']);\n     }\n  }\n}\n\n","import { CommonModule } from '@angular/common';\n\nimport { NgModule } from '@angular/core';\n\nimport { AuthenticationComponent } from './authentication.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ToastModule } from 'ng-uikit-pro-standard';\nimport { SharedModule } from './../shared/shared.module';\nimport { ProfileEditComponent } from './profile/profile-edit/profile-edit.component';\nimport { ProfileOrderHistoryComponent } from './profile/profile-edit/profile-order-history/profile-order-history.component';\nimport { EditUserProfileComponent } from './profile/profile-edit/edit-user-profile/edit-user-profile.component';\nimport { ExamHistoryComponent } from './profile/profile-edit/exam-history/exam-history.component';\nimport { ExamAnalysisComponent } from './profile/profile-edit/exam-analysis/exam-analysis.component';\nimport { PurchasedHistoryComponent } from './profile/purchased-history/purchased-history.component';\n\n@NgModule({\n  declarations: [\n                  AuthenticationComponent,\n                  LoginComponent,\n                  LogoutComponent,\n                  SignupComponent,\n                  ProfileEditComponent,\n                  ProfileOrderHistoryComponent,\n                  EditUserProfileComponent,\n                  ExamHistoryComponent,\n                  ExamAnalysisComponent,\n                  PurchasedHistoryComponent,\n\n                ],\n  imports: [\n            CommonModule,\n            SharedModule,\n            MDBBootstrapModulesPro.forRoot(),\n            ToastModule.forRoot(),\n            AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { GlobalConstantShare } from '../Utility-shared/globalConstantShare';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs/Subject';\n\nimport { UtilityService } from './../Utility-shared/utility.service';\nimport { MainNavModel } from './../Utility-shared/mainNavChange.model';\nimport { User } from './user.model';\n\nimport { Shoppingcart } from '../payment/model/shoppingcart.model';\nimport { PaidToeflList } from '../payment/model/paidToeflLists.model';\nimport { ProfileInfo } from './profile.model';\n\n\n@Injectable()\nexport class AuthService {\n\n  urlConfig = GlobalConstantShare.httpUrl;     // 현재 설정ehls url 주소 설정\n  authChange = new Subject<boolean>();\n  teacherAuth = new Subject<boolean>();\n\n  mainNavModel: MainNavModel;\n\n  profileInfo: ProfileInfo;               // 메인 header에 필요한 사용자 이름을 가조오기위한 모델\n  public user: User;                             // 사용자에 관한 모든정보를 가져오기 위한 user 모델\n\n  clearPaidToeflLists: PaidToeflList[] = [];\n  clearShoppingCartLists: Shoppingcart[] = [];\n  clearProfileInfoPassed: ProfileInfo = null;\n\n  isAuthenticated = false;\n  isteacherAuthenticated = false;\n\n  public shoppingCartLists = new Subject<Shoppingcart[]>();\n  public paidToeflLists = new Subject<PaidToeflList[]>();\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private utilityService: UtilityService) {}\n  signup(user: User) {\n\n        this.utilityService.loadingStateChanged.next(true);\n        this.http.post\n                      <{ message: string,\n                          token: string,\n                          userName: string,\n                          permissionTag: string,\n                          shoppingCartLists: Shoppingcart[],\n                          paidToeflLists: PaidToeflList[]\n                        }>\n                        (this.urlConfig + '/user/signup', user)\n\n                        .subscribe((result) => {\n\n                                localStorage.setItem('token', result.token);\n                                localStorage.setItem('userName', result.userName);\n\n                                this.authSuccess(result.permissionTag);\n                                this.utilityService.loadingStateChanged.next(false);\n                                this.shoppingCartLists.next(result.shoppingCartLists);\n                                this.paidToeflLists.next(result.paidToeflLists);\n                                this.router.navigate(['/']);\n                    },\n                    error => { this.handleError( error ); });\n  }\n\n  login(user: User) {\n\n        this.utilityService.loadingStateChanged.next(true);\n        this.http.post\n                      <{ message: string,\n                          token: string,\n                          userName: string,\n                          permissionTag: string,\n                          shoppingCartLists: Shoppingcart[],\n                          paidToeflLists: PaidToeflList[]\n                        }>\n                        (this.urlConfig + '/user/login', user)\n\n                        .subscribe((result) => {\n                                localStorage.setItem('token', result.token);\n                                localStorage.setItem('userName', result.userName);\n                                this.authSuccess(result.permissionTag);\n                                this.utilityService.loadingStateChanged.next(false);\n                                this.shoppingCartLists.next(result.shoppingCartLists);\n                                this.paidToeflLists.next(result.paidToeflLists);\n                                this.router.navigate(['/']);\n                    },\n                    error => { this.handleError( error ); });\n              }\n\n  private handleError(error) {\n    console.log('에러 메세지', error);\n    this.authChange.next(false);\n    this.utilityService.loadingStateChanged.next(false);\n    return;\n  }\n\n  private authSuccess(teacherAuth: string) {\n    this.authChange.next(true);\n    console.log(this.authChange);\n\n        if (localStorage.getItem('token') !== null) {\n            this.isAuthenticated = true;\n        }\n        if (teacherAuth === 'teacher') {\n          this.teacherAuth.next(true);\n          this.isteacherAuthenticated = true;\n        } else {\n          this.teacherAuth.next(false);\n          this.isteacherAuthenticated = false;\n        }\n        this.router.navigate(['/']);\n  }\n\n  logout() {\n              localStorage.removeItem('token');\n              localStorage.removeItem('userName');\n\n              this.authChange.next(false);                             // 사용자 인증 logout\n              this.teacherAuth.next(false);                            // teacher permission 초기화\n              this.isAuthenticated = false;                             // 인증 취소\n              this.isteacherAuthenticated = false;                      // 관리자 선생님 인증 취소\n\n              this.profileInfo = new ProfileInfo(null, null);\n              this.paidToeflLists.next(this.clearPaidToeflLists);            // paid ToeflList 초기화\n              this.shoppingCartLists.next(this.clearShoppingCartLists);      // shopping cart list 초기화\n\n              this.mainNavModel = new MainNavModel(false, true);             // 인증 clear\n\n              this.utilityService.mainNavChanged.next(this.mainNavModel);    // main 화면 navigation활성화\n              this.router.navigate(['/']);                                   // main 홈페이지 화면으로 돌아감\n  }\n\n  isAuth() {\n              console.log(this.isAuthenticated);\n              return this.isAuthenticated;\n  }\n\n\n  isTecherAuth() {                                                 // welcome component에서 teacher인증여부를 각 tabl에 injection하여\n              return this.isteacherAuthenticated;                            // 선생님 관리자 모드인 경우 장바구니버튼과 purchase버튼을 보여주지 않을목적으로 설정됨\n  }\n\n  getProfileInfo() {\n              console.log('get Info Profile check');\n              this.profileInfo = new ProfileInfo('', localStorage.getItem('userName'));\n  return this.profileInfo;\n  }\n\n  getUserInfo() {\n\n    // 서버로 부터 모든 데이타를 가져오기 위해서는 반드시 현재 login한 userId와 token이 필요하다\n\n    const token = localStorage.getItem('token');\n    console.log('this is the app component mode');\n    return this.http.get<{ user: User }>(this.urlConfig + '/user/getUserInfo/' + '?token=' + token)\n                  .map( (getUser) => {\n\n                    this.user = getUser.user;\n                    console.log(this.user);\n                    return this.user;\n              },\n              (error) => console.log(error)                              // 나중에 이 error는 alert로 처리한다\n              );\n  }\n}\n","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  template: `\n         <router-outlet></router-outlet>\n  `\n})\nexport class AuthenticationComponent {\n\nconstructor() {}\n\n}\n","module.exports = \"\\n\\n<!--Main Layout-->\\n\\n<div class=\\\"view\\\">\\n        <div class=\\\"full-bg-img\\\">\\n            <div class=\\\"mask rgba-black-strong flex-center\\\">\\n                <div class=\\\"container\\\">\\n                        <div class=\\\"form-gradient col-md-6 mx-auto\\\">\\n                                <!--Form with header-->\\n                                <div class=\\\"card\\\">\\n        \\n                                    <!--Header-->\\n                                    <div class=\\\"header pt-3 blue-gradient z-depth-2\\\">\\n        \\n                                        <div class=\\\"row d-flex justify-content-center\\\">\\n                                            <h3 class=\\\"white-text mb-3 pt-3 font-weight-bold\\\">Log in</h3>\\n                                        </div>\\n        \\n                                        <div class=\\\"row mt-2 mb-3 d-flex justify-content-center\\\">\\n                                            <!--Facebook-->\\n                                            <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-facebook\\\"></i></a>\\n                                            <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-twitter\\\"></i></a>\\n                                            <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-google-plus\\\"></i></a>\\n                                        </div>\\n        \\n                                    </div>\\n                                    <!--Header-->\\n        \\n                                    <div class=\\\"card-body mx-4 mt-4\\\">\\n                                        <!-- SigUp form -->\\n                                        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                            <div class=\\\"md-form\\\">\\n                                            <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n                                            <input\\n                                                    type=\\\"email\\\"\\n                                                    formControlName=\\\"email\\\"\\n                                                    id=\\\"email\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    mdbInputDirective\\n                                            >\\n                                            <label for=\\\"email\\\">Your email</label>\\n                                            </div>\\n                                            <div class=\\\"md-form pb-1 pb-md-3\\\">\\n                                                <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n                                                <input\\n                                                    type=\\\"password\\\"\\n                                                    formControlName=\\\"password\\\"\\n                                                    id=\\\"password\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    mdbInputDirective\\n                                                >\\n                                                <label for=\\\"Form-pass3\\\">Your password</label>\\n                                                <p class=\\\"font-small grey-text d-flex justify-content-end\\\">Forgot <a href=\\\"#\\\" class=\\\"dark-grey-text ml-2 font-weight-bold\\\"> Password?</a></p>\\n                                            </div>\\n                                            <!--Grid row-->\\n                                            <div class=\\\"row d-flex align-items-center mb-4\\\">\\n        \\n                                                <!--Grid column-->\\n                                                <div class=\\\"col-md-1 col-md-5 d-flex align-items-start\\\">\\n                                                    <div class=\\\"text-center\\\">\\n                                                        <button *ngIf=\\\"!isLoading\\\" type=\\\"submit\\\" class=\\\"btn btn-grey btn-rounded z-depth-1\\\">Log in</button>\\n        \\n                                                        <!--Big blue-->\\n                                                        <mdb-spinner *ngIf=\\\"isLoading\\\" spinnerType=\\\"big crazy\\\"></mdb-spinner>\\n        \\n                                                    </div>\\n                                                </div>\\n                                                <!--Grid column-->\\n        \\n                                                <!--Grid column-->\\n                                                <div class=\\\"col-md-7\\\">\\n                                                    <p class=\\\"font-small grey-text d-flex justify-content-start mt-1\\\">Don't have an account? <a href=\\\"#\\\" class=\\\"dark-grey-text ml-3 font-weight-bold\\\"> Sign up</a></p>\\n                                                </div>\\n                                                <!--Grid column-->\\n        \\n                                            </div>\\n                                            <!--Grid row-->\\n                                        </form>\\n                                        <!--/Form with header-->\\n                                    </div>\\n                                </div>\\n                        </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n</div>\\n\\n<!--/Main layout-->\\n\"","module.exports = \".view {\\n  background: url('students.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.form-gradient .font-small {\\n  font-size: 0.8rem; }\\n\\n.form-gradient .header {\\n  border-top-left-radius: .3rem;\\n  border-top-right-radius: .3rem; }\\n\\n.form-gradient input[type=text]:focus:not([readonly]) {\\n  border-bottom: 1px solid #fd9267;\\n  box-shadow: 0 1px 0 0 #fd9267; }\\n\\n.form-gradient input[type=text]:focus:not([readonly]) + label {\\n  color: #4f4f4f; }\\n\\n.form-gradient input[type=password]:focus:not([readonly]) {\\n  border-bottom: 1px solid #fd9267;\\n  box-shadow: 0 1px 0 0 #fd9267; }\\n\\n.form-gradient input[type=password]:focus:not([readonly]) + label {\\n  color: #4f4f4f; }\\n\"","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { AuthService } from './../auth.service';\nimport { UtilityService } from './../../Utility-shared/utility.service';\n\nimport { User } from './../user.model';\nimport { Router } from '@angular/router';\n\nimport 'rxjs/add/operator/catch';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup;\n  pwdPattern = '^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{6,12}$';\n\n  teacherAuth = false;\n  isLoading = false;\n\n  private loadingSubscriptiion: Subscription;\n\n  constructor( private fb: FormBuilder,\n               private authService: AuthService,\n               private router: Router,\n               private utilityService: UtilityService\n              ) {}\n\n  ngOnInit() {\n\n    console.log('this is the login clicked');\n    this.loadingSubscriptiion = this.utilityService.loadingStateChanged.subscribe(loadingStatus => {\n      this.isLoading = loadingStatus;\n    });\n\n    this.loginForm = this.fb.group({\n                      email: ['', Validators.required],\n                      password: ['', [Validators.required,\n                                      Validators.minLength(6)\n                                ]]\n                    });\n    }\n\n\n    \n  onSubmit() {\n    console.log(this.loginForm.value.email);\n    const user = new User(this.loginForm.value.email,\n                          this.loginForm.value.password);\n\n    this.authService.login(user);\n    this.loginForm.reset();\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscriptiion.unsubscribe();\n  }\n}\n","module.exports = \"\\n<!--Main Layout-->\\n\\n<div class=\\\"view\\\">\\n    <div class=\\\"full-bg-img\\\">\\n        <div class=\\\"mask rgba-black-strong flex-center\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"card col-md-4 mx-auto\\\">\\n                    <h6 class=\\\"card-header primary-color white-text text-center rounded z-depth-2\\\">LogOut</h6>\\n                    <div class=\\\"card-body text-center\\\">\\n                        <p class=\\\"card-text text-center\\\">Do you really want to logout?</p>\\n                        <br>\\n                          <button class=\\\"btn btn-primary waves-light z-depth-2\\\" mdbWavesEffect (click)=\\\"onLogout()\\\" ><i class=\\\"fa fa-sign-out mr-1\\\"></i>Yes</button>\\n                          <button class=\\\"btn btn-default waves-light z-depth-2\\\" mdbWavesEffect\\n                                  \\n                          (click)=\\\"onStay()\\\">No<i class=\\\"fa fa-sign-in ml-1\\\"></i></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<!--/Main layout-->\\n\"","module.exports = \".view {\\n  background: url('university.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.navbar {\\n  z-index: 1; }\\n\"","import { Router, ActivatedRoute, RoutesRecognized } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { AuthService } from '../auth.service';\n\nimport { filter, pairwise } from 'rxjs/operators';\nimport { UtilityService } from '../../Utility-shared/utility.service';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent {\n\n  constructor(private location: Location,\n              private authService: AuthService,\n              private utilityService: UtilityService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n\n  onLogout() {\n    this.utilityService.audioPlaySevice('', '0', false);\n    this.authService.logout();\n\n  }\n\n  onStay() {\n\n    this.location.back();\n  }\n}\n","\nexport class ProfileInfo {\n  constructor( public email?: string,\n               public name?: string ) {}\n}\n","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-11 mx-auto\\\">\\n      <mdb-card class=\\\"testimonial-card\\\">\\n        <div class=\\\"card-up indigo lighten-1\\\">\\n        </div>\\n        <div class=\\\"avatar mx-auto\\\">\\n          <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/img%20%2810%29.jpg\\\" class=\\\"rounded-circle\\\">\\n        </div>\\n\\n        <mdb-card-body>\\n\\n          <mdb-card-title>\\n            <h4>{{ userInfo.name }}</h4>\\n          </mdb-card-title>\\n          <hr>\\n          <p>Email: {{ userInfo.email }}</p>\\n          <hr>\\n          <p>Password 변경 부위</p>\\n          <hr>\\n          <p>Current Address 삽입부위</p>\\n          <hr>\\n          <p>Shipping Address 삽입부위</p>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../../user.model';\n\n@Component({\n  selector: 'app-edit-user-profile',\n  templateUrl: './edit-user-profile.component.html',\n  styleUrls: ['./edit-user-profile.component.scss']\n})\nexport class EditUserProfileComponent {\n\n  @Input() userInfo: User;\n\n  constructor() { }\n\n}\n","module.exports = \"<p>\\n  exam-analysis works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exam-analysis',\n  templateUrl: './exam-analysis.component.html',\n  styleUrls: ['./exam-analysis.component.scss']\n})\nexport class ExamAnalysisComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  exam-history works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exam-history',\n  templateUrl: './exam-history.component.html',\n  styleUrls: ['./exam-history.component.scss']\n})\nexport class ExamHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"view\\\">\\n\\n        <div class=\\\"row t-1\\\">\\n            <div class=\\\"col-md-11 p-0 mx-auto\\\">\\n                    <mdb-tabset #staticTabs [buttonClass]=\\\"'md-tabs tabs-6 pills-secondary blue lighten-2'\\\" [contentClass]=\\\"''\\\">\\n\\n                            <mdb-tab heading=\\\"Edit User Profile\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <br>\\n                                        <app-edit-user-profile [userInfo]=\\\"userInfo\\\"></app-edit-user-profile>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                            <mdb-tab heading=\\\"Exam History\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 mx-auto\\\">\\n                                        <br>\\n                                        <app-exam-history></app-exam-history>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                            <mdb-tab heading=\\\"Exam Analysis\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 mx-auto\\\">\\n                                        <br>\\n                                       <app-exam-analysis></app-exam-analysis>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                            <mdb-tab heading=\\\"Exam Order Histroy\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 mx-auto\\\">\\n                                        <br>\\n                                        <app-profile-order-history [paidToeflLists]=\\\"paidToeflLists\\\" [numberOfPaginators]=\\\"numberOfPaginators\\\" [paginators]=\\\"paginators\\\" [totalAmount]=\\\"totalAmount\\\"></app-profile-order-history>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                    </mdb-tabset>\\n            </div>\\n        </div>\\n        <div class=\\\"row t-1\\\">\\n          <div class=\\\"col-md-11 text-center mx-auto\\\">\\n              <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"onReturn()\\\" mdbWavesEffect><mdb-icon icon=\\\"magic\\\" class=\\\"mr-1\\\"></mdb-icon>Confirmation</button>\\n          </div>\\n        </div>\\n</div>\\n\"","module.exports = \".view {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthService } from '../../auth.service';\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { PaidToeflList } from './../../../payment/model/paidToeflLists.model';\n\nimport { Router } from '@angular/router';\nimport { User } from '../../user.model';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.scss']\n})\nexport class ProfileEditComponent implements OnInit {\n\n\n  userInfo: User;\n\n  itemsPerPage = 3;\n  numberOfPaginators: number;\n  paginators: Array<any> = [];\n\n  currentDate = new Date();\n  totalAmount = 0;\n\n  paidToeflLists: PaidToeflList[] = [];\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private shoppingCartService: ShoppingcartService) { }\n\n  ngOnInit() {\n\n//         this.userInfo =  this.authService.getUserInfo();      // 실제 사용자 정보를 획득한다\n          console.log(this.userInfo);\n         this.paidToeflLists = this.shoppingCartService.getPaidToefltLists();\n                  if ( this.paidToeflLists.length !== 0 ) {\n                    for (const paidToeflitem of this.paidToeflLists) {\n                      this.totalAmount += paidToeflitem.examPrice;\n                    }\n                    this.calculatePagenator(this.paidToeflLists);\n                  }\n  }\n\ncalculatePagenator(paidToeflists) {\n\n      // 모든 Paid Toefl List명단에 관한 pagenator 산출\n           if (paidToeflists.length % this.itemsPerPage === 0) {\n            this.numberOfPaginators = Math.floor(paidToeflists.length / this.itemsPerPage);\n            } else {\n            this.numberOfPaginators = Math.floor(paidToeflists.length / this.itemsPerPage + 1);\n           }\n\n            for (let i = 1; i <= this.numberOfPaginators; i++) {\n                  this.paginators.push(i);\n            }\n}\n\nonReturn() {\n  this.router.navigate(['/']);\n}\n\n}\n","module.exports = \"\\n    <div class=\\\"card card-cascade narrower mt-0\\\">\\n        <table class=\\\"table table-hover table-responsive-md mb-0 text-center\\\">\\n            <thead>\\n            <tr>\\n                <th scope=\\\"th-lg\\\">Exam No<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examNo')\\\"></mdb-icon></th>\\n                <th class=\\\"th-lg\\\">Exam Type</th>\\n                <th class=\\\"th-lg\\\">Exam Level<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examLevel')\\\"></mdb-icon></th>\\n                <th class=\\\"th-lg\\\">Purchased Price<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examPrice')\\\"></mdb-icon></th>\\n                <th class=\\\"th-lg\\\">Purchased Date</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let paidToeflItem of paidToeflLists.slice().reverse(); let myIndex = index\\\">\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examNo}}</td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">\\n                        <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\\\"\\n                        class=\\\"avatar rounded-circle z-depth-1-half\\\"></td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examLevel}}</td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examPrice | currency: \\\"USD\\\"}}</td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">2018.08.23</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n\\n    <hr class=\\\"my-0\\\">\\n\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <nav class=\\\"my-4 pt-2\\\">\\n        <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n          <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n            <a class=\\\"page-link\\\">First</a>\\n          </li>\\n          <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n            <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n              <span aria-hidden=\\\"true\\\">&laquo;</span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n          </li>\\n          <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n              <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n          </li>\\n          <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n            <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n              <span aria-hidden=\\\"true\\\">&raquo;</span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </li>\\n          <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n            <a class=\\\"page-link\\\">Last</a>\\n          </li>\\n\\n        </ul>\\n      </nav>\\n\\n\\n    </div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit,  ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { PaidToeflList } from './../../../../payment/model/paidToeflLists.model';\n\n@Component({\n  selector: 'app-profile-order-history',\n  templateUrl: './profile-order-history.component.html',\n  styleUrls: ['./profile-order-history.component.scss']\n})\nexport class ProfileOrderHistoryComponent implements OnInit {\n\n  @Input() paidToeflLists: PaidToeflList[];\n  @Input() totalAmount: number;\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any> = [];\n\n  // tab 페이지 관련 변수설정 영역\n    @ViewChildren('pages') pages: QueryList<any>;\n    itemsPerPage = 3;\n    numberOfVisiblePaginators = 10;\n\n    activePage = 1;\n    firstVisibleIndex = 1;\n    lastVisibleIndex: number = this.itemsPerPage;\n    firstVisiblePaginator = 0;\n    lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n  constructor(private ref: ElementRef) { }\n\n  private sorted = false;\n  ngOnInit() {}\n\n\n  sortBy(by: string | any): void {\n\n    this.paidToeflLists.sort((a: any, b: any) => {\n          if (a[by] < b[by]) {\n            return this.sorted ? 1 : -1;\n          }\n          if (a[by] > b[by]) {\n            return this.sorted ? -1 : 1;\n          }\n          return 0;\n    });\n\n    this.sorted = !this.sorted;\n  }\n\n  changePage(event: any) {\n    if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n        this.activePage = +event.target.text;\n        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n  }\n  nextPage(event: any) {\n      if (this.pages.last.nativeElement.classList.contains('active')) {\n          if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n          } else {\n                this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                this.lastVisiblePaginator = this.numberOfPaginators;\n          }\n      }\n\n      this.activePage += 1;\n      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n  previousPage(event: any) {\n    if (this.pages.first.nativeElement.classList.contains('active')) {\n          if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n              this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n              this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n          } else {\n              this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n              this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n          }\n    }\n\n      this.activePage -= 1;\n      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n  firstPage() {\n      this.activePage = 1;\n      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n      this.firstVisiblePaginator = 0;\n      this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n  }\n  lastPage() {\n    this.activePage = this.numberOfPaginators;\n    this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n    this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n    if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n        this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n        this.lastVisiblePaginator = this.numberOfPaginators;\n    } else {\n        this.lastVisiblePaginator = this.numberOfPaginators;\n        this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                      (this.numberOfPaginators % this.numberOfVisiblePaginators);\n    }\n  }\n}\n","module.exports = \"\\n<div class=\\\"view\\\">\\n\\n  <div class=\\\"col-md-11 mx-auto\\\">\\n    <mdb-card cascade=\\\"true\\\" narrower=\\\"true\\\">\\n        <div class=\\\"view-cascade gradient-card-header blue-gradient narrower z-depth-1-half\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1\\\">\\n                <div class=\\\"text-left\\\">\\n                    <a mdbBtn floating=\\\"true\\\" size=\\\"sm\\\" gradient=\\\"blue\\\" (click)=\\\"onReturn()\\\" mdbWavesEffect><mdb-icon icon=\\\"angle-double-left\\\"></mdb-icon></a>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-11 p-3\\\">\\n                <div class=\\\"text-center\\\">\\n                    <h4 class=\\\"white-text font-weight-bold text-uppercase mb-0\\\">\\n                        Table with pagination</h4>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      <div class=\\\"px-4\\\">\\n        <table class=\\\"table table-hover table-responsive-md mb-0 text-center\\\">\\n            <thead>\\n            <tr>\\n              <th scope=\\\"th-lg\\\">Exam No<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examNo')\\\"></mdb-icon></th>\\n              <th class=\\\"th-lg\\\">Exam Type</th>\\n              <th class=\\\"th-lg\\\">Exam Level<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examLevel')\\\"></mdb-icon></th>\\n              <th class=\\\"th-lg\\\">Purchased Price<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examPrice')\\\"></mdb-icon></th>\\n              <th class=\\\"th-lg\\\">Purchased Date</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let paidToeflItem of elements; let i = index\\\">\\n                <th *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" scope=\\\"row\\\" class=\\\"align-middle\\\">{{paidToeflItem.examNo}}</th>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\"class=\\\"align-middle\\\">\\n                        <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\\\"\\n                        class=\\\"avatar rounded-circle z-depth-1-half\\\"></td>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examLevel}}</td>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examPrice | currency: \\\"USD\\\"}}</td>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.paidDate | date }}</td>\\n            </tr>\\n            </tbody>\\n            <tfoot class=\\\"grey lighten-5\\\" p-0>\\n              <tr>\\n                <td colspan=\\\"5\\\">\\n                  <mdb-table-pagination\\n                                        (nextPageClick)=\\\"onNextPageClick($event)\\\"\\n                                        (previousPageClick)=\\\"onPreviousPageClick($event)\\\">\\n                  </mdb-table-pagination>\\n                </td>\\n              </tr>\\n\\n            </tfoot>\\n        </table>\\n      </div>\\n    </mdb-card>\\n\\n    <hr class=\\\"my-0\\\">\\n\\n    <div class=\\\"text-center\\\">\\n          <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"onReturn()\\\" mdbWavesEffect><mdb-icon icon=\\\"magic\\\" class=\\\"mr-1\\\"></mdb-icon>Confirmation</button>\\n      </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".view {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\"","import { MdbTablePaginationComponent, MdbTableService } from 'ng-uikit-pro-standard';\nimport { Component, OnInit,  ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaidToeflList } from './../../../payment/model/paidToeflLists.model';\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { AuthService } from '../../auth.service';\nimport { Subscription } from 'rxjs/Subscription';\n@Component({\n  selector: 'app-purchased-history',\n  templateUrl: './purchased-history.component.html',\n  styleUrls: ['./purchased-history.component.scss']\n})\nexport class PurchasedHistoryComponent implements OnInit, AfterViewInit {\n\n  paidToeflLists: PaidToeflList[];\n  totalAmount: number;\n  paidToeflListsSubscription: Subscription;\n\n  // tab 페이지 관련 변수설정 영역\n\n  @ViewChild(MdbTablePaginationComponent) mdbTablePagination: MdbTablePaginationComponent;\n\n  elements: any = [];\n  previous: any = [];\n  headElements = ['ID', 'First', 'Last', 'Handle'];\n\n  firstItemIndex;\n  lastItemIndex;\n\n  constructor(private shoppingCartService: ShoppingcartService,\n              private router: Router,\n              private tableService: MdbTableService,\n              private cdRef: ChangeDetectorRef) { }\n\n  private sorted = false;\n\n  ngOnInit() {\n    console.log('this is the purchased history');\n    this.paidToeflLists = this.shoppingCartService.getPaidToefltLists();\n\n    console.log(this.paidToeflLists);\n    this.elements = this.paidToeflLists;\n    this.tableService.setDataSource(this.elements);\n    this.elements = this.tableService.getDataSource();\n    this.previous = this.tableService.getDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(4);\n    this.firstItemIndex = this.mdbTablePagination.firstItemIndex;\n    this.lastItemIndex = this.mdbTablePagination.lastItemIndex;\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  onNextPageClick(data: any) {\n    this.firstItemIndex = data.first;\n    this.lastItemIndex = data.last;\n  }\n\n  onPreviousPageClick(data: any) {\n    this.firstItemIndex = data.first;\n    this.lastItemIndex = data.last;\n  }\n\n  onReturn() {\n              this.router.navigate(['/']);\n  }\n  sortBy(by: string | any): void {\n\n    this.paidToeflLists.sort((a: any, b: any) => {\n          if (a[by] < b[by]) {\n            return this.sorted ? 1 : -1;\n          }\n          if (a[by] > b[by]) {\n            return this.sorted ? -1 : 1;\n          }\n          return 0;\n    });\n\n    this.sorted = !this.sorted;\n  }\n\n}\n","module.exports = \"\\n<!--Main Layout-->\\n<main>\\n    <div class=\\\"view\\\">\\n        <div class=\\\"full-bg-img\\\">\\n            <div class=\\\"mask rgba-black-strong flex-center\\\">\\n\\n                  <!--Section: Live preview-->\\n                  <div class=\\\"form-light col-md-4\\\">\\n\\n                    <!--Form without header-->\\n                    <div class=\\\"card\\\">\\n\\n                        <div class=\\\"card-body mx-4\\\">\\n\\n                            <!--Header-->\\n                            <div class=\\\"text-center\\\">\\n                                <h3 class=\\\"white-text mb-5 blue-gradient waves-light z-depth-3 rounded\\\"><strong>Sign up</strong></h3>\\n                            </div>\\n\\n                              <!-- SigUp form -->\\n                                <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                    <div class=\\\"md-form\\\">\\n                                      <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n                                      <input\\n                                            type=\\\"text\\\"\\n                                            formControlName=\\\"name\\\"\\n                                            id=\\\"name\\\"\\n                                            class=\\\"form-control\\\"\\n                                            mdbInputDirective\\n                                      >\\n                                      <label for=\\\"name\\\">Your Name</label>\\n                                    </div>\\n\\n                                    <div class=\\\"md-form\\\">\\n                                        <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n                                        <input\\n                                              type=\\\"email\\\"\\n                                              formControlName=\\\"email\\\"\\n                                              id=\\\"email\\\"\\n                                              class=\\\"form-control\\\"\\n                                              mdbInputDirective\\n                                        >\\n                                        <label for=\\\"email\\\">Your email</label>\\n                                      </div>\\n\\n\\n                                    <div class=\\\"md-form pb-3\\\">\\n                                      <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n                                      <input\\n                                            type=\\\"password\\\"\\n                                            formControlName=\\\"password\\\"\\n                                            id=\\\"password\\\"\\n                                            class=\\\"form-control\\\"\\n                                            mdbInputDirective\\n                                      >\\n                                      <label for=\\\"password\\\">Your password</label>\\n\\n                                      <div class=\\\"form-check my-4\\\">\\n                                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"defaultCheck12\\\">\\n                                          <label for=\\\"defaultCheck12\\\" class=\\\"grey-text\\\">Accept the<a href=\\\"#\\\" class=\\\"blue-text\\\"> Terms and Conditions</a></label>\\n                                      </div>\\n                                    </div>\\n\\n                                    <!--Grid row-->\\n                                    <div class=\\\"row d-flex align-items-center mb-4\\\">\\n\\n                                        <!--Grid column-->\\n                                        <div class=\\\"col-md-3 col-md-6 text-center\\\">\\n                                            <button\\n                                                  *ngIf=\\\"!isLoading\\\"\\n                                                  [disabled]=\\\"!signUpForm.valid\\\"\\n                                                  type=\\\"submit\\\"\\n                                                  class=\\\"btn btn-pink btn-block btn-rounded z-depth-1 waves-light\\\"\\n                                                  mdbWavesEffect>Sign Up</button>\\n                                            <!--Big blue-->\\n                                            <mdb-spinner *ngIf=\\\"isLoading\\\" spinnerType=\\\"big crazy\\\"></mdb-spinner>\\n                                        </div>\\n                                        <!--Grid column-->\\n\\n                                        <!--Grid column-->\\n                                        <div class=\\\"col-md-6\\\">\\n                                            <p class=\\\"font-small grey-text d-flex justify-content-center\\\">Have an account? <a href=\\\"#\\\" class=\\\"blue-text ml-2\\\"> Log in</a></p>\\n                                        </div>\\n                                        <!--Grid column-->\\n\\n                                    </div>\\n                                    <!--Grid row-->\\n                                </form>\\n                                <!-- Login form -->\\n\\n                        <!--Footer-->\\n                        <div class=\\\"footer pt-3 mdb-color lighten-3\\\">\\n\\n                            <div class=\\\"row d-flex justify-content-center\\\">\\n                                <p class=\\\"font-small white-text mb-2 pt-3\\\">or Sign up with:</p>\\n                            </div>\\n\\n                            <div class=\\\"row mt-2 mb-3 d-flex justify-content-center\\\">\\n                                <!--Facebook-->\\n                                <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-facebook\\\"></i></a>\\n                                <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-twitter\\\"></i></a>\\n                                <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-google-plus\\\"></i></a>\\n                            </div>\\n\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <!--/Form without header-->\\n\\n                  </div>\\n                  <!--Section: Live preview-->\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n</main>\\n<!--/Main layout-->\\n\"","module.exports = \".view {\\n  background: url('students.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.form-light .font-small {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"radio\\\"] + label,\\n.form-light [type=\\\"checkbox\\\"] + label {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"checkbox\\\"] + label:before {\\n  top: 2px;\\n  width: 15px;\\n  height: 15px; }\\n\\n.form-light input[type=\\\"checkbox\\\"] + label:before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 17px;\\n  height: 17px;\\n  z-index: 0;\\n  border-radius: 1px;\\n  margin-top: 2px;\\n  transition: 0.2s; }\\n\\n.form-light input[type=\\\"checkbox\\\"]:checked + label:before {\\n  top: -4px;\\n  left: -3px;\\n  width: 12px;\\n  height: 22px;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: transparent #EB3573 #EB3573 transparent;\\n  -webkit-transform: rotate(40deg);\\n  transform: rotate(40deg);\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform-origin: 100% 100%;\\n  transform-origin: 100% 100%; }\\n\\n.form-light .footer {\\n  border-bottom-left-radius: .3rem;\\n  border-bottom-right-radius: .3rem; }\\n\"","\n\nimport { User } from './../user.model';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { UtilityService } from './../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n\n  permission = 'teacher';\n  signUpForm: FormGroup;\n  isLoading = false;\n  loadingSubscription: Subscription;\n\n  pwdPattern = '^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{6,12}$';\n  constructor(private fb: FormBuilder,\n              private authServie: AuthService,\n              private router: Router,\n              private utilityService: UtilityService\n            ) {}\n\n  ngOnInit() {\n    this.loadingSubscription = this.utilityService.loadingStateChanged.subscribe(loadingStatus => {\n                                this.isLoading = loadingStatus;\n                                });\n\n    this.signUpForm = this.fb.group({\n                      name: [''],\n                      email: ['', Validators.required],\n                      password: ['', [Validators.required,\n                                      Validators.minLength(6)\n                                    ]],\n                      permissionTag: ['student']\n                  });\n  }\n\n  onSubmit() {\n\n    const user = new User(this.signUpForm.value.email,\n                          this.signUpForm.value.password,\n                          this.signUpForm.value.name,\n                          this.signUpForm.value.permissionTag);\n\n    this.authServie.signup(user);\n    this.signUpForm.reset();\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n  }\n}\n","\nexport class User {\n  constructor( public email: string,\n               public password: string,\n               public name?: string,\n               public permissionTag?: string,\n               public created_at?: Date,\n               public update_at?: Date,\n               public provider?: string,\n               public authToken?: string,\n               public facebook?: string,\n               public google?: string ) {}\n}\n","import { UtilityService } from './Utility-shared/utility.service';\n/*\nhttpClient에서 발생하는 모든 error를 중간에서 intercet한후\n이것을 MATDialog->ErrorComponent에 MODAL을 이용하여 error message를 화면와 보여준다\n*/\n\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor,\n         HttpHandler,\n         HttpRequest,\n         HttpErrorResponse} from '@angular/common/http';\n\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs/';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor( private dialog: MatDialog ) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An Unkwown error occurred';\n        let errorTitle = 'An Unkown Error Title';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n          errorTitle = error.error.title;\n        }\n        this.dialog.open( ErrorComponent, {data: { message: errorMessage, title: errorTitle}});\n        return throwError(error);\n      })\n    );\n  }\n}\n","module.exports = \"<div mdbModal #basicModal=\\\"mdbModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"basicModal.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n        <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{ data.title }}</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        {{ data.message }}\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary waves-light\\\" aria-label=\\\"OK\\\" (click)=\\\"basicModal.hide()\\\" mdbWavesEffect>Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","\nimport { ModalDirective } from 'ng-uikit-pro-standard';\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements AfterViewInit {\n\n  @ViewChild('basicModal') basicModal: ModalDirective;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string, title: string}) {}\n\n  ngAfterViewInit(): void {\n    this.basicModal.show();\n  }\n\n}\n","module.exports = \"<!--Footer-->\\n<footer class=\\\"page-footer mdb-color text-center text-md-left pt-4 mt-4\\\">\\n\\n  <!--Footer Links-->\\n  <div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n  \\n      <!--First column-->\\n      <div class=\\\"col-md-3 offset-md-1\\\">\\n          <h5 class=\\\"title\\\">Footer Content </h5>\\n          <p>Here you can use rows and columns here to organize your footer content.</p>\\n      </div>\\n      <!--/.First column-->\\n  \\n      <hr class=\\\"hidden-md-up\\\">\\n  \\n      <!--Second column-->\\n      <div class=\\\"col-md-2 offset-md-1\\\">\\n          <h5 class=\\\"title\\\">Links</h5>\\n          <ul class=\\\"list-unstyled\\\">\\n              <li>\\n                  <a href=\\\"#!\\\">Link 1</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 2</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 3</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 4</a>\\n              </li>\\n          </ul>\\n      </div>\\n      <!--/.Second column-->\\n  \\n      <hr class=\\\"hidden-md-up\\\">\\n  \\n      <!--Third column-->\\n      <div class=\\\"col-md-2\\\">\\n          <h5 class=\\\"title\\\">Links</h5>\\n          <ul class=\\\"list-unstyled\\\">\\n              <li>\\n                  <a href=\\\"#!\\\">Link 1</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 2</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 3</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 4</a>\\n              </li>\\n          </ul>\\n      </div>\\n      <!--/.Third column-->\\n  \\n      <hr class=\\\"hidden-md-up\\\">\\n  \\n      <!--Fourth column-->\\n      <div class=\\\"col-md-2\\\">\\n          <h5 class=\\\"title\\\">Links</h5>\\n          <ul class=\\\"list-unstyled\\\">\\n              <li>\\n                  <a href=\\\"#!\\\">Link 1</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 2</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 3</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 4</a>\\n              </li>\\n          </ul>\\n      </div>\\n      <!--/.Fourth column-->\\n  \\n  </div>\\n  </div>\\n  <!--/.Footer Links-->\\n  \\n  <hr>\\n  <!--Social buttons-->\\n  <div class=\\\"text-center mb-3\\\">\\n  \\n  <a class=\\\"btn-floating btn-small btn-fb waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-facebook\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-tw waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-twitter\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-gplus waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-google-plus\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-li waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-linkedin\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-git waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-github\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-pin waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-pinterest\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-ins waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-instagram\\\"> </i>\\n  </a>\\n  \\n  </div>\\n  <!--/.Social buttons-->\\n  \\n  <!--Copyright-->\\n  <div class=\\\"footer-copyright text-center py-3\\\">\\n  <div class=\\\"container-fluid\\\">\\n      © 2017 Copyright:\\n      <a href=\\\"https://www.MDBootstrap.com\\\"> MDBootstrap.com </a>\\n  \\n  </div>\\n  </div>\\n  <!--/.Copyright-->\\n  \\n  </footer>\\n  <!--/.Footer-->\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- Navbar -->\\n<mdb-navbar SideClass=\\\"navbar fixed-top navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav\\\" [containerInside]=\\\"false\\\">\\n\\n  <!-- SideNav slide-out button -->\\n                  <navlinks class=\\\"navbar-container\\\">\\n                      <div class=\\\"float-left\\\">\\n                          <a (click)=\\\"onToggleSideNav()\\\" class=\\\"button-collapse hidden-nav-button-collapse\\\">\\n                              <i class=\\\"fa fa-bars\\\"></i>\\n                          </a>\\n                      </div>\\n                  </navlinks>\\n\\n  <!-- Breadcrumb-->\\n                  <logo>\\n\\n                      <div class=\\\"breadcrumbs breadcrumbs-hidden-nav breadcrumb-dn mr-auto\\\">\\n                          <p>Total Examinations for People </p>\\n                      </div>\\n                  </logo>\\n\\n  <!-- 가로 진열하는 각종 navbar menu를 구성하는 영역 -->\\n        <navlinks>\\n                <ul class=\\\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav ie-hidden-double-nav\\\">\\n\\n\\n      <!-- 시험출제자 모드로 로그인 하였을시 활성화 시킨다 -->\\n                          <li *ngIf=\\\"isteacherAuth\\\" class=\\\"nav-item\\\">\\n\\n                              <a class=\\\"nav-link border border-light rounded waves-light\\\"\\n                              [routerLink]=\\\"['/teacher']\\\"\\n                              mdbWavesEffect>\\n                                  <i class=\\\"fa fa-pencil-square-o\\\"></i>\\n                                  <span class=\\\"clearfix d-none d-sm-inline-block\\\">Examination</span>\\n                              </a>\\n                          </li>\\n\\n      <!-- Contact Navbar 시작 -->\\n                          <li  class=\\\"nav-item\\\">\\n                              <a class=\\\"nav-link waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-envelope-o\\\"></i>\\n                                  <span class=\\\"clearfix d-none d-sm-inline-block\\\">Contact</span>\\n                              </a>\\n                          </li>\\n\\n      <!-- Support Navbar 시작 -->\\n                          <li  class=\\\"nav-item\\\">\\n                              <a class=\\\"nav-link waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-comments-o\\\"></i>\\n                                  <span class=\\\"clearfix d-none d-sm-inline-block\\\">Support</span>\\n                              </a>\\n                          </li>\\n\\n      <!-- shopping cart dropdown menu시작 -->\\n\\n                          <li *ngIf=\\\"!isteacherAuth && isAuth\\\" class=\\\"nav-item dropdown btn-group\\\" dropdown >\\n\\n\\n                                <a dropdownToggle type=\\\"button\\\" aria-hidden=\\\"true\\\"\\n                                    class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n                                        <i class=\\\"fa  fa-shopping-bag fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n                                        <span class=\\\"counter\\\">  {{ shoppingcartListCounter }} </span>\\n                                </a>\\n                                                <div *ngIf=\\\"shoppingcartListCounter != 0\\\" class=\\\"dropdown-menu dropdown-primary dropdown-menu-right text-center\\\"  role=\\\"menu\\\" >\\n                                                            <table class=\\\"table\\\">\\n                                                                <thead>\\n                                                                  <tr>\\n                                                                    <th colspan=\\\"1\\\">No</th>\\n                                                                    <th colspan=\\\"1\\\">Level</th>\\n                                                                    <th colspan=\\\"1\\\">Price</th>\\n                                                                    <th colspan=\\\"1\\\">Remove</th>\\n                                                                  </tr>\\n                                                                </thead>\\n                                                                <tbody>\\n\\n                                                                  <tr *ngFor=\\\"let shoppingcartItem of shoppingcartLists\\\">\\n\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        {{shoppingcartItem.examNo}}\\n                                                                    </td>\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        {{shoppingcartItem.examLevel}}\\n                                                                    </td>\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        {{shoppingcartItem.examPrice | currency : \\\"USD\\\" }}\\n                                                                    </td>\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"shoppingcartItemDelete(shoppingcartItem)\\\">\\n                                                                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                                                                        </button>\\n                                                                    </td>\\n                                                                  </tr>\\n                                                                </tbody>\\n                                                             </table>\\n                                                              <div class=\\\"dropdown-divider\\\"></div>\\n                                                              <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" outline=\\\"true\\\" size=\\\"sm\\\"\\n                                                                      (click)=\\\"goShoppingListCheckOut()\\\" mdbWavesEffect>\\n                                                                      <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                                      CheckOut\\n                                                              </button>\\n                                                              <button mdbBtn class=\\\"mr-1\\\" type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" outline=\\\"true\\\" size=\\\"sm\\\"\\n                                                              (click)=\\\"goShoppingListSave()\\\" mdbWavesEffect>\\n                                                              <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                              Save\\n                                                      </button>\\n\\n                                                </div>\\n                          </li>\\n\\n      <!-- 사용자 profile dropdopw menu -->\\n                          <li *ngIf=\\\"isAuth\\\" class=\\\"nav-item dropdown btn-group\\\" dropdown>\\n                              <a dropdownToggle type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-user-circle-o\\\"></i>\\n                                  {{ this.profileInfo.name }}\\n                              </a>\\n                              <div class=\\\"dropdown-menu dropdown-primary dropdown-menu-right\\\" role=\\\"menu\\\">\\n                                  <button class=\\\"dropdown-item\\\" (click)=\\\"onDashboard()\\\"><i class=\\\"fa fa-user-circle-o mr-1\\\"></i>Dashboard</button>\\n                                  <a *ngIf=\\\"!isteacherAuth\\\" class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/orderHistory']\\\"><i class=\\\"fa fa-info mr-1\\\"></i>Purchase History</a>\\n                                  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/logout']\\\"><i class=\\\"fa fa-sign-out mr-1\\\"></i>LogOut</a>\\n                              </div>\\n                          </li>\\n\\n      <!-- 사용자 login/signup dropdown menu  -->\\n                          <li *ngIf=\\\"!isAuth\\\" class=\\\"nav-item dropdown btn-group\\\" dropdown>\\n                              <a dropdownToggle type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-smile-o\\\"></i>\\n                                  LogIn\\n                              </a>\\n                              <div class=\\\"dropdown-menu dropdown-primary dropdown-menu-right\\\" role=\\\"menu\\\">\\n                                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/login']\\\">\\n                                  <i class=\\\"fa fa-sign-in\\\"></i>\\n                                  LogIn</a>\\n                                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/signup']\\\">\\n                                  <i class=\\\"fa fa-registered\\\"></i>\\n                                  SignUp</a>\\n                            </div>\\n                          </li>\\n\\n                </ul>\\n        </navlinks>\\n    </mdb-navbar>\\n\\n\"","module.exports = \"\"","import { Component, OnInit, EventEmitter, Output, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthService } from '../../auth/auth.service';\nimport { ShoppingcartService} from '../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../payment/model/shoppingcart.model';\nimport { ProfileInfo } from '../../auth/profile.model';\nimport { User } from '../../auth/user.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n// 상단 navBar와 sideMenu와 관련한 변수설정\n    @Output() sidenavToggle = new EventEmitter<void>();\n    @Input() isAuth: boolean;\n    @Input() isteacherAuth: boolean;\n    @Input() profileInfo: ProfileInfo;\n\n    userInfo: User;\n// 인증관련 Subscription 변수설정\n    authSubscription: Subscription;\n    teacherAuthSubscription: Subscription;\n\n// shoppingcart에 관한 변수설정\n    shoppingcartLists: Shoppingcart[] = [];\n    shoppingcartListCounter = 0;\n    shoppingcartListSubscription: Subscription;\n\nconstructor(private authService: AuthService,\n            private router: Router,\n            private shoppingcartService: ShoppingcartService) { }\n\n  ngOnInit() {\n\n   // 인증관련 Subject설정\n    this.authSubscription = this.authService.authChange.subscribe((authStatus: boolean) => {\n          // 로그인 여부 확인\n                    this.isAuth = authStatus;\n          // 로그인이 되어 있지 않으면 shoppingcartLists를 초기화한다\n                    if (!this.isAuth) {\n                      this.shoppingcartLists = [];\n                      this.shoppingcartListCounter = 0;\n                    } else {\n                        // 사용자 프로파일중 이름을 가져온다\n                        this.profileInfo = this.authService.getProfileInfo();\n                        console.log('로컬 스토리지 로 부터', this.profileInfo);\n\n\n                            // 시험출제자 선생님 인증관련 영역\n                          this.teacherAuthSubscription = this.authService.teacherAuth.subscribe((teacherStatus: boolean) => {\n                                                         this.isteacherAuth = teacherStatus;\n                                                         });\n\n                        // 로그인이 되어 있고 teacher mode가 아니면 shopping cart를 활성화 시킨다\n                        if (!this.isteacherAuth) {\n                            this.shoppingcartListSubscription = this.shoppingcartService.shoppingCartListAdded\n                                                              .subscribe((shoppingcart: Shoppingcart[]) => {\n                                                              // tslint:disable-next-line:max-line-length\n                                                              this.shoppingcartLists = shoppingcart.sort((a, b) => 0 - (a.examNo > b.examNo ? -1 : 1));\n                                                              this.shoppingcartListCounter = this.shoppingcartLists.length;\n\n                                                            });\n                            // 처음 angular가 접속하였을시 node server로 부터 인증된 user 정보에서 shopping cart 와 paidToeflLists 정보 가져오기\n                               this.shoppingcartService.connectAuthShoppingCart();\n                      }\n                    }\n\n    });\n\n  }\n    // 유저가 헤더부분에 있는 쇼핑목록을 지웠을때 실행됨.\n    shoppingcartItemDelete(shoppingcartItem: Shoppingcart) {\n      this.shoppingcartService.shoppingCartItemRemoved(shoppingcartItem);\n    }\n\n    // 헤더 쇼핑카트부분에 있는 체크아웃 버튼을 눌렀을때 paymentPreview Page로 이동합니다.\n    goShoppingListCheckOut() {\n      this.shoppingcartService.goCheckOut();\n    }\n\n    // 서버에 shopping cart내용을 정리한후 훗날 재사용할 수 있도록 하는 기능추가\n    goShoppingListSave() {\n      this.shoppingcartService.goSave();\n    }\n\n    onToggleSideNav() {\n      this.sidenavToggle.emit();\n    }\n\n  onDashboard() {\n    console.log('dash board click');\n    this.authService.getUserInfo().subscribe((user: User) => {\n      this.userInfo = user;\n      console.log(this.userInfo);\n    });\n\n    this.router.navigate(['/auth/profile']);\n    console.log(this.userInfo);\n  }\n\n    ngOnDestroy() {\n      this.authSubscription.unsubscribe();\n      if (!this.isteacherAuth) {\n        this.shoppingcartListSubscription.unsubscribe();\n      }\n      this.teacherAuthSubscription.unsubscribe();\n  }\n\n}\n\n","module.exports = \"\\n        <logo>\\n          \\n                <div class=\\\"logo-wrapper waves-light pl-4\\\">                                       \\n                                        <img src=\\\"../../../assets/img/toeflLogo.png\\\"\\n                                        class=\\\"rounded-circle img-fluid flex-center\\\"\\n                                        style=\\\"max-height: 90px\\\">       \\n                </div>\\n                \\n        </logo>\\n\\n     \\n            <!-- Side navigation links -->\\n            \\n                <ul class=\\\"collapsible collapsible-accordion\\\">\\n                    <mdb-squeezebox [multiple]=\\\"false\\\" aria-multiselectable=\\\"false\\\">\\n\\n                        <!-- Collapsible link -->\\n                        <mdb-item>\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-chevron-right\\\"></i> Collapsible menu</mdb-item-head>\\n                            <mdb-item-body>\\n                                <ul>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 1</a>\\n                                    </li>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 2</a>\\n                                    </li>\\n                                </ul>\\n                            </mdb-item-body>\\n                        </mdb-item>\\n\\n                        <!-- Simple link -->\\n                        <mdb-item class=\\\"no-collase\\\">\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-hand-pointer-o\\\"></i> Simple link</mdb-item-head>\\n                            <mdb-item-body></mdb-item-body>\\n                        </mdb-item>\\n\\n                        <!-- Collapsible link -->\\n                        <mdb-item>\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-eye\\\"></i> Collapsible menu 2</mdb-item-head>\\n                            <mdb-item-body>\\n                                <ul>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 1</a>\\n                                    </li>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 2</a>\\n                                    </li>\\n                                </ul>\\n                            </mdb-item-body>\\n                        </mdb-item>\\n\\n                        <!-- Simple link -->\\n                        <mdb-item class=\\\"no-collase\\\">\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-diamond\\\">\\n                                    <a></a>\\n                                </i> Logout </mdb-item-head>\\n                            <mdb-item-body></mdb-item-body>\\n                        </mdb-item>\\n\\n                    </mdb-squeezebox>\\n                </ul>\\n           \\n            <!--/. Side navigation links -->\\n       \\n        <div class=\\\"sidenav-bg mask-strong\\\"></div>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.scss']\n})\nexport class SidenavListComponent {\n}\n","import { Shoppingcart } from './shoppingcart.model';\n\nexport class Payment {\n    constructor(\n                    public userToken?: string,\n                    public shoppingCartLists?: Shoppingcart[],\n                    public amount?: number) {}\n}\n","export class Shoppingcart {\n    constructor(\n                   public examNo: number,\n                   public examLevel: string,\n                   public examPrice?: number\n    ) {}\n}\n","import { Shoppingcart } from './shoppingcart.model';\nexport class StripeModel {\n\n    constructor( public cardHolderName?: string,\n                 public cardHolderEmail?: string,\n                 public cardHolderZip?: string,\n                 public tokenId?: string,\n                 public userToken?: string,\n                 public shoppingCartLists?: Shoppingcart[],\n                 public amount?: number,\n                 public cardNumber?: string,\n                 public cardExpiry?: string,\n                 public cardCvc?: string)\n                 { }\n}\n","module.exports = \"\"","module.exports = \".table {\\n  margin-left: 3rem;\\n  margin-right: 3rem; }\\n\\n#totalAmount {\\n  border-top: 2px solid #444444;\\n  border-bottom: 2px solid; }\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { MainNavModel } from './../../../Utility-shared/mainNavChange.model';\nimport { UtilityService } from '../../../Utility-shared/utility.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../../auth/auth.service';\nimport { PaypalPaymentService } from '../../paymentAgency-Service/paypal-payment.service';\n\n@Component({\n  selector: 'app-payment-notification',\n  templateUrl: './payment-notification.component.html',\n  styleUrls: ['./payment-notification.component.scss']\n})\nexport class PaymentNotificationComponent implements OnInit, AfterViewInit {\n\n  mainNavModel: MainNavModel;\n\n  constructor(private utilityService: UtilityService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private authService: AuthService,\n              private payPalService: PaypalPaymentService\n            ) { }\n\n  ngOnInit() {\n    console.log('this is a init result page');\n        this.mainNavModel = new MainNavModel(false, false, false);\n        this.utilityService.mainNavChanged.next(this.mainNavModel);    // main 화면 navigation활성화\n        this.authService.authChange.next(true);                         // header component에 영향을 주는 authChange값\n        this.authService.isAuthenticated = true;\n        this.router.navigate(['/']);\n        this.payPalService.getPaypalResult();\n\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.utilityService.successToast('PayPal 결제가 완료되었습니다. 감사합니다', 'PayPal 결제완료 공지사항');\n    }, 0);\n\n  }\n}\n","module.exports = \"\\n<mdb-card class=\\\"text-center\\\">\\n    <mdb-card-header class=\\\"dark-grey-text\\\">\\n      <h3><strong>Order Summary</strong></h3>\\n    </mdb-card-header>\\n\\n      <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table text-right\\\">\\n              <tbody>\\n\\n                  <td colspan=\\\"2\\\">Subtotal:</td>\\n                  <td colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</td>\\n\\n                  <tr>\\n                      <td colspan=\\\"2\\\">\\n                        Applied D/C:\\n                      </td>\\n                      <td colspan=\\\"2\\\">\\n\\n                      </td>\\n                  </tr>\\n\\n                  <tr>\\n                  <td colspan=\\\"2\\\">Estimated Tax:</td>\\n                  <td colspan=\\\"1\\\"></td>\\n                  </tr>\\n                  <tr>\\n                      <th colspan=\\\"2\\\">Total:</th>\\n                      <th colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</th>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"4\\\">\\n                        <button class=\\\"btn btn-block btn-sm red\\\" id=\\\"couponBtn\\\" (click)=\\\"goCancel()\\\">Cancel</button>\\n                    </td>\\n                   </tr>\\n              </tbody>\\n          </table>\\n      </div>\\n\\n    <mdb-card-footer class=\\\"text-muted success-color white-text\\\">\\n      <p class=\\\"mb-0\\\">2 days ago</p>\\n    </mdb-card-footer>\\n  </mdb-card>\\n\\n\"","module.exports = \"\"","import { Component, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment-order-summary',\n  templateUrl: './payment-order-summary.component.html',\n  styleUrls: ['./payment-order-summary.component.scss']\n})\nexport class PaymentOrderSummaryComponent {\n\n  checkShoppingCart = false;\n\n  @Input() totalAmount: number;\n\n  constructor(private location: Location,\n              private router: Router) {}\n\n  goCancel() {\n    this.router.navigate(['/']);\n  }\n  getPromoCode() {\n    console.log('promo click');\n  }\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"row mx-0 p-3\\\">\\n    <div class=\\\"col-md-9 mx-auto\\\">\\n        <div class=\\\"card\\\">\\n            <h3 class=\\\"card-header text-center\\\">Payment Method Selection</h3>\\n            <mdb-progress-bar class=\\\"progress primary-color-dark\\\" mode=\\\"indeterminate\\\"></mdb-progress-bar>\\n              <div class=\\\"card-body\\\">\\n                  <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n\\n                          <div class=\\\"form-check\\\">\\n                                      <input class=\\\"form-check-input\\\" [checked]=\\\"stripeCheckbox\\\" (change)=\\\"activeStripe()\\\" mdbInputDirective type=\\\"checkbox\\\"  id=\\\"checkbox1\\\">\\n                                      <label class=\\\"form-check-label\\\" for=\\\"checkbox1\\\">Credit or Debit Card</label>\\n                          </div>\\n                          <form [formGroup]=\\\"stripeForm\\\" (ngSubmit)=\\\"onStripeSubmit()\\\">\\n\\n                              <fieldset [disabled]=\\\"!stripeisActive\\\">\\n\\n                                          <div class=\\\"row\\\">\\n                                              <div class=\\\"col-md-1\\\"></div>\\n                                              <div class=\\\"col-md-11\\\">\\n                                                    <div class=\\\"md-form\\\">\\n                                                            <input mdbInputDirective\\n                                                                  type=\\\"text\\\"\\n                                                                  id=\\\"cardHolderName\\\"\\n                                                                  formControlName=\\\"cardHolderName\\\"\\n                                                            class=\\\"form-control\\\">\\n                                                            <label for=\\\"cardHolderName\\\">Name</label>\\n                                                    </div>\\n                                              </div>\\n                                          </div>\\n                                          <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-md-1\\\"></div>\\n                                                    <div class=\\\"col-md-7\\\">\\n                                                        <div class=\\\"md-form\\\">\\n                                                              <input mdbInputDirective\\n                                                                      type=\\\"email\\\"\\n                                                                      id=\\\"cardHolderEmail\\\"\\n                                                                      formControlName=\\\"cardHolderEmail\\\"\\n                                                                      class=\\\"form-control\\\">\\n                                                              <label for=\\\"cardHolderEmail\\\">Email</label>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-4\\\">\\n                                                        <div class=\\\"md-form\\\">\\n                                                              <input mdbInputDirective\\n                                                                      type=\\\"text\\\"\\n                                                                      id=\\\"cardHolderZip\\\"\\n                                                                      formControlName=\\\"cardHolderZip\\\"\\n                                                                      class=\\\"form-control\\\">\\n                                                              <label for=\\\"cardHolderZip\\\">Zip</label>\\n                                                        </div>\\n                                                    </div>\\n\\n                                          </div>\\n                                          <br>\\n                                          <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12 text-center\\\">\\n                                                  <div id=\\\"cardImages\\\" >\\n                                                    <i class=\\\"fa fa-cc-mastercard\\\" id=\\\"fa-cc-mastercard\\\"  aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-visa\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-amex\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-stripe\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-google-wallet\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-discover\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-jcb\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-diners-club\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                  </div>\\n                                            </div>\\n                                          </div>\\n\\n                                          <hr>\\n\\n                                          <div class=\\\"row ml-2\\\">\\n                                            <div class=\\\"col-md-3\\\">\\n                                              <p>Card Number</p>\\n                                            </div>\\n                                              <div class=\\\"col-md-8\\\">\\n                                                <div id=\\\"card-number\\\"></div>\\n                                              </div>\\n                                          </div>\\n\\n                                          <div class=\\\"row ml-2\\\">\\n                                            <div class=\\\"col-md-3\\\">\\n                                              <p>Expiration Date</p>\\n                                            </div>\\n                                              <div class=\\\"col-md-3\\\">\\n                                                <div id=\\\"card-expiry\\\"></div>\\n                                              </div>\\n                                              <div class=\\\"col-md-3 ml-0\\\">\\n                                                <p>CVC</p>\\n                                              </div>\\n                                                <div class=\\\"col-md-3\\\">\\n                                                  <div id=\\\"card-cvc\\\"></div>\\n                                                </div>\\n\\n                                          </div>\\n\\n                                          <div class=\\\"text-center mt-3\\\">\\n                                              <button mdbBtn type=\\\"submit\\\" color=\\\"indigo\\\" size=\\\"md\\\" [disabled]=\\\"!stripeForm\\\" mdbWavesEffect>\\n                                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                            Checkout With Credit Card\\n                                              </button>\\n                                          </div>\\n                              </fieldset>\\n                          </form>\\n                      </div>\\n                  </div>\\n                  <br>\\n                  <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n                          <br>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4 pt-3\\\">\\n                                <div class=\\\"form-check align-middle\\\">\\n                                    <input class=\\\"form-check-input\\\" [checked]= \\\"paypalCheckbox\\\" (change)=\\\"activePaypal()\\\" mdbInputDirective type=\\\"checkbox\\\"  id=\\\"checkbox2\\\">\\n                                    <label class=\\\"form-check-label\\\" for=\\\"checkbox2\\\">\\n                                    Check Out With Paypal</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-8\\\">\\n                                <button mdbBtn\\n                                                [disabled]=\\\"!paypalisActive\\\"\\n                                                type=\\\"button\\\" color=\\\"indigo\\\" size=\\\"md\\\"\\n                                                (click)=\\\"onPaypalSubmit()\\\"\\n                                                mdbWavesEffect>\\n                                                <mdb-icon icon=\\\"cc-paypal\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                Checkout With Paypal\\n                                </button>\\n\\n                            </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 mx-auto\\\">\\n      <app-payment-order-summary [totalAmount]=\\\"totalAmount\\\" id=\\\"sticky\\\" class=\\\"z-depth-2\\\"></app-payment-order-summary>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\"","module.exports = \".wrapper {\\n  position: relative;\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  margin-top: 4rem; }\\n\\n#cardImages > .fa {\\n  font-size: 2em;\\n  width: 1.5em;\\n  height: 1.5em; }\\n\\n.fa-cc-mastercard {\\n  color: #b71c1c; }\\n\\n.fa-cc-visa {\\n  color: #0d47a1; }\\n\\n.fa-cc-amex {\\n  color: #4285F4; }\\n\\n.fa-cc-discover {\\n  color: #37474F; }\\n\\n.fa-cc-jcb {\\n  color: #311b92; }\\n\\n.fa-cc-stripe {\\n  color: #2BBBAD; }\\n\\n.fa-cc-diners-club {\\n  color: #3F729B; }\\n\\n.fa-google-wallet {\\n  color: #ffd600; }\\n\\n.fa-paypal {\\n  margin-left: 1rem;\\n  font-size: 1.5rem;\\n  color: #0d47a1; }\\n\"","import { UtilityService } from './../../../Utility-shared/utility.service';\nimport { Component, OnInit} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from 'ngx-stripe';\n\nimport { Payment } from '../../model/payment.model';\nimport { StripeModel } from '../../model/stripeModel';\n\nimport { ShoppingcartService } from '../../shoppingcart.service';\nimport { PaypalPaymentService } from '../../paymentAgency-Service/paypal-payment.service';\nimport { StripePaymentService } from '../../paymentAgency-Service/stripe-payment.service';\nimport { Shoppingcart } from '../../model/shoppingcart.model';\n\nimport { MainNavModel } from './../../../Utility-shared/mainNavChange.model';\nimport { PaidToeflList } from '../../model/paidToeflLists.model';\n\n@Component({\n  selector: 'app-payment-proceed',\n  templateUrl: './payment-proceed.component.html',\n  styleUrls: ['./payment-proceed.component.scss']\n})\nexport class PaymentProceedComponent implements OnInit {\n\n  userToken: string;\n  totalAmount = 0;\n  payment: Payment;\n  shoppingCartLists: Shoppingcart[];\n  paidToeflLists: PaidToeflList[];\n\n  // Stripe payment를 위한 변수선언.\n\n  stripeInfo: StripeModel;\n  cardNumber: StripeElement;\n  cardExpiry: StripeElement;\n  cardCvc: StripeElement;\n  card: StripeElement;\n  elements: Elements;\n\n  elementOptions: ElementsOptions = {\n    locale: 'auto'\n  };\n\n  // credit card information input form for stripe\n\n  stripeForm: FormGroup;\n\n  stripeCheckbox = false;\n  stripeisActive = false;\n  paypalCheckbox = false;\n  paypalisActive = false;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private route: ActivatedRoute,\n              private utilityService: UtilityService,\n              private shoppingcartService: ShoppingcartService,\n              private paypalPaymentService: PaypalPaymentService,\n              private stripePaymentService: StripePaymentService,\n              private stripeService: StripeService) {}\n\n  ngOnInit() {\n\n          this.userToken = localStorage.getItem('token');\n          this.route.params.subscribe((params: Params) => {\n                                                            this.totalAmount = +params['totalAmount'];\n                                                            console.log(this.totalAmount);\n          this.shoppingCartLists = this.shoppingcartService.getShoppingCartLists();\n                                                            });\n\n    this.stripeForm = this.fb.group({\n      cardHolderName: ['', [Validators.required]],\n      cardHolderEmail: ['', [Validators.required]],\n      cardHolderZip: ['', [Validators.required]]\n    });\n\n    this.stripeService.elements(this.elementOptions)\n               .subscribe(elements => {\n                 this.elements = elements;\n                            if (!this.cardNumber) {\n                              this.cardNumber = this.elements.create('cardNumber', {});\n\n                              this.cardNumber.mount('#card-number');\n                            }\n\n                            if (!this.cardExpiry) {\n                              this.cardExpiry = this.elements.create('cardExpiry', {});\n                              this.cardExpiry.mount('#card-expiry');\n                            }\n\n                            if (!this.cardCvc) {\n                              this.cardCvc = this.elements.create('cardCvc', {});\n                              this.cardCvc.mount('#card-cvc');\n                            }\n                });\n\n  }\n\n  onStripeSubmit() {\n\n    this.stripeService\n                      .createToken(this.cardNumber, {name})\n                      .subscribe(result => {\n                                if ( result.token ) {\n                                  const stripeToken = result.token.id;\n                                  this.stripeInfo = new StripeModel(\n                                                      this.stripeForm.value.cardHolderName,\n                                                      this.stripeForm.value.cardHolderEmail,\n                                                      this.stripeForm.value.cardHolderZip,\n                                                      stripeToken,\n                                                      this.userToken,\n                                                      this.shoppingCartLists,\n                                                      this.totalAmount * 100\n                                                    );\n                                  this.stripePaymentService.gotoStripeCharge(this.stripeInfo);\n                                } else if ( result.error) {\n                                  console.log(result.error.message);\n                                  this.utilityService.errorToast(result.error.message, 'Credit Card Payment Error');\n                                }\n                      });\n  }\n\n  onPaypalSubmit() {\n    console.log('paypal click');\n    console.log(this.totalAmount);\n    this.payment = new Payment(this.userToken, this.shoppingCartLists, this.totalAmount);\n\n    this.paypalPaymentService.checkoutPaypal(this.payment);\n  }\n\n\n  activeStripe() {\n   console.log(this.stripeCheckbox);\n             if (this.stripeCheckbox) {\n               this.stripeisActive = false;\n               this.stripeCheckbox = false;\n             } else if (!this.stripeCheckbox) {\n               this.stripeCheckbox = true;\n               this.stripeisActive = true;\n             }\n\n  }\n\n  activePaypal() {\n    console.log(this.paypalCheckbox);\n              if (this.paypalCheckbox) {\n                this.paypalCheckbox = false;\n                this.paypalisActive = false;\n              } else if (!this.paypalCheckbox) {\n                this.paypalCheckbox = true;\n                this.paypalisActive = true;\n              }\n            }\n}\n\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate} from '@angular/router';\n\nimport { ShoppingcartComponent } from './shoppingcart/shoppingcart.component';\nimport { PaymentComponent } from './payment.component';\nimport { PaymentProceedComponent } from './payment-checkout/payment-proceed/payment-proceed.component';\nimport { PaymentNotificationComponent } from './payment-checkout/payment-notification/payment-notification.component';\n\n\nexport const paymentRoutes: Routes = [\n    {\n        path: 'payment', component: PaymentComponent, children: [\n            {path: 'shoppingcart', component: ShoppingcartComponent},\n            {path: 'checkout/:totalAmount', component: PaymentProceedComponent},\n            {path: 'result', component: PaymentNotificationComponent}\n        ]\n    }\n\n];\n\n\n@NgModule({\n    imports: [RouterModule.forChild(paymentRoutes)],\n    exports: [RouterModule]\n})\nexport class PaymentRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'app-payment',\n    template: `\n    <p> this is the check point .... </p>\n\n    <router-outlet></router-outlet>`\n})\n\nexport class PaymentComponent {\n    constructor() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\n\n//  shopping cart routing은 한 페이지로 구성되있으므로 payment routing에\n//  종속시킨다.\n\nimport { PaymentRoutingModule } from './payment-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\nimport { ShoppingcartComponent } from './shoppingcart/shoppingcart.component';\nimport { OrderSummaryComponent } from './shoppingcart/order-summary/order-summary.component';\nimport { PaymentOrderSummaryComponent } from './payment-checkout/payment-order-summary/payment-order-summary.component';\n\nimport { PaymentComponent } from './payment.component';\nimport { PaymentProceedComponent } from './payment-checkout/payment-proceed/payment-proceed.component';\nimport { PaymentNotificationComponent } from './payment-checkout/payment-notification/payment-notification.component';\n\nimport { ShoppingcartService } from './shoppingcart.service';\nimport { PaypalPaymentService } from './paymentAgency-Service/paypal-payment.service';\nimport { StripePaymentService } from './paymentAgency-Service/stripe-payment.service';\n\nimport { NgxStripeModule} from 'ngx-stripe';\n\n\n\n\n\n// For MDB Angular Pro\n\n\n@NgModule({\n    declarations: [\n      PaymentComponent,\n      ShoppingcartComponent,\n      OrderSummaryComponent,\n      PaymentProceedComponent,\n      PaymentOrderSummaryComponent,\n      PaymentNotificationComponent\n    ],\n    imports: [\n\n        PaymentRoutingModule,\n        SharedModule,\n        NgxStripeModule.forRoot('pk_test_erzDoCmLOPEP1n4tLjvtT7Y2'),\n        MDBBootstrapModulesPro.forRoot()\n\n    ],\n    providers : [ ShoppingcartService,\n                  PaypalPaymentService,\n                  StripePaymentService ]\n})\nexport class PaymentModule {}\n","import { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\n\nimport { ShoppingcartService } from './../shoppingcart.service';\nimport { Payment } from './../model/payment.model';\nimport { Injectable, OnInit} from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class PaypalPaymentService {\n\n    payment: Payment;\n    urlConfig = GlobalConstantShare.httpUrl;     // url 실제 주소가 있는곳\n    constructor(private http: Http,\n                private shoppingCartService: ShoppingcartService) {}\n\n\n    checkoutPaypal(payment: Payment) {\n\n      console.log('paypal click');\n\n        const body = JSON.stringify(payment);\n\n        const headers = new Headers({'Content-Type': 'application/json'});\n        return this.http.post(this.urlConfig + '/paypal/createPayment', body, {headers: headers})\n                        .subscribe(data => {\n                            const paymentUrl = data.json();\n                            console.log(paymentUrl.url);\n                            window.location.href = paymentUrl.url;\n                        }),\n                        (error) => this.handleErrors(error);\n    }\n\n    getPaypalResult() {\n        const token = localStorage.getItem('token');\n        const header = new Headers({'Content-type': 'application/json'});\n        return this.http.get(this.urlConfig + '/paypal/paymentResult/' + '?token=' + token, {headers: header})\n                    .subscribe(\n                        (res: Response) => {\n                            const data = res.json();\n                            const reInitSuccess = this.shoppingCartService.reInitialShoppingCartLists(data.payPalResult);\n                        }\n                    );\n    }\n\n    handleErrors(error: Response) {\n        const err = error.json();\n        console.log(err);\n        return Observable.throw(error);\n    }\n}\n","import { PaidToeflList } from './../model/paidToeflLists.model';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { StripeModel } from '../model/stripeModel';\nimport { Subject } from 'rxjs/Subject';\nimport { Shoppingcart } from '../model/shoppingcart.model';\nimport { UtilityService } from '../../Utility-shared/utility.service';\nimport { ShoppingcartService } from '../shoppingcart.service';\nimport { Router } from '@angular/router';\nimport { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\n\n@Injectable()\nexport class StripePaymentService {\n\n  urlConfig = GlobalConstantShare.httpUrl;\n\n  shoppingCartLists = new Subject<Shoppingcart[]>();\n  paidToeflLists = new Subject<PaidToeflList[]>();\n    constructor(private http: Http,\n                private router: Router,\n                private shoppingCartService: ShoppingcartService,\n                private utilityService: UtilityService) {}\n\n  gotoStripeCharge(stripeCardInfo: StripeModel) {\n        const body = JSON.stringify(stripeCardInfo);\n        const header = new Headers({'Content-Type': 'application/json'});\n\n      return this.http.post(this.urlConfig + '/stripepayment', body, {headers: header})\n            .subscribe((res: Response) => {\n                const data = res.json();\n\n                this.utilityService.successToast('결제가 성공적으로 완료되었습니다. 감사합니다', '결제 공지사항');\n                const reInitSuccess = this.shoppingCartService.reInitialShoppingCartLists(data.paidToeflLists);\n                if (reInitSuccess) {\n                  this.router.navigate(['/']);\n                }\n\n            },\n            (error) => console.error(error)\n          );\n\n    }\n}\n","\nimport { GlobalConstantShare } from '../Utility-shared/globalConstantShare';\n\nimport { PaidToeflList } from './model/paidToeflLists.model';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Http, Response, Headers} from '@angular/http';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from '@angular/router';\nimport { Shoppingcart } from './model/shoppingcart.model';\n\nimport { AuthService } from '../auth/auth.service';\nimport { UtilityService } from '../Utility-shared/utility.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Injectable()\n\nexport class ShoppingcartService {\n\n    urlConfig = GlobalConstantShare.httpUrl;\n    shoppingCartLists: Shoppingcart[] = [];\n    paidToeflLists: PaidToeflList[] = [];                              // 실제 shopping item을 저장하는 공간\n    shoppingCartListAdded = new Subject<Shoppingcart[]>();\n    paidToeflListAdded = new Subject<PaidToeflList[]>();\n    currentCart: Shoppingcart;\n\n    paypalCheck = false;\n\n    paidToeflListSubscription: Subscription;\n    serverCartListSubscription: Subscription;\n\n    constructor (\n        private http: Http,\n        private router: Router,\n        private authService: AuthService,\n        private utilityService: UtilityService) {}\n\n\n// 사용자가 인증을 하였을시 자동으로 이 method를 이용하여 User에 저장된 shoppingCartList를 가저온다\nconnectAuthShoppingCart() {\n      this.serverCartListSubscription = this.authService.shoppingCartLists.subscribe((shoppingcart: Shoppingcart[]) => {\n                                          this.shoppingCartLists = shoppingcart;\n                                          this.shoppingCartListAdded.next(this.shoppingCartLists);  // header에 있는 shopping list에 보냄\n      });\n\n      this.paidToeflListSubscription = this.authService.paidToeflLists.subscribe((paidToeflLists: PaidToeflList[]) => {\n                                          this.paidToeflLists = paidToeflLists;\n                                          this.paidToeflListAdded.next(this.paidToeflLists);\n      });\n}\n\n// 사용자가 로그인이 완료된 시점에서만 작동하며 welcome.component->tabset->장바구니를 클릭하였을시 작동됨\n  addShoppingCartList(newShoppingCartItem: Shoppingcart) {\n\n      const findShoppingItem = this.shoppingCartLists.filter( (shoppingCart: Shoppingcart) => {\n                               return shoppingCart.examNo === newShoppingCartItem.examNo;\n                               } );\n\n      if (findShoppingItem.length === 0) {\n        console.log('new item listed on Shoppingcart.');\n        this.shoppingCartLists.push(newShoppingCartItem);\n        console.log(this.shoppingCartLists);\n        this.utilityService.successToast( '선택하신 회차가 장바구니에 담겼습니다.', '공지사항');\n        this.shoppingCartListAdded.next(this.shoppingCartLists);                           // header에 있는 shopping list에 보냄\n      } else {\n        this.utilityService.errorToast('선택하신 회차가 이미 장바구니에 있습니다.', '에러공지');\n      }\n\n  }\n\n  // header.component에서 cart 지우기를 눌렀을때 사용\n      shoppingCartItemRemoved(shoppingCartItem: Shoppingcart) {\n\n          const findItemNumber = this.shoppingCartLists.indexOf(shoppingCartItem);\n          this.shoppingCartLists.splice(findItemNumber, 1);                                // shopping item 제거\n          this.shoppingCartListAdded.next(this.shoppingCartLists);                         // update된 shopping list를 header로 보냄\n      }\n\n  // payPal and Stripe 결재후 shoppingcartlist와 paidToeflLists를 updated하는 모드\n      reInitialShoppingCartLists(paidToeflLists) {\n              console.log(paidToeflLists);\n              this.shoppingCartLists = [];\n              this.paidToeflLists = paidToeflLists;\n              this.shoppingCartListAdded.next(this.shoppingCartLists);\n              this.paidToeflListAdded.next(paidToeflLists);\n              return true;\n      }\n\n      getShoppingCartLists() {\n        return this.shoppingCartLists;\n      }\n\n      getPaidToefltLists() {\n\n        console.log(this.paidToeflLists);\n        return this.paidToeflLists;\n      }\n\n      goCheckOut() {\n        this.router.navigate(['/payment/shoppingcart']);\n      }\n\n      goSave() {\n        const token = localStorage.getItem('token');\n        const body = JSON.stringify(this.shoppingCartLists);\n\n        const header = new Headers({'Content-type': 'application/json'});\n\n        this.http.post(this.urlConfig + '/shoppingcart/' + '?token=' + token, body, {headers: header})\n                 .subscribe(\n                              (res: Response) => {\n                                  console.log(res);\n                                  const data = res.json();\n                                  console.log(data.result);\n                                  this.shoppingCartLists = [];\n                                  this.shoppingCartLists = data.result;\n                                  this.shoppingCartListAdded.next(this.shoppingCartLists);   // shopping cart 추가후 변화한 값 적용하기\n                              },\n                              (error) => console.log(error)\n                          );\n\n      }\n}\n\n","module.exports = \"\\n<mdb-card class=\\\"text-center\\\">\\n    <mdb-card-header class=\\\"dark-grey-text\\\">\\n      <h3><strong>Order Summary</strong></h3>\\n    </mdb-card-header>\\n\\n      <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table text-right\\\">\\n              <tbody>\\n\\n                  <td colspan=\\\"2\\\">Subtotal</td>\\n                  <td colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</td>\\n\\n                  <tr>\\n                  <td colspan=\\\"2\\\">Estimated Tax</td>\\n                  <td colspan=\\\"1\\\"></td>\\n                  </tr>\\n                  <tr>\\n                      <th colspan=\\\"2\\\">Total</th>\\n                      <th colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</th>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"3\\\">\\n                        <button type=\\\"button\\\"\\n                        class=\\\"btn blue-gradient btn-block z-depth-1a waves-light\\\"\\n                        (click)=\\\"onCheckOut()\\\"\\n                        mdbWavesEffect>Check Out\\n                        </button>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"2\\\">\\n                      Promo Code\\n                    </td>\\n                    <td colspan=\\\"2\\\">\\n                        12345678\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"2\\\">\\n                        <button class=\\\"btn btn-block btn-sm red\\\" id=\\\"couponBtn\\\" (click)=\\\"goCancel()\\\">Cancel</button>\\n                    </td>\\n                    <td colspan=\\\"2\\\">\\n                        <button class=\\\"btn btn-block btn-sm green\\\" id=\\\"couponBtn\\\" (click)=\\\"getPromoCode()\\\">apply</button>\\n                    </td>\\n                  </tr>\\n              </tbody>\\n          </table>\\n      </div>\\n\\n\\n    <mdb-card-footer class=\\\"text-muted success-color white-text\\\">\\n      <p class=\\\"mb-0\\\">2 days ago</p>\\n    </mdb-card-footer>\\n  </mdb-card>\\n\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-order-summary',\n  templateUrl: './order-summary.component.html',\n  styleUrls: ['./order-summary.component.scss']\n})\nexport class OrderSummaryComponent {\n\n  @Input() totalAmount: number;\n\n  constructor(private location: Location,\n              private router: Router) { }\n\n\n\n  onCheckOut() {\n    console.log('check out clicked');\n    this.router.navigate(['/payment/checkout', this.totalAmount]);\n  }\n\n  goCancel() {\n    this.location.back();\n  }\n  getPromoCode() {\n    console.log('promo click');\n  }\n\n\n}\n","module.exports = \"\\n\\n<section class=\\\"wrapper\\\">\\n\\n  <div class=\\\"row mx-0 p-3\\\">\\n\\n        <div class=\\\"col-md-9 mx-auto\\\">\\n            <div class=\\\"card z-depth-1-half text-center\\\">\\n                <h3 class=\\\"card-header primary-color white-text z-depth-1\\\">ShoppingList</h3>\\n                <mdb-progress-bar class=\\\"progress primary-color-dark\\\" mode=\\\"indeterminate\\\"></mdb-progress-bar>\\n\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table align-middle text-center\\\">\\n\\n                        <thead>\\n                                <tr>\\n                                  <th colspan=\\\"1\\\">Toefl No</th>\\n                                  <th colspan=\\\"1\\\">Toefl Image</th>\\n                                  <th colspan=\\\"1\\\">Toefl Level</th>\\n                                  <th colspan=\\\"1\\\">Price</th>\\n                                </tr>\\n                        </thead>\\n\\n                        <tbody>\\n                                <tr *ngFor=\\\"let shoppingItem of shoppingCartLists\\\">\\n\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">{{shoppingItem.examNo}}</td>\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">\\n                                    <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\\\" class=\\\"avatar rounded-circle z-depth-1-half\\\"></td>\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">{{shoppingItem.examLevel}}</td>\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">{{shoppingItem.examPrice | currency: \\\"USD\\\"}}</td>\\n\\n                                </tr>\\n                        </tbody>\\n                <tr>\\n                  <th colspan=\\\"2\\\"></th>\\n                  <th colspan=\\\"1\\\"><strong>Total Price</strong></th>\\n                  <th colspan=\\\"1\\\"><strong>{{ totalAmount | currency: \\\"USD\\\" }}</strong></th>\\n                </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3 mx-auto\\\">\\n              <app-order-summary [totalAmount]=\\\"totalAmount\\\" id=\\\"sticky\\\" class=\\\"z-depth-2\\\"></app-order-summary>\\n        </div>\\n\\n   </div>\\n\\n\\n\\n</section>\\n\\n\\n\"","module.exports = \".wrapper {\\n  position: relative;\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  margin-top: 4rem; }\\n\\n#sidebar {\\n  float: left; }\\n\\n/* The sticky */\\n\\n#sidebar {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Shoppingcart } from '../model/shoppingcart.model';\n\nimport { AuthService } from './../../auth/auth.service';\nimport { ShoppingcartService } from '../shoppingcart.service'\n\nimport {Subject} from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-shoppingcart',\n  templateUrl: './shoppingcart.component.html',\n  styleUrls: ['./shoppingcart.component.scss']\n})\nexport class ShoppingcartComponent implements OnInit {\n\n    shoppingCartLists: Shoppingcart[] = [];\n    shoppingCartListAdded = new Subject<Shoppingcart>();\n    totalAmount = 0;\n\n\n  constructor( private shoppingcartService: ShoppingcartService,\n               private authService: AuthService) {}\n\n  ngOnInit() {\n          this.shoppingCartLists = this.shoppingcartService.getShoppingCartLists();\n          console.log(this.shoppingCartLists);\n          for ( const amount of this.shoppingCartLists) {\n                this.totalAmount += amount.examPrice;\n          }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shorten1'\n})\nexport class ShortenPipe1 implements PipeTransform {\n\n  transform(value: any, limit: number): any {\n    if (value.length > limit) {\n      return value.substr(0, limit) + ' ...';\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shorten'\n})\nexport class ShortenPipe implements PipeTransform {\n\n  transform(value: any, limit: number): any {\n    if (value.length > limit) {\n      return value.substr(0, limit) + ' ...';\n    }\n    return value;\n  }\n\n}\n","\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// For MDB Angular Pro\nimport { WavesModule,PreloadersModule } from 'ng-uikit-pro-standard';\n// For MDB Angular Pro\nimport { ModalModule, InputsModule } from 'ng-uikit-pro-standard';\n\n@NgModule({\n\n  exports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      WavesModule,\n      PreloadersModule,\n      ModalModule,\n      InputsModule\n  ],\n\n})\nexport class SharedModule {}\n","\nexport default [\n\n    {\n        // toefl main general description \n        desc: `Soon technology will provide smart cars: cars that virtually drive themselves. A computer in the car determines the speed and route to the desired destination. The computer is in continuous contact with a global positioning system and other technologies that will provide extremely accurate information about the location of the car, other cars on the road, congestion, accidents, and so forth. The human driver will be little more than a passenger. Smart cars promise to make driving safer, quicker, and less expensive.\n        First of all, smart cars will prevent many accidents, thereby saving lives. The cars will be equipped with a variety of sensors that very accurately detect cars and other obstacles in their path, and they will have automatic programs that control braking and turning to avoid collisions. Given the hundreds of accidents that occur on highways daily, it is clear that humans do a poor job of avoiding accidents and that computer control would be a great improvement.\n        Second, with the wide use of smart cars, traffic problems will practically disappear. These computer-controlled cars can follow each other closely, even at high speeds. This ability will result in increased highway speeds. Today commuting by car can take hours a day. So the increased speed of smart cars will be a great benefit, welcomed by the many people who commute by car.\n        Finally, smart cars will bring a reduction in the costs of driving. Because smart cars are programmed to drive the most direct routes, car owners will have to spend less money on repairs and replacement parts. Expensive items such as brakes, tires, and transmissions will last much longer in smart cars than in other cars.`\n    },\n    {\n        // reading general description\n\n        desc: `Soon technology will provide smart cars: cars that virtually drive themselves. A computer in the car determines the speed and route to the desired destination. The computer is in continuous contact with a global positioning system and other technologies that will provide extremely accurate information about the location of the car, other cars on the road, congestion, accidents, and so forth. The human driver will be little more than a passenger. Smart cars promise to make driving safer, quicker, and less expensive.\n        First of all, smart cars will prevent many accidents, thereby saving lives. The cars will be equipped with a variety of sensors that very accurately detect cars and other obstacles in their path, and they will have automatic programs that control braking and turning to avoid collisions. Given the hundreds of accidents that occur on highways daily, it is clear that humans do a poor job of avoiding accidents and that computer control would be a great improvement.\n        Second, with the wide use of smart cars, traffic problems will practically disappear. These computer-controlled cars can follow each other closely, even at high speeds. This ability will result in increased highway speeds. Today commuting by car can take hours a day. So the increased speed of smart cars will be a great benefit, welcomed by the many people who commute by car.\n        Finally, smart cars will bring a reduction in the costs of driving. Because smart cars are programmed to drive the most direct routes, car owners will have to spend less money on repairs and replacement parts. Expensive items such as brakes, tires, and transmissions will last much longer in smart cars than in other cars.`\n    },\n    {\n        // listening general description\n\n        desc: `Soon technology will provide smart cars: cars that virtually drive themselves. A computer in the car determines the speed and route to the desired destination. The computer is in continuous contact with a global positioning system and other technologies that will provide extremely accurate information about the location of the car, other cars on the road, congestion, accidents, and so forth. The human driver will be little more than a passenger. Smart cars promise to make driving safer, quicker, and less expensive.\n        First of all, smart cars will prevent many accidents, thereby saving lives. The cars will be equipped with a variety of sensors that very accurately detect cars and other obstacles in their path, and they will have automatic programs that control braking and turning to avoid collisions. Given the hundreds of accidents that occur on highways daily, it is clear that humans do a poor job of avoiding accidents and that computer control would be a great improvement.\n        Second, with the wide use of smart cars, traffic problems will practically disappear. These computer-controlled cars can follow each other closely, even at high speeds. This ability will result in increased highway speeds. Today commuting by car can take hours a day. So the increased speed of smart cars will be a great benefit, welcomed by the many people who commute by car.\n        Finally, smart cars will bring a reduction in the costs of driving. Because smart cars are programmed to drive the most direct routes, car owners will have to spend less money on repairs and replacement parts. Expensive items such as brakes, tires, and transmissions will last much longer in smart cars than in other cars.`\n    },\n    {\n        // writing general description\n\n        desc: `Soon technology will provide smart cars: cars that virtually drive themselves. A computer in the car determines the speed and route to the desired destination. The computer is in continuous contact with a global positioning system and other technologies that will provide extremely accurate information about the location of the car, other cars on the road, congestion, accidents, and so forth. The human driver will be little more than a passenger. Smart cars promise to make driving safer, quicker, and less expensive.\n        First of all, smart cars will prevent many accidents, thereby saving lives. The cars will be equipped with a variety of sensors that very accurately detect cars and other obstacles in their path, and they will have automatic programs that control braking and turning to avoid collisions. Given the hundreds of accidents that occur on highways daily, it is clear that humans do a poor job of avoiding accidents and that computer control would be a great improvement.\n        Second, with the wide use of smart cars, traffic problems will practically disappear. These computer-controlled cars can follow each other closely, even at high speeds. This ability will result in increased highway speeds. Today commuting by car can take hours a day. So the increased speed of smart cars will be a great benefit, welcomed by the many people who commute by car.\n        Finally, smart cars will bring a reduction in the costs of driving. Because smart cars are programmed to drive the most direct routes, car owners will have to spend less money on repairs and replacement parts. Expensive items such as brakes, tires, and transmissions will last much longer in smart cars than in other cars.`\n    },\n    {\n        // speaking general description\n\n        desc: `Soon technology will provide smart cars: cars that virtually drive themselves. A computer in the car determines the speed and route to the desired destination. The computer is in continuous contact with a global positioning system and other technologies that will provide extremely accurate information about the location of the car, other cars on the road, congestion, accidents, and so forth. The human driver will be little more than a passenger. Smart cars promise to make driving safer, quicker, and less expensive.\n        First of all, smart cars will prevent many accidents, thereby saving lives. The cars will be equipped with a variety of sensors that very accurately detect cars and other obstacles in their path, and they will have automatic programs that control braking and turning to avoid collisions. Given the hundreds of accidents that occur on highways daily, it is clear that humans do a poor job of avoiding accidents and that computer control would be a great improvement.\n        Second, with the wide use of smart cars, traffic problems will practically disappear. These computer-controlled cars can follow each other closely, even at high speeds. This ability will result in increased highway speeds. Today commuting by car can take hours a day. So the increased speed of smart cars will be a great benefit, welcomed by the many people who commute by car.\n        Finally, smart cars will bring a reduction in the costs of driving. Because smart cars are programmed to drive the most direct routes, car owners will have to spend less money on repairs and replacement parts. Expensive items such as brakes, tires, and transmissions will last much longer in smart cars than in other cars.`\n    }\n\n]","\nexport class JoinPaidToefl {\n  constructor(\n              public toeflNo: number,\n              public toeflDesc: string,\n              public toeflLevel?: string,\n              public toeflImage?: string,\n              public paidToeflYesOrNo?: boolean) {}\n}\n","import { ReadingProblems } from './reading.problems.model';\nexport class Reading {\n\n        public toeflNo: number;\n        public readingCreatedDate?: Date;\n        public section1Title?: string;\n        public section1Script?: string;\n        public section1Problem?: ReadingProblems[];\n        public section2Title?: string;\n        public section2Script?: string;\n        public section2Problem?: ReadingProblems[];\n        public section3Title?: string;\n        public section3Script?: string;\n        public section3Problem?: ReadingProblems[];\n        public section4Title?: string;\n        public section4Script?: string;\n        public section4Problem?: ReadingProblems[];\n\n          constructor(\n                      toeflNo: number,\n                      readingCreatedDate?: Date,\n                      section1Title?: string,\n                      section1Script?: string,\n                      section1Problem?: ReadingProblems[],\n                      section2Title?: string,\n                      section2Script?: string,\n                      section2Problem?: ReadingProblems[],\n                      section3Title?: string,\n                      section3Script?: string,\n                      section3Problem?: ReadingProblems[],\n                      section4Title?: string,\n                      section4Script?: string,\n                      section4Problem?: ReadingProblems[]\n          )\n          {\n            this.toeflNo = toeflNo;\n            this.readingCreatedDate = readingCreatedDate;\n            this.section1Title = section1Title;\n            this.section1Script = section1Script;\n            this.section1Problem = section1Problem;\n            this.section2Title = section2Title;\n            this.section2Script = section2Script;\n            this.section2Problem = section2Problem;\n            this.section3Title = section3Title;\n            this.section3Script = section3Script;\n            this.section3Problem = section3Problem;\n            this.section4Title = section4Title;\n            this.section4Script = section4Script;\n            this.section4Problem = section4Problem;\n          }\n}\n","import { Reading } from './reading.model';\nimport { ImageSettingTime } from './image.model';\nexport class Toefl {\n\n  public toeflNo: number;\n  public toeflDesc: string;\n  public toeflLevel?: string;\n  public toeflCreatedDate?: Date;\n  public toeflCompletionTag?: string;\n  public toeflImage?: string;\n  public toeflAudio?: string;\n  public readingDesc?: string;\n  public listeningDesc?: string;\n  public writingDesc?: string;\n  public speakingDesc?: string;\n\n  public writer?: string;\n\n  public imageSettingTimes?: ImageSettingTime[];\n\n  constructor(\n              toeflNo: number,\n              toeflDesc: string,\n              toeflLevel?: string,\n              toeflCreatedDate?: Date,\n              toeflCompletionTag?: string,\n              toeflImage?: string,\n              toeflAudio?: string,\n              readingDesc?: string,\n              listeningDesc?: string,\n              writingDesc?: string,\n              speakingDesc?: string,\n              writer?: string,\n              imageSettingTimes?: ImageSettingTime[],\n              toeflPrice?: number\n\n  ) {\n        this.toeflNo = toeflNo;\n        this.toeflDesc = toeflDesc;\n        this.toeflLevel = toeflLevel;\n        this.toeflCreatedDate = toeflCreatedDate;\n        this.toeflCompletionTag = toeflCompletionTag;\n        this.toeflImage = toeflImage;\n        this.toeflAudio = toeflAudio;\n        this.readingDesc = readingDesc;\n        this.listeningDesc = listeningDesc;\n        this.writingDesc = writingDesc;\n        this.speakingDesc = speakingDesc;\n        this.writer = writer;\n        this.imageSettingTimes = imageSettingTimes;\n\n  }\n}\n","module.exports = \"\\n<main>\\n  <div class=\\\"main-wrapper\\\">\\n    <div class=\\\"container-fluid center\\\">\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n\\n                <!--Card-->\\n                <div class=\\\"card card-cascade wider\\\">\\n\\n                <!--Card image-->\\n                <div class=\\\"view gradient-card-header peach-gradient\\\">\\n                    <h2 class=\\\"h2-responsive mb-2\\\"><i class=\\\"fa fa-danger\\\"></i>Page is not found</h2>\\n                    <p class=\\\"fa-calendar\\\"> </p>\\n\\n                </div>\\n                <!--/Card image-->\\n\\n                <!--Card content-->\\n                <div class=\\\"card-body text-center\\\">\\n\\n                    <p class=\\\"card-text mr-2 ml-2\\\">\\n                      You are looking for a wrong page...\\n                    </p>\\n                    <p class=\\\"card-text mr-2 ml-2\\\">\\n                      Please login Again to access the right page...\\n                    </p>\\n\\n                    <a href=\\\"#\\\" class=\\\"orange-text mt-1 d-flex flex-row-reverse\\\">\\n                        <h5 class=\\\"waves-effect p-2\\\" mdbWavesEffect>Read more <i class=\\\"fa fa-chevron-right\\\"></i></h5>\\n                    </a>\\n                </div>\\n                <!--/.Card content-->\\n\\n                </div>\\n                <!--/.Card-->\\n\\n\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</main>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<!--Double navigation-->\\n<header>\\n    <!-- Sidebar navigation -->\\n    <mdb-sidenav #sidenav1 class=\\\"sn-bg-1\\\" [fixed]=\\\"false\\\">\\n       <app-teacher-sidebar></app-teacher-sidebar>\\n    </mdb-sidenav>\\n    <!--/. Sidebar navigation -->\\n    <app-teacher-nav-header (sidenavToggle1)=\\\"sidenav1.toggle()\\\"></app-teacher-nav-header>\\n\\n</header>\\n\\n<div class=\\\"fullscreen\\\">\\n        <div class=\\\"row ml-2 mr-5\\\">\\n        <div class=\\\"mx-auto col-md-5\\\">\\n          <app-regist-toefl-list></app-regist-toefl-list>\\n        </div>\\n        <div class=\\\"mx-auto col-md-7\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n      </div>\\n</div>\\n\"","module.exports = \".fullscreen {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  overflow: auto; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UtilityService } from './../../Utility-shared/utility.service';\nimport { MainNavModel } from './../../Utility-shared/mainNavChange.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProfileInfo } from '../../auth/profile.model';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-register-toefl',\n  templateUrl: './register-toefl.component.html',\n  styleUrls: ['./register-toefl.component.scss']\n})\nexport class RegisterToeflComponent implements OnInit {\n\n  mainNavModel: MainNavModel;\n  teacherName = '';\n  constructor(private utilityService: UtilityService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.mainNavModel = new MainNavModel(true, false);                // 이모드는 teacher 권한을 갖는 사람이 젒속하여 시험을 출제하는 모드임\n    this.utilityService.mainNavChanged.next(this.mainNavModel);\n\n  }\n\n}\n","module.exports = \"\\n  <!--Card-->\\n  <div class=\\\"areaDesc\\\">\\n      <div class=\\\"card card-cascade wider\\\">\\n          <!--Card image-->\\n          <div class=\\\"view gradient-card-header peach-gradient\\\">\\n              <h2 class=\\\"h2-responsive mb-2\\\">Toefle Exam No: {{ currentToefl.toeflNo }} Listening General Description </h2>\\n              <p class=\\\"\\\"><i class=\\\"fa fa-calendar\\\"></i> {{ currentDate | date:'fullDate' }}</p>\\n\\n          </div>\\n\\n          <div class=\\\"card-body text-center\\\">\\n              <div class=\\\"para\\\">\\n              <p class=\\\"card-text mr-2 ml-2\\\">\\n                {{ currentToefl.listeningDesc }}\\n              </p>\\n            </div>\\n              <a [routerLink]=\\\"['/teacher/'+currentToefl.toeflNo+'/editReadingDesc']\\\"\\n                  class=\\\"orange-text mt-1 d-flex flex-row-reverse\\\">\\n                  <h5 class=\\\"waves-effect p-2\\\" mdbWavesEffect>Edit Description <i class=\\\"fa fa-chevron-right\\\"></i></h5>\\n              </a>\\n          </div>\\n\\n\\n              <div class=\\\"row panel\\\">\\n                <div class=\\\"mx-auto col-md-9\\\">\\n\\n                  <div class=\\\"card card-body\\\">\\n                    <div class=\\\"flex-row text-center\\\">\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                              (click)=\\\"onListeningProblem1()\\\"\\n                              mdbWavesEffect>Section 1  - Conversation\\n                      </button>\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                              (click)=\\\"onListeningProblem2()\\\"\\n                              mdbWavesEffect>Section 2 - Lecture\\n                      </button>\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                              (click)=\\\"onListeningProblem3()\\\"\\n                              mdbWavesEffect>Section 3 - Lecture\\n                      </button>\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                              (click)=\\\"onListeningProblem4()\\\"\\n                              mdbWavesEffect>Section 4 - Conversation\\n                      </button>\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                              (click)=\\\"onListeningProblem5()\\\"\\n                              mdbWavesEffect>Section 5 - Lecture\\n                      </button>\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                              (click)=\\\"onListeningProblem6()\\\"\\n                              mdbWavesEffect>Section 6 - Lecture\\n                      </button>\\n\\n                    </div>\\n                  </div>\\n                  <!--/.Panel-->\\n                </div>\\n              </div>\\n      </div>\\n  </div>\\n\"","module.exports = \".areaDesc {\\n  position: relative;\\n  top: -3rem;\\n  left: 0;\\n  bottom: 1rem;\\n  right: 0;\\n  overflow: auto; }\\n\\n.para {\\n  height: 18rem;\\n  min-height: 10rem;\\n  overflow: auto; }\\n\\n.panel {\\n  position: relative;\\n  top: -2rem; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Toefl } from '../../../../models/toefl.model';\n\n@Component({\n  selector: 'app-listening-exam',\n  templateUrl: './listening-exam.component.html',\n  styleUrls: ['./listening-exam.component.scss']\n})\nexport class ListeningExamComponent implements OnInit {\n\n  currentDate = Date.now();\n  @Input() currentToefl: Toefl;\n  @Input() currentListeningStepper: boolean;\n  constructor(private router: Router,\n              private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    console.log(this.currentToefl);\n  }\n\n  onListeningProblem1() {\n    console.log( 'listening problems 1...');\n  }\n  onListeningProblem2() {\n    console.log( 'listening problems 1...');\n  }\n  onListeningProblem3() {\n    console.log( 'listening problems 1...');\n  }\n  onListeningProblem4() {\n    console.log( 'listening problems 1...');\n  }\n  onListeningProblem5() {\n    console.log( 'listening problems 1...');\n  }\n  onListeningProblem6() {\n    console.log( 'listening problems 1...');\n  }\n}\n","module.exports = \"<!-- Nav tabs -->\\n<div class=\\\"fullscreen\\\">\\n    <div class=\\\"row mr-0\\\">\\n            <div class=\\\"col-md-12 mx-auto\\\">\\n            <app-stepper [currentStep]=\\\"currentStep\\\"></app-stepper>\\n            </div>\\n    </div>\\n    <div class=\\\"row row1\\\">\\n    <div class=\\\"col-md-12 mx-auto\\\">\\n        <mdb-tabset #staticTabs [buttonClass]=\\\"'nav-tabs tabs-4 indigo'\\\" [contentClass]=\\\"'class2'\\\">\\n                    <!--Panel 1-->\\n                    <mdb-tab heading=\\\"<i class='fa fa-user'></i> Reading Comprehension\\\"\\n                      (select)=\\\"onSelectReading()\\\"\\n                      >\\n                        <div class=\\\"row class1\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <br>\\n                                <app-reading-exam [currentToefl]=\\\"currentToefl\\\"></app-reading-exam>\\n                            </div>\\n                        </div>\\n                    </mdb-tab>\\n                    <!--Panel 2-->\\n                    <mdb-tab heading=\\\"<i class='fa fa-heart'></i> Listening Comprehension\\\"\\n                             (select)=\\\"onSelectListening()\\\">\\n                        <div class=\\\"row class2\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <br>\\n                                <app-listening-exam [currentToefl]=\\\"currentToefl\\\"></app-listening-exam>\\n                            </div>\\n                        </div>\\n                    </mdb-tab>\\n                    <!--Panel 3-->\\n                    <mdb-tab heading=\\\"<i class='fa fa-envelope'></i> Writing Comprehension\\\"\\n                              (select)=\\\"onSelectWriting()\\\">\\n                        <div class=\\\"row class3\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <br>\\n                                <app-writing-exam [currentToefl]=\\\"currentToefl\\\"></app-writing-exam>\\n                            </div>\\n                        </div>\\n                    </mdb-tab>\\n                    <!--Panel 4-->\\n                    <mdb-tab heading=\\\"<i class='fa fa-envelope'></i> Speaking Comprehension\\\"\\n                      (select)=\\\"onSelectSpeaking()\\\">\\n                        <div class=\\\"row class4\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <br>\\n                                <app-speaking-exam [currentToefl]=\\\"currentToefl\\\"></app-speaking-exam>\\n                            </div>\\n                        </div>\\n                    </mdb-tab>\\n        </mdb-tabset>\\n\\n\\n    </div>\\n\\n</div>\\n\\n\\n\"","module.exports = \".fullscreen {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  overflow: auto; }\\n\\n.row {\\n  position: relative;\\n  padding: 0;\\n  bottom: -1rem; }\\n\\n.row1 {\\n  position: relative;\\n  top: -1rem; }\\n\"","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { UtilityService } from './../../../../../Utility-shared/utility.service';\nimport { MakeExamService } from '../makeexam.service';\nimport { RegisterToeflService } from '../../../teacher.service';\nimport { Toefl } from '../../../../models/toefl.model';\n\n\nimport { CurrentStep } from './../../../stepper/stepper-default';\nimport { StepperModel } from '../../../stepper/stepper.model';\n@Component({\n  selector: 'app-make-exam-start',\n  templateUrl: './make-exam-start.component.html',\n  styleUrls: ['./make-exam-start.component.scss']\n})\nexport class MakeExamStartComponent implements OnInit {\n\n  @ViewChild('staticTabs') public staticTabs;\n  toeflNo: number;\n  currentToefl: Toefl;\n\n  currentStep: StepperModel;\n\n  readingFormGroup: FormGroup;\n  listeningFormGroup: FormGroup;\n\n\n      constructor(private utilityService: UtilityService,\n                  private registerToeflService: RegisterToeflService,\n                  private makeExamService: MakeExamService,\n                  private route: ActivatedRoute,\n                  private router: Router\n                ) {}\n\n  ngOnInit() {\n\n           // this.staticTabs.setActiveTab('1');\n  \n            this.utilityService.audioPlaySevice(null, '2', false);     // register toefl detail에서 makeexam\n            this.utilityService.toeflListShowChanged.next(true);\n\n            this.route.params.subscribe((params: Params) => {\n                                          this.toeflNo = +params['id'];\n                                          console.log(this.toeflNo);\n                                          this.currentToefl = this.registerToeflService.getRegisterToefl(this.toeflNo);\n                              });\n            this.currentStep = this.makeExamService.settingCurrentStepper('3', this.toeflNo);\n  }\n\n  onSelectReading() {\n    \n    this.currentStep = this.makeExamService.settingCurrentStepper('3', this.toeflNo);\n  }\n  onSelectListening() {\n    \n    this.currentStep = this.makeExamService.settingCurrentStepper('4', this.toeflNo);\n   \n  }\n  onSelectWriting() {\n    this.currentStep = this.makeExamService.settingCurrentStepper('5', this.toeflNo);\n  }\n  onSelectSpeaking() {\n    this.currentStep = this.makeExamService.settingCurrentStepper('6', this.toeflNo);\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Reading } from '../../../models/reading.model';\nimport { Toefl } from '../../../models/toefl.model';\nimport { ReadingProblems } from '../../../models/reading.problems.model';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport { Subject } from 'rxjs/Subject';\nimport { StepperModel } from '../../stepper/stepper.model';\nimport { Stepper } from '../../stepper/stepper-default';\n\n@Injectable()\nexport class MakeExamService {\n    reading: Reading;\n    stepperModel: StepperModel;\n    public currentToefl = new Subject<Toefl>();\n    public currentStep = new Subject<string>();\n\n    constructor(private http: Http) {}\n\n\n    getReadingData(toeflNo: number) {\n\n              // 서버로 부터 모든 데이타를 가져오기 위해서는 반드시 현재 login한 userId와 token이 필요하다\n\n              const token = localStorage.getItem('token');\n\n              return this.http.get('https://examsimv100.herokuapp.com/reading/' + toeflNo + '?token=' + token)\n                            .map(\n                              (reading: Response) => {\n\n                                    const data = reading.json();\n                                    console.log(data);\n                                    return data.reading;\n                            })\n                            .catch((error: Response) => this.handleErrors(error))\n\n              }\n\n  //toefl reading general description 추가 기능\n  addReadingExam(reading: Reading) {\n\n    const body = JSON.stringify(reading);\n    const headers = new Headers({'Content-Type': 'application/json'});\n    const token = localStorage.getItem('token');\n\n      return this.http.post('https://examsimv100.herokuapp.com/reading/' + '?token=' + token, body, {headers: headers})\n                    .map((response: Response) => {\n                      const result = response.json();\n                      console.log(result);\n                      return result;\n                    })\n\n                    .catch((error: Response) => this.handleErrors(error))           // 나중에 이 error는 alert로 처리한다\n\n  }\n\n  handleErrors(error: Response) {\n    const err = error.json();\n    console.log(err);\n    return Observable.throw(err);\n  }\n\n  // 토플 넘버를 parameters로 넘겨야 한다\n\n  settingCurrentStepper(currentStep: string, toeflNo: number): StepperModel {\n\n    console.log(currentStep);\n    console.log(toeflNo);\n                switch (currentStep) {\n                case '1':      //home\n\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n                break;\n                case '2':       //toefllist\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n                case '3':        // reading area\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    true,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n\n                break;\n                case '4':        // listening area\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n                case '5':         // writing area\n                this.stepperModel = new StepperModel(true,\n                                                  toeflNo,\n                                                  true,\n\n                                                  false,\n                                                  false,\n                                                  true,\n                                                  false,\n\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false,\n\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false,\n\n                                                  false,\n                                                  false,\n\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false,\n                                                  false\n                                                )\n\n                break;\n                case '6':         // speaking area\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n\n                break;\n                case '7':         // reading section 1\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    true,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  );\n\n                break;\n                case '8':          // reading section 2\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n                case '9':          // reading section 3\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n\n                break;\n                case '10':          // reading section 4\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    true,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '11':      // listening section 1\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '12':       // listening section 2\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '13':        // listening section 3\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '14':        // listening section 4\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '15':         // listening section 5\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '16':         // listening section 6\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    true,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '17':          // writing section 1 - integrated\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    true,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '18':          // writing section 2 - indep\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    true,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    false,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false\n                                                  )\n\n                break;\n\n                case '19':          // speaking type1\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true\n                                                  )\n\n                break;\n\n                case '20':          // speaking type 2\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true\n                                                  )\n\n                break;\n\n                case '21':          // speaking type 3\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true,\n                                                    true\n                                                  )\n\n                break;\n\n                case '22':          // speaking type 4\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true,\n                                                    true\n                                                  )\n\n                break;\n\n                case '23':           // speaking type5\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false,\n                                                    true\n                                                  )\n\n                break;\n\n                case '24':           // speaking type 6\n                this.stepperModel = new StepperModel(true,\n                                                    toeflNo,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    true,\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n                                                    false,\n\n                                                    false,\n                                                    false,\n\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    true,\n                                                    false\n                                                  )\n\n                break;\n\n                }\n\n  return this.stepperModel;\n}\n\n}\n","module.exports = \"<p>\\n  edit-reading-desc works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-reading-desc',\n  templateUrl: './edit-reading-desc.component.html',\n  styleUrls: ['./edit-reading-desc.component.scss']\n})\nexport class EditReadingDescComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n  <!--Card-->\\n  <div class=\\\"areaDesc\\\">\\n    <div class=\\\"card card-cascade wider\\\">\\n        <!--Card image-->\\n        <div class=\\\"view gradient-card-header peach-gradient\\\">\\n            <h2 class=\\\"h2-responsive mb-2\\\">Toefle Exam No: {{ currentToefl.toeflNo }} Reading General Description </h2>\\n            <p class=\\\"\\\"><i class=\\\"fa fa-calendar\\\"></i> {{ currentDate | date:'fullDate' }}</p>\\n\\n        </div>\\n        \\n        <div class=\\\"card-body text-center\\\">\\n            <div class=\\\"para\\\">\\n            <p class=\\\"card-text mr-2 ml-2\\\">\\n              {{ currentToefl.readingDesc }}\\n            </p>\\n          </div>\\n            <a [routerLink]=\\\"['/teacher/'+currentToefl.toeflNo+'/editReadingDesc']\\\" \\n                class=\\\"orange-text mt-1 d-flex flex-row-reverse\\\">\\n                <h5 class=\\\"waves-effect p-2\\\" mdbWavesEffect>Edit Description <i class=\\\"fa fa-chevron-right\\\"></i></h5>\\n            </a>\\n        </div>\\n      \\n          \\n            <div class=\\\"row panel\\\">\\n              <div class=\\\"mx-auto col-md-9\\\">\\n            \\n                <div class=\\\"card card-body\\\">\\n                  <div class=\\\"flex-row text-center\\\">\\n                    <button type=\\\"button\\\" \\n                            class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                            (click)=\\\"onReadingSection1()\\\"\\n                            mdbWavesEffect>Section 1\\n                    </button>\\n                    <button type=\\\"button\\\" \\n                            class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                            (click)=\\\"onReadingSection2()\\\"\\n                            mdbWavesEffect>Section 2\\n                    </button>\\n                    <button type=\\\"button\\\" \\n                            class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                            (click)=\\\"onReadingSection3()\\\"\\n                            mdbWavesEffect>Section 3\\n                    </button>\\n                    <button type=\\\"button\\\" \\n                            class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                            (click)=\\\"onReadingSection4()\\\"\\n                            mdbWavesEffect>Section 4\\n                    </button>\\n                  </div>\\n                </div>\\n                <!--/.Panel-->      \\n              </div>\\n            </div>\\n    </div>\\n</div>\\n\"","module.exports = \".areaDesc {\\n  position: relative;\\n  top: -3rem;\\n  left: 0;\\n  bottom: 1rem;\\n  right: 0;\\n  overflow: auto; }\\n\\n.para {\\n  height: 18rem;\\n  min-height: 10rem;\\n  overflow: auto; }\\n\\n.panel {\\n  position: relative;\\n  top: -2rem; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Toefl } from '../../../../models/toefl.model';\nimport defaultToeflData from '../../../../models/default.data.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MakeExamService } from '../makeexam.service';\n@Component({\n  selector: 'app-reading-exam',\n  templateUrl: './reading-exam.component.html',\n  styleUrls: ['./reading-exam.component.scss']\n})\nexport class ReadingExamComponent implements OnInit {\n\n  @Input() currentToefl: Toefl;\n  \n  currentDate = Date.now();\n  constructor(private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n   console.log(this.currentToefl);\n  }\n\n  onReadingSection1() {\n    console.log('section1 clicked');\n    \n    this.router.navigate(['readingSection1'], {relativeTo: this.route });\n  }\n  onReadingSection2() {\n    console.log('section2 clicked');\n    this.router.navigate(['readingSection2'], {relativeTo: this.route });\n  }\n  onReadingSection3() {\n    \n    console.log('section3 clicked');\n    this.router.navigate(['readingSection3'], {relativeTo: this.route });\n  }\n  onReadingSection4() {\n    \n    console.log('section4 clicked');\n    this.router.navigate(['readingSection4'], {relativeTo: this.route });\n  }\n\n}\n","module.exports = \"<div class=\\\"problems\\\">\\n<p>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>1</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>2</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>3</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>4</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>5</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>6</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>7</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>8</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>9</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>10</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>11</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>12</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>13</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>14</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>15</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>16</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>17</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>18</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>19</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>20</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>21</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>22</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>23</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>24</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>25</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>26</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>27</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>28</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>29</button>\\n    <button class=\\\"btn-floating btn-outline-primary waves-light\\\" mdbWavesEffect>30</button>\\n\\n\\n</p>\\n</div>\\n<!-- \\n<div class=\\\"fullscreen\\\">\\n    <div class=\\\"card  m-1\\\">\\n     <h3 class=\\\"card-header primary-color white-text text-center\\\">Reading Section and Problems</h3>\\n         <div class=\\\"card-body p-1\\\">\\n\\n           <div class=\\\"row m-0\\\">\\n                   <div class=\\\"col-md-12\\\">\\n                     <div class=\\\"card card-body pt-1 pb-0\\\">\\n                       <app-reading-problems></app-reading-problems>\\n                     </div>\\n                   </div>\\n           </div>\\n\\n           <div class=\\\"row mt-1\\\">\\n                 <div class=\\\"col-md-5\\\">\\n                   <div class=\\\"card card-body\\\">\\n                         <button type=\\\"button\\\"\\n                                 class=\\\"btn btn-primary btn-lg btn-block waves-light\\\"\\n                                 (click)=\\\"onSubmit()\\\"\\n                                 #floatingButton\\n                                 mdbWavesEffect>\\n                                 <i class=\\\"fa fa-question mr-1\\\">\\n                                 </i>\\n                                 Make Problems\\n                                 </button>\\n                   </div>\\n                 </div>\\n\\n                   <div class=\\\"col-md-7\\\">\\n                       <form [formGroup]=\\\"readingSection\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                         <div class=\\\"card card-body pt-0\\\">\\n\\n                               <div class=\\\"md-form\\\">\\n                                   <input mdbInputDirective\\n                                         type=\\\"text\\\"\\n                                         id=\\\"section1Title\\\"\\n                                         class=\\\"form-control\\\"\\n                                         formControlName=\\\"section1Title\\\"\\n                                         >\\n                                   <label for=\\\"section1Title\\\" class=\\\"\\\">Enter the Reading Title</label>\\n                                 </div>\\n\\n                           <div>\\n                           <app-tony-editor></app-tony-editor>\\n                         </div>\\n                           <div class=\\\"mx-auto\\\">\\n                               <button type=\\\"submit\\\"\\n                               class=\\\"btn btn-success waves-light\\\"\\n                               (click)=\\\"onSubmit()\\\"\\n                               mdbWavesEffect>\\n                               <i class=\\\"fa fa-question mr-1\\\">\\n                               </i>\\n                                 Save !\\n                               </button>\\n\\n                               <button type=\\\"button\\\"\\n                               class=\\\"btn btn-warning waves-light\\\"\\n                               (click)=\\\"onDelete()\\\"\\n                               mdbWavesEffect>\\n                               <i class=\\\"fa fa-question mr-1\\\">\\n                               </i>\\n                                 Delete !\\n                               </button>\\n                         </div>\\n\\n                         </div>\\n                       </form>\\n                 </div>\\n\\n\\n           </div>\\n\\n         </div>\\n     </div>\\n   </div> -->\\n\"","module.exports = \".btn-floating {\\n  margin: 0;\\n  padding: 0;\\n  height: 35px;\\n  width: 35px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reading-problems',\n  templateUrl: './reading-problems.component.html',\n  styleUrls: ['./reading-problems.component.scss']\n})\nexport class ReadingProblemsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"fullscreen\\\">\\n    <div class=\\\"row mr-0\\\">\\n        <div class=\\\"col-md-12 mx-auto\\\">\\n            <app-stepper [currentStep]=\\\"currentStep\\\"></app-stepper>\\n        </div>\\n     </div>\\n     <div class=\\\"row row1\\\">\\n       <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card  mt-0 ml-5 mr-5 \\\">\\n            <h3 class=\\\"card-header primary-color white-text text-center\\\">Reading Section 1 and Problems</h3>\\n\\n            <div class=\\\"card-body p-1\\\">\\n\\n              <div class=\\\"row mt-1\\\">\\n                    <div class=\\\"col-md-5\\\">\\n                      <div class=\\\"card card-body\\\">\\n                            <button type=\\\"button\\\"\\n                                    class=\\\"btn btn-primary btn-lg btn-block waves-light\\\"\\n                                    [disabled]=\\\"!isAlreadySaved\\\"\\n                                    (click)=\\\"onMakeExam()\\\"\\n                                    #floatingButton\\n                                    mdbWavesEffect>\\n                                    <i class=\\\"fa fa-question mr-1\\\">\\n                                    </i>\\n                                    Make Problems\\n                            </button>\\n                            <div class=\\\"makeExam\\\">\\n\\n                            </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-7\\\">\\n                        <div *ngIf=\\\"!isAlreadySaved\\\">\\n                            <form [formGroup]=\\\"readingSection\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                              <div class=\\\"card card-body pt-0\\\">\\n\\n                                    <div class=\\\"md-form\\\">\\n                                        <input mdbInputDirective\\n                                              type=\\\"text\\\"\\n                                              id=\\\"section1Title\\\"\\n                                              class=\\\"form-control\\\"\\n                                              formControlName=\\\"section1Title\\\"\\n                                              >\\n                                        <label for=\\\"section1Title\\\" class=\\\"\\\">Enter the Reading Title</label>\\n                                      </div>\\n\\n                                <div>\\n                                <app-tony-editor [htmlContent]=\\\"htmlContent\\\"></app-tony-editor>\\n                                </div>\\n\\n                                <div class=\\\"mt-3 mx-auto\\\">\\n                                    <div *ngIf=\\\"!updateMode\\\">\\n                                          <button type=\\\"submit\\\"\\n                                          class=\\\"btn btn-success waves-light\\\"\\n                                          (click)=\\\"onSubmit()\\\"\\n                                          mdbWavesEffect>\\n                                          <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                          </i>\\n                                            Save !\\n                                          </button>\\n\\n                                          <button type=\\\"button\\\"\\n                                          class=\\\"btn btn-warning waves-light\\\"\\n                                          (click)=\\\"onDelete()\\\"\\n                                          mdbWavesEffect>\\n                                          <i class=\\\"fa fa-trash mr-1\\\">\\n                                          </i>\\n                                            Delete !\\n                                          </button>\\n\\n                                    </div>\\n                                    <div *ngIf=\\\"updateMode\\\">\\n                                        <button type=\\\"submit\\\"\\n                                        class=\\\"btn btn-success waves-light\\\"\\n                                        (click)=\\\"onSubmit()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                        </i>\\n                                          Update !\\n                                        </button>\\n\\n                                        <button type=\\\"button\\\"\\n                                        class=\\\"btn btn-warning waves-light\\\"\\n                                        (click)=\\\"onDelete()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-trash mr-1\\\">\\n                                        </i>\\n                                          Delete !\\n                                        </button>\\n\\n                                    </div>\\n                                </div>\\n\\n                              </div>\\n                            </form>\\n                        </div>\\n                        <div *ngIf=\\\"isAlreadySaved\\\">\\n                              <div class=\\\"card card-body pt-0\\\">\\n                                <div class=\\\"paragraphArea\\\">\\n                                    <div class=\\\"text-center\\\">\\n                                      <h5>{{ savedSectiontitle }}</h5>\\n                                    </div>\\n                                    <div [innerHTML]=\\\"savedSectionContent\\\">\\n                                    </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"mt-3 text-center\\\">\\n                                  <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-success waves-light\\\"\\n                                  (click)=\\\"onEdit()\\\"\\n                                  mdbWavesEffect>\\n                                  <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                  </i>\\n                                    Edit !\\n                                  </button>\\n                                  <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-warning waves-light\\\"\\n                                  (click)=\\\"onDelete()\\\"\\n                                  mdbWavesEffect>\\n                                  <i class=\\\"fa fa-trash mr-1\\\">\\n                                  </i>\\n                                    Delete !\\n                                  </button>\\n                              </div>\\n                        </div>\\n                    </div>\\n              </div>\\n            </div>\\n        </div>\\n     </div>\\n    </div>\\n</div>\\n\"","module.exports = \".fullscreen {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  overflow-y: auto; }\\n\\n.makeExam {\\n  height: 40rem; }\\n\\n.paragraphArea {\\n  height: 40rem;\\n  overflow-y: auto; }\\n\\n.row {\\n  position: relative;\\n  padding: 0;\\n  bottom: -1rem; }\\n\\n.row1 {\\n  position: relative;\\n  top: -1rem; }\\n\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Reading } from './../../../../../models/reading.model';\nimport { ReadingService } from '../reading.service';\n\nimport { ExecutableCommandService } from '../../../../../../tony-editorv1.0.0/services/executable-command.service';\nimport { MakeExamService } from '../../makeexam.service';\nimport { StepperModel } from '../../../../stepper/stepper.model';\nimport { UtilityService } from '../../../../../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-reading-section1',\n  templateUrl: './reading-section1.component.html',\n  styleUrls: ['./reading-section1.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReadingSection1Component implements OnInit, OnDestroy {\n\n  htmlContent: string;\n  savedSectionContentString;\n\n  htmlSubscription: Subscription;\n  readingSection: FormGroup;\n  savedSectiontitle = '';\n  savedSectionContent: any;\n\n  toeflNo: number;\n  currentDate = new Date();\n  isAlreadySaved = false;\n  updateMode = false;\n\n\n  currentStep: StepperModel;\n\n  @ViewChild('contentArea') contentArea: ElementRef;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private readingService: ReadingService,\n              private makeExamService: MakeExamService,\n              private utilityService: UtilityService,\n              private executableCommandService: ExecutableCommandService,\n              private snatizer: DomSanitizer       // [innerHTML]=\"htmlContent\"표현시 반드시 이것을 사용하여\n                                                   // 표현 해야만 정상적인 html style을 적용할수 있음\n                                                   // 또한 이것을 사용하는 이유는 web injection hacking 기법을 차단하기위함\n  ) { }\n\n  ngOnInit() {\n\n    this.utilityService.stepperCheck.next(true);     // steppper로 부터 routing되었는지 여부확인\n                                                     // toefl List component가 자동으로 뜨는 문제 해결위해 사용\n                                                     \n    this.readingSection = new FormGroup( {\n      'toeflNo': new FormControl(null, Validators.required),\n      'section1Title' : new FormControl('', Validators.required),\n      'section1Script' : new FormControl('', Validators.required)\n    });\n\n    this.route.params.subscribe((params: Params) => {\n            this.toeflNo = +params['id'];\n    });\n\n    this.currentStep = this.makeExamService.settingCurrentStepper('7', this.toeflNo);\n    console.log(this.currentStep);\n    console.log(this.currentStep.toeflNo);\n\n\n    this.readingService.getReadingSection(this.toeflNo).subscribe( result => {\n                  if (!result.reading) {\n                    this.isAlreadySaved = false;\n                  } else {\n                    if (result.reading.section1Title === '') {\n                      this.isAlreadySaved = false;\n                      this.updateMode = true;\n                    } else {\n                      this.isAlreadySaved = true;\n\n                      this.savedSectiontitle = result.reading.section1Title;\n                      // 아래와 같이 savedSectionContentString변수 한개를 더만들어 string으로 저장하는 이유는\n                      // tonyEditor에 property binding형태로 넘겨 주어야 하기때문\n                      // property binding시 반드시 string으로 넘겨 주어야만 정상적으로 editor내 textArea에 표현가능함\n\n                      this.savedSectionContentString = result.reading.section1Script;\n                      this.savedSectionContent = this.snatizer.bypassSecurityTrustHtml(result.reading.section1Script);\n\n                    }\n                  }\n          },\n            error => console.log(error)\n          );\n\n    this.htmlSubscription = this.executableCommandService.htmlContent.subscribe((html: string) => {\n      this.htmlContent = html;\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.htmlSubscription.unsubscribe();\n  }\n\n  onSubmit() {\n\n    if (this.readingSection.value.section1Title && this.htmlContent) {\n          const reading = new Reading(this.toeflNo,\n                                this.currentDate,\n                                this.readingSection.value.section1Title,\n                                this.htmlContent);\n          if (!this.updateMode) {\n              this.readingService.addReadingSection(reading)\n                                  .subscribe(result => {\n\n                                    this.isAlreadySaved = true;\n                                    this.savedSectiontitle = result.reading.section1Title;\n                                    this.savedSectionContent =\n                                                     this.snatizer.bypassSecurityTrustHtml(result.reading.section1Script);\n                                    this.savedSectionContentString = result.reading.section1Script;\n\n                                  },\n                                  error => console.log(error)\n                                );\n          } else {\n            this.readingService.updateReadingSection(reading)\n                                .subscribe(result => {\n\n                                  this.isAlreadySaved = true;\n                                  this.savedSectiontitle = result.reading.section1Title;\n                                  this.savedSectionContent =\n                                           this.snatizer.bypassSecurityTrustHtml(result.reading.section1Script);\n                                  this.savedSectionContentString = result.reading.section1Script;\n\n                                },\n                                error => console.log(error));\n          }\n    }\n\n    this.readingSection.reset();\n    this.htmlContent = '';\n\n  }\n\n  onEdit() {\n    console.log('edit click');\n    this.isAlreadySaved = false;\n    this.readingSection = new FormGroup( {\n      'toeflNo': new FormControl(this.toeflNo, Validators.required),\n      'section1Title' : new FormControl(this.savedSectiontitle, Validators.required),\n      'section1Script' : new FormControl('', Validators.required)\n    });\n\n    this.htmlContent = this.savedSectionContentString;\n    console.log(this.htmlContent);\n    this.updateMode = true;\n  }\n  onDelete() {\n    console.log('delete click');\n  }\n\n  onMakeExam() {\n    console.log('make exam click');\n      }\n}\n","module.exports = \"<div class=\\\"fullscreen\\\">\\n    <div class=\\\"row mr-0\\\">\\n        <div class=\\\"col-md-12 mx-auto\\\">\\n            <app-stepper [currentStep]=\\\"currentStep\\\"></app-stepper>\\n        </div>\\n     </div>\\n     <div class=\\\"row row1\\\">\\n       <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card  mt-0 ml-5 mr-5 \\\">\\n            <h3 class=\\\"card-header primary-color white-text text-center\\\">Reading Section 2 and Problems</h3>\\n\\n            <div class=\\\"card-body p-1\\\">\\n\\n              <div class=\\\"row mt-1\\\">\\n                    <div class=\\\"col-md-5\\\">\\n                      <div class=\\\"card card-body\\\">\\n                            <button type=\\\"button\\\"\\n                                    class=\\\"btn btn-primary btn-lg btn-block waves-light\\\"\\n                                    [disabled]=\\\"!isAlreadySaved\\\"\\n                                    (click)=\\\"onMakeExam()\\\"\\n                                    #floatingButton\\n                                    mdbWavesEffect>\\n                                    <i class=\\\"fa fa-question mr-1\\\">\\n                                    </i>\\n                                    Make Problems\\n                            </button>\\n                            <div class=\\\"makeExam\\\">\\n\\n                            </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-7\\\">\\n                        <div *ngIf=\\\"!isAlreadySaved\\\">\\n                            <form [formGroup]=\\\"readingSection2\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                              <div class=\\\"card card-body pt-0\\\">\\n\\n                                    <div class=\\\"md-form\\\">\\n                                        <input mdbInputDirective\\n                                              type=\\\"text\\\"\\n                                              id=\\\"section2Title\\\"\\n                                              class=\\\"form-control\\\"\\n                                              formControlName=\\\"section2Title\\\"\\n                                              >\\n                                        <label for=\\\"section2Title\\\" class=\\\"\\\">Enter the Reading Title</label>\\n                                      </div>\\n\\n                                <div>\\n                                <app-tony-editor [htmlContent]=\\\"htmlContent\\\"></app-tony-editor>\\n                                </div>\\n\\n                                <div class=\\\"mt-3 mx-auto\\\">\\n                                    <div *ngIf=\\\"!updateMode\\\">\\n                                          <button type=\\\"submit\\\"\\n                                          class=\\\"btn btn-success waves-light\\\"\\n                                          (click)=\\\"onSubmit()\\\"\\n                                          mdbWavesEffect>\\n                                          <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                          </i>\\n                                            Save !\\n                                          </button>\\n\\n                                          <button type=\\\"button\\\"\\n                                          class=\\\"btn btn-warning waves-light\\\"\\n                                          (click)=\\\"onDelete()\\\"\\n                                          mdbWavesEffect>\\n                                          <i class=\\\"fa fa-trash mr-1\\\">\\n                                          </i>\\n                                            Delete !\\n                                          </button>\\n\\n                                    </div>\\n                                    <div *ngIf=\\\"updateMode\\\">\\n                                        <button type=\\\"submit\\\"\\n                                        class=\\\"btn btn-success waves-light\\\"\\n                                        (click)=\\\"onSubmit()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                        </i>\\n                                          Update !\\n                                        </button>\\n\\n                                        <button type=\\\"button\\\"\\n                                        class=\\\"btn btn-warning waves-light\\\"\\n                                        (click)=\\\"onDelete()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-trash mr-1\\\">\\n                                        </i>\\n                                          Delete !\\n                                        </button>\\n\\n                                    </div>\\n                                </div>\\n\\n                              </div>\\n                            </form>\\n                        </div>\\n                        <div *ngIf=\\\"isAlreadySaved\\\">\\n                              <div class=\\\"card card-body pt-0\\\">\\n                                <div class=\\\"paragraphArea\\\">\\n                                    <div class=\\\"text-center\\\">\\n                                      <h5>{{ savedSectiontitle }}</h5>\\n                                    </div>\\n                                    <div [innerHTML]=\\\"savedSectionContent\\\">\\n                                    </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"mt-3 text-center\\\">\\n                                  <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-success waves-light\\\"\\n                                  (click)=\\\"onEdit()\\\"\\n                                  mdbWavesEffect>\\n                                  <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                  </i>\\n                                    Edit !\\n                                  </button>\\n                                  <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-warning waves-light\\\"\\n                                  (click)=\\\"onDelete()\\\"\\n                                  mdbWavesEffect>\\n                                  <i class=\\\"fa fa-trash mr-1\\\">\\n                                  </i>\\n                                    Delete !\\n                                  </button>\\n                              </div>\\n                        </div>\\n                    </div>\\n              </div>\\n            </div>\\n        </div>\\n     </div>\\n    </div>\\n</div>\\n\"","module.exports = \".fullscreen {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  overflow-y: auto; }\\n\\n.makeExam {\\n  height: 40rem; }\\n\\n.paragraphArea {\\n  height: 40rem;\\n  overflow-y: auto; }\\n\\n.row {\\n  position: relative;\\n  padding: 0;\\n  bottom: -1rem; }\\n\\n.row1 {\\n  position: relative;\\n  top: -1rem; }\\n\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Reading } from './../../../../../models/reading.model';\nimport { ReadingService } from '../reading.service';\n\nimport { ExecutableCommandService } from '../../../../../../tony-editorv1.0.0/services/executable-command.service';\nimport { MakeExamService } from '../../makeexam.service';\nimport { StepperModel } from '../../../../stepper/stepper.model';\nimport { UtilityService } from '../../../../../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-reading-section2',\n  templateUrl: './reading-section2.component.html',\n  styleUrls: ['./reading-section2.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReadingSection2Component implements OnInit, OnDestroy {\n\n  htmlContent: string;\n  savedSectionContentString;\n\n  htmlSubscription: Subscription;\n  readingSection2: FormGroup;\n  savedSectiontitle = '';\n  savedSectionContent: any;\n\n  toeflNo: number;\n  currentDate = new Date();\n  isAlreadySaved = false;\n  updateMode = false;\n\n  currentStep: StepperModel;\n\n  @ViewChild('contentArea') contentArea: ElementRef;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private readingService: ReadingService,\n              private makeExamService: MakeExamService,\n              private utilityService: UtilityService,\n              private executableCommandService: ExecutableCommandService,\n              private snatizer: DomSanitizer       // [innerHTML]=\"htmlContent\"표현시 반드시 이것을 사용하여\n                                                   // 표현 해야만 정상적인 html style을 적용할수 있음\n                                                   // 또한 이것을 사용하는 이유는 web injection hacking 기법을 차단하기위함\n  ) { }\n\n  ngOnInit() {\n   \n    this.utilityService.stepperCheck.next(true);     // steppper로 부터 routing되었는지 여부확인\n                                                     // toefl List component가 자동으로 뜨는 문제 해결위해 사용\n    this.readingSection2 = new FormGroup( {\n      'toeflNo': new FormControl(null, Validators.required),\n      'section2Title' : new FormControl('', Validators.required),\n      'section2Script' : new FormControl('', Validators.required)\n    });\n\n    this.route.params.subscribe((params: Params) => {\n            this.toeflNo = +params['id'];\n    });\n\n        \n    this.currentStep = this.makeExamService.settingCurrentStepper('8', this.toeflNo);\n    console.log(this.currentStep);\n   \n    this.readingService.getReadingSection(this.toeflNo).subscribe( result => {\n                  if (!result.reading) {\n                    this.isAlreadySaved = false;\n                  } else {\n                    if (result.reading.section2Title === '' || !result.reading.section2Title) {\n                      this.isAlreadySaved = false;\n                      this.updateMode = true;\n                    } else {\n                      this.isAlreadySaved = true;\n                      this.savedSectiontitle = result.reading.section2Title;\n                      // 아래와 같이 savedSectionContentString변수 한개를 더만들어 string으로 저장하는 이유는\n                      // tonyEditor에 property binding형태로 넘겨 주어야 하기때문\n                      // property binding시 반드시 string으로 넘겨 주어야만 정상적으로 editor내 textArea에 표현가능함\n  \n                      this.savedSectionContentString = result.reading.section2Script;\n                      this.savedSectionContent = this.snatizer.bypassSecurityTrustHtml(result.reading.section2Script);\n  \n                    }\n                  }\n          },\n            error => console.log(error)\n          );\n\n    this.htmlSubscription = this.executableCommandService.htmlContent.subscribe((html: string) => {\n      this.htmlContent = html;\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.htmlSubscription.unsubscribe();\n  }\n\n  onSubmit() {\n\n    if (this.readingSection2.value.section2Title && this.htmlContent) {\n          const reading2 = new Reading(this.toeflNo,\n                                this.currentDate,\n                                '',\n                                '',\n                                [],\n                                this.readingSection2.value.section2Title,\n                                this.htmlContent);\n          if (!this.updateMode) {\n              this.readingService.addReadingSection(reading2)\n                                  .subscribe(result => {\n\n                                    this.isAlreadySaved = true;\n                                    this.savedSectiontitle = result.reading.section2Title;\n                                    this.savedSectionContent =\n                                                     this.snatizer.bypassSecurityTrustHtml(result.reading.section2Script);\n                                    this.savedSectionContentString = result.reading.section2Script;\n                                  },\n                                  error => console.log(error)\n                                );\n          } else {\n            this.readingService.updateReadingSection(reading2)\n                                .subscribe(result => {\n\n                                  this.isAlreadySaved = true;\n                                  this.savedSectiontitle = result.reading.section2Title;\n                                  this.savedSectionContent =\n                                           this.snatizer.bypassSecurityTrustHtml(result.reading.section2Script);\n                                  this.savedSectionContentString = result.reading.section2Script;\n                                },\n                                error => console.log(error));\n          }\n    }\n\n    this.readingSection2.reset();\n    this.htmlContent = '';\n\n  }\n\n  onEdit() {\n    console.log('edit click');\n    this.isAlreadySaved = false;\n    this.readingSection2 = new FormGroup( {\n      'toeflNo': new FormControl(this.toeflNo, Validators.required),\n      'section2Title' : new FormControl(this.savedSectiontitle, Validators.required),\n      'section2Script' : new FormControl('', Validators.required)\n    });\n    \n    this.htmlContent = this.savedSectionContentString;\n    console.log(this.htmlContent);\n    this.updateMode = true;\n  }\n  onDelete() {\n    console.log('delete click');\n  }\n\n  onMakeExam() {\n    console.log('make exam click');\n      }\n}\n","module.exports = \"<div class=\\\"fullscreen\\\">\\n  <div class=\\\"row mr-0\\\">\\n      <div class=\\\"col-md-12 mx-auto\\\">\\n          <app-stepper [currentStep]=\\\"currentStep\\\"></app-stepper>\\n      </div>\\n   </div>\\n   <div class=\\\"row row1\\\">\\n     <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card  mt-0 ml-5 mr-5 \\\">\\n          <h3 class=\\\"card-header primary-color white-text text-center\\\">Reading Section 2 and Problems</h3>\\n\\n          <div class=\\\"card-body p-1\\\">\\n\\n            <div class=\\\"row mt-1\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <div class=\\\"card card-body\\\">\\n                          <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-primary btn-lg btn-block waves-light\\\"\\n                                  [disabled]=\\\"!isAlreadySaved\\\"\\n                                  (click)=\\\"onMakeExam()\\\"\\n                                  #floatingButton\\n                                  mdbWavesEffect>\\n                                  <i class=\\\"fa fa-question mr-1\\\">\\n                                  </i>\\n                                  Make Problems\\n                          </button>\\n                          <div class=\\\"makeExam\\\">\\n\\n                          </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-7\\\">\\n                      <div *ngIf=\\\"!isAlreadySaved\\\">\\n                          <form [formGroup]=\\\"readingSection3\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"card card-body pt-0\\\">\\n\\n                                  <div class=\\\"md-form\\\">\\n                                      <input mdbInputDirective\\n                                            type=\\\"text\\\"\\n                                            id=\\\"section3Title\\\"\\n                                            class=\\\"form-control\\\"\\n                                            formControlName=\\\"section3Title\\\"\\n                                            >\\n                                      <label for=\\\"section3Title\\\" class=\\\"\\\">Enter the Reading Title</label>\\n                                    </div>\\n\\n                              <div>\\n                              <app-tony-editor [htmlContent]=\\\"htmlContent\\\"></app-tony-editor>\\n                              </div>\\n\\n                              <div class=\\\"mt-3 mx-auto\\\">\\n                                  <div *ngIf=\\\"!updateMode\\\">\\n                                        <button type=\\\"submit\\\"\\n                                        class=\\\"btn btn-success waves-light\\\"\\n                                        (click)=\\\"onSubmit()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                        </i>\\n                                          Save !\\n                                        </button>\\n\\n                                        <button type=\\\"button\\\"\\n                                        class=\\\"btn btn-warning waves-light\\\"\\n                                        (click)=\\\"onDelete()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-trash mr-1\\\">\\n                                        </i>\\n                                          Delete !\\n                                        </button>\\n\\n                                  </div>\\n                                  <div *ngIf=\\\"updateMode\\\">\\n                                      <button type=\\\"submit\\\"\\n                                      class=\\\"btn btn-success waves-light\\\"\\n                                      (click)=\\\"onSubmit()\\\"\\n                                      mdbWavesEffect>\\n                                      <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                      </i>\\n                                        Update !\\n                                      </button>\\n\\n                                      <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-warning waves-light\\\"\\n                                      (click)=\\\"onDelete()\\\"\\n                                      mdbWavesEffect>\\n                                      <i class=\\\"fa fa-trash mr-1\\\">\\n                                      </i>\\n                                        Delete !\\n                                      </button>\\n\\n                                  </div>\\n                              </div>\\n\\n                            </div>\\n                          </form>\\n                      </div>\\n                      <div *ngIf=\\\"isAlreadySaved\\\">\\n                            <div class=\\\"card card-body pt-0\\\">\\n                              <div class=\\\"paragraphArea\\\">\\n                                  <div class=\\\"text-center\\\">\\n                                    <h5>{{ savedSectiontitle }}</h5>\\n                                  </div>\\n                                  <div [innerHTML]=\\\"savedSectionContent\\\">\\n                                  </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"mt-3 text-center\\\">\\n                                <button type=\\\"button\\\"\\n                                class=\\\"btn btn-success waves-light\\\"\\n                                (click)=\\\"onEdit()\\\"\\n                                mdbWavesEffect>\\n                                <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                </i>\\n                                  Edit !\\n                                </button>\\n                                <button type=\\\"button\\\"\\n                                class=\\\"btn btn-warning waves-light\\\"\\n                                (click)=\\\"onDelete()\\\"\\n                                mdbWavesEffect>\\n                                <i class=\\\"fa fa-trash mr-1\\\">\\n                                </i>\\n                                  Delete !\\n                                </button>\\n                            </div>\\n                      </div>\\n                  </div>\\n            </div>\\n          </div>\\n      </div>\\n   </div>\\n  </div>\\n</div>\\n\"","module.exports = \".fullscreen {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  overflow-y: auto; }\\n\\n.makeExam {\\n  height: 40rem; }\\n\\n.paragraphArea {\\n  height: 40rem;\\n  overflow-y: auto; }\\n\\n.row {\\n  position: relative;\\n  padding: 0;\\n  bottom: -1rem; }\\n\\n.row1 {\\n  position: relative;\\n  top: -1rem; }\\n\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Reading } from './../../../../../models/reading.model';\nimport { ReadingService } from '../reading.service';\n\nimport { ExecutableCommandService } from '../../../../../../tony-editorv1.0.0/services/executable-command.service';\nimport { MakeExamService } from '../../makeexam.service';\nimport { StepperModel } from '../../../../stepper/stepper.model';\nimport { UtilityService } from '../../../../../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-reading-section3',\n  templateUrl: './reading-section3.component.html',\n  styleUrls: ['./reading-section3.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReadingSection3Component implements OnInit, OnDestroy {\n\n  htmlContent: string;\n  savedSectionContentString;\n\n  htmlSubscription: Subscription;\n  readingSection3: FormGroup;\n  savedSectiontitle = '';\n  savedSectionContent: any;\n\n  toeflNo: number;\n  currentDate = new Date();\n  isAlreadySaved = false;\n  updateMode = false;\n\n  currentStep: StepperModel;\n\n  @ViewChild('contentArea') contentArea: ElementRef;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private readingService: ReadingService,\n              private makeExamService: MakeExamService,\n              private utilityService: UtilityService,\n              private executableCommandService: ExecutableCommandService,\n              private snatizer: DomSanitizer       // [innerHTML]=\"htmlContent\"표현시 반드시 이것을 사용하여\n                                                   // 표현 해야만 정상적인 html style을 적용할수 있음\n                                                   // 또한 이것을 사용하는 이유는 web injection hacking 기법을 차단하기위함\n  ) { }\n\n  ngOnInit() {\n   \n\n    this.utilityService.stepperCheck.next(true);     // steppper로 부터 routing되었는지 여부확인\n                                                     // toefl List component가 자동으로 뜨는 문제 해결위해 사용\n\n    \n    console.log(this.currentStep);\n    this.readingSection3 = new FormGroup( {\n      'toeflNo': new FormControl(null, Validators.required),\n      'section3Title' : new FormControl('', Validators.required),\n      'section3Script' : new FormControl('', Validators.required)\n    });\n\n    this.route.params.subscribe((params: Params) => {\n            this.toeflNo = +params['id'];\n    });\n\n    this.currentStep = this.makeExamService.settingCurrentStepper('9', this.toeflNo);\n    \n    this.readingService.getReadingSection(this.toeflNo).subscribe( result => {\n                  if (!result.reading) {\n                    this.isAlreadySaved = false;\n                  } else {\n                    if (result.reading.section3Title === '' || !result.reading.section2Title) {\n                      this.isAlreadySaved = false;\n                      this.updateMode = true;\n                    } else {\n                      this.isAlreadySaved = true;\n                      this.savedSectiontitle = result.reading.section3Title;\n                      // 아래와 같이 savedSectionContentString변수 한개를 더만들어 string으로 저장하는 이유는\n                      // tonyEditor에 property binding형태로 넘겨 주어야 하기때문\n                      // property binding시 반드시 string으로 넘겨 주어야만 정상적으로 editor내 textArea에 표현가능함\n  \n                      this.savedSectionContentString = result.reading.section3Script;\n                      this.savedSectionContent = this.snatizer.bypassSecurityTrustHtml(result.reading.section3Script);\n  \n                    }\n                  }\n          },\n            error => console.log(error)\n          );\n\n    this.htmlSubscription = this.executableCommandService.htmlContent.subscribe((html: string) => {\n      this.htmlContent = html;\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.htmlSubscription.unsubscribe();\n  }\n\n  onSubmit() {\n\n    if (this.readingSection3.value.section3Title && this.htmlContent) {\n          const reading3 = new Reading(this.toeflNo,\n                                this.currentDate,\n                                '',\n                                '',\n                                [],\n                                '',\n                                '',\n                                [],\n                                this.readingSection3.value.section3Title,\n                                this.htmlContent,\n                                [],\n                                '',\n                                '',\n                                []);\n          if (!this.updateMode) {\n              this.readingService.addReadingSection(reading3)\n                                  .subscribe(result => {\n\n                                    this.isAlreadySaved = true;\n                                    this.savedSectiontitle = result.reading.section3Title;\n                                    this.savedSectionContent =\n                                                     this.snatizer.bypassSecurityTrustHtml(result.reading.section3Script);\n                                    this.savedSectionContentString = result.reading.section3Script;\n                                  },\n                                  error => console.log(error)\n                                );\n          } else {\n            \n            this.readingService.updateReadingSection(reading3)\n                                .subscribe(result => {\n\n                                  this.isAlreadySaved = true;\n                                  this.savedSectiontitle = result.reading.section3Title;\n                                  this.savedSectionContent =\n                                           this.snatizer.bypassSecurityTrustHtml(result.reading.section3Script);\n                                  this.savedSectionContentString = result.reading.section3Script;\n                                },\n                                error => console.log(error));\n          }\n    }\n\n    this.readingSection3.reset();\n    this.htmlContent = '';\n\n  }\n\n  onEdit() {\n    console.log('edit click');\n    this.isAlreadySaved = false;\n    this.readingSection3 = new FormGroup( {\n      'toeflNo': new FormControl(this.toeflNo, Validators.required),\n      'section3Title' : new FormControl(this.savedSectiontitle, Validators.required),\n      'section3Script' : new FormControl('', Validators.required)\n    });\n    \n    this.htmlContent = this.savedSectionContentString;\n    console.log(this.htmlContent);\n    this.updateMode = true;\n  }\n  onDelete() {\n    console.log('delete click');\n  }\n\n  onMakeExam() {\n    console.log('make exam click');\n      }\n}\n","module.exports = \"<div class=\\\"fullscreen\\\">\\n  <div class=\\\"row mr-0\\\">\\n      <div class=\\\"col-md-12 mx-auto\\\">\\n          <app-stepper [currentStep]=\\\"currentStep\\\"></app-stepper>\\n      </div>\\n   </div>\\n   <div class=\\\"row row1\\\">\\n     <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card  mt-0 ml-5 mr-5 \\\">\\n          <h3 class=\\\"card-header primary-color white-text text-center\\\">Reading Section 4 and Problems</h3>\\n\\n          <div class=\\\"card-body p-1\\\">\\n\\n            <div class=\\\"row mt-1\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <div class=\\\"card card-body\\\">\\n                          <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-primary btn-lg btn-block waves-light\\\"\\n                                  [disabled]=\\\"!isAlreadySaved\\\"\\n                                  (click)=\\\"onMakeExam()\\\"\\n                                  #floatingButton\\n                                  mdbWavesEffect>\\n                                  <i class=\\\"fa fa-question mr-1\\\">\\n                                  </i>\\n                                  Make Problems\\n                          </button>\\n                          <div class=\\\"makeExam\\\">\\n\\n                          </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-7\\\">\\n                      <div *ngIf=\\\"!isAlreadySaved\\\">\\n                          <form [formGroup]=\\\"readingSection4\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"card card-body pt-0\\\">\\n\\n                                  <div class=\\\"md-form\\\">\\n                                      <input mdbInputDirective\\n                                            type=\\\"text\\\"\\n                                            id=\\\"section4Title\\\"\\n                                            class=\\\"form-control\\\"\\n                                            formControlName=\\\"section4Title\\\"\\n                                            >\\n                                      <label for=\\\"section4Title\\\" class=\\\"\\\">Enter the Reading Title</label>\\n                                    </div>\\n\\n                              <div>\\n                              <app-tony-editor [htmlContent]=\\\"htmlContent\\\"></app-tony-editor>\\n                              </div>\\n\\n                              <div class=\\\"mt-3 mx-auto\\\">\\n                                  <div *ngIf=\\\"!updateMode\\\">\\n                                        <button type=\\\"submit\\\"\\n                                        class=\\\"btn btn-success waves-light\\\"\\n                                        (click)=\\\"onSubmit()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                        </i>\\n                                          Save !\\n                                        </button>\\n\\n                                        <button type=\\\"button\\\"\\n                                        class=\\\"btn btn-warning waves-light\\\"\\n                                        (click)=\\\"onDelete()\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-trash mr-1\\\">\\n                                        </i>\\n                                          Delete !\\n                                        </button>\\n\\n                                  </div>\\n                                  <div *ngIf=\\\"updateMode\\\">\\n                                      <button type=\\\"submit\\\"\\n                                      class=\\\"btn btn-success waves-light\\\"\\n                                      (click)=\\\"onSubmit()\\\"\\n                                      mdbWavesEffect>\\n                                      <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                      </i>\\n                                        Update !\\n                                      </button>\\n\\n                                      <button type=\\\"button\\\"\\n                                      class=\\\"btn btn-warning waves-light\\\"\\n                                      (click)=\\\"onDelete()\\\"\\n                                      mdbWavesEffect>\\n                                      <i class=\\\"fa fa-trash mr-1\\\">\\n                                      </i>\\n                                        Delete !\\n                                      </button>\\n\\n                                  </div>\\n                              </div>\\n\\n                            </div>\\n                          </form>\\n                      </div>\\n                      <div *ngIf=\\\"isAlreadySaved\\\">\\n                            <div class=\\\"card card-body pt-0\\\">\\n                              <div class=\\\"paragraphArea\\\">\\n                                  <div class=\\\"text-center\\\">\\n                                    <h5>{{ savedSectiontitle }}</h5>\\n                                  </div>\\n                                  <div [innerHTML]=\\\"savedSectionContent\\\">\\n                                  </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"mt-3 text-center\\\">\\n                                <button type=\\\"button\\\"\\n                                class=\\\"btn btn-success waves-light\\\"\\n                                (click)=\\\"onEdit()\\\"\\n                                mdbWavesEffect>\\n                                <i class=\\\"fa fa-question-circle mr-1\\\">\\n                                </i>\\n                                  Edit !\\n                                </button>\\n                                <button type=\\\"button\\\"\\n                                class=\\\"btn btn-warning waves-light\\\"\\n                                (click)=\\\"onDelete()\\\"\\n                                mdbWavesEffect>\\n                                <i class=\\\"fa fa-trash mr-1\\\">\\n                                </i>\\n                                  Delete !\\n                                </button>\\n                            </div>\\n                      </div>\\n                  </div>\\n            </div>\\n          </div>\\n      </div>\\n   </div>\\n  </div>\\n</div>\\n\"","module.exports = \".fullscreen {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  overflow-y: auto; }\\n\\n.makeExam {\\n  height: 40rem; }\\n\\n.paragraphArea {\\n  height: 40rem;\\n  overflow-y: auto; }\\n\\n.row {\\n  position: relative;\\n  padding: 0;\\n  bottom: -1rem; }\\n\\n.row1 {\\n  position: relative;\\n  top: -1rem; }\\n\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Reading } from './../../../../../models/reading.model';\nimport { ReadingService } from '../reading.service';\n\nimport { ExecutableCommandService } from '../../../../../../tony-editorv1.0.0/services/executable-command.service';\nimport { MakeExamService } from '../../makeexam.service';\nimport { StepperModel } from '../../../../stepper/stepper.model';\nimport { UtilityService } from '../../../../../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-reading-section4',\n  templateUrl: './reading-section4.component.html',\n  styleUrls: ['./reading-section4.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReadingSection4Component implements OnInit, OnDestroy {\n\n  htmlContent: string;\n  savedSectionContentString;\n\n  htmlSubscription: Subscription;\n  readingSection4: FormGroup;\n  savedSectiontitle = '';\n  savedSectionContent: any;\n\n  toeflNo: number;\n  currentDate = new Date();\n  isAlreadySaved = false;\n  updateMode = false;\n\n  currentStep: StepperModel;\n\n  @ViewChild('contentArea') contentArea: ElementRef;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private readingService: ReadingService,\n              private makeExamService: MakeExamService,\n              private utilityService: UtilityService,\n              private executableCommandService: ExecutableCommandService,\n              private snatizer: DomSanitizer       // [innerHTML]=\"htmlContent\"표현시 반드시 이것을 사용하여\n                                                   // 표현 해야만 정상적인 html style을 적용할수 있음\n                                                   // 또한 이것을 사용하는 이유는 web injection hacking 기법을 차단하기위함\n  ) { }\n\n  ngOnInit() {\n   \n\n    this.utilityService.stepperCheck.next(true);     // steppper로 부터 routing되었는지 여부확인\n                                                     // toefl List component가 자동으로 뜨는 문제 해결위해 사용\n\n    \n    console.log(this.currentStep);\n    this.readingSection4 = new FormGroup( {\n      'toeflNo': new FormControl(null, Validators.required),\n      'section4Title' : new FormControl('', Validators.required),\n      'section4Script' : new FormControl('', Validators.required)\n    });\n\n    this.route.params.subscribe((params: Params) => {\n            this.toeflNo = +params['id'];\n    });\n\n    this.currentStep = this.makeExamService.settingCurrentStepper('10', this.toeflNo);\n    \n    this.readingService.getReadingSection(this.toeflNo).subscribe( result => {\n                  if (!result.reading) {\n                    this.isAlreadySaved = false;\n                  } else {\n                    if (result.reading.section4Title === '' || !result.reading.section2Title) {\n                      this.isAlreadySaved = false;\n                      this.updateMode = true;\n                    } else {\n                      this.isAlreadySaved = true;\n                      this.savedSectiontitle = result.reading.section4Title;\n                      // 아래와 같이 savedSectionContentString변수 한개를 더만들어 string으로 저장하는 이유는\n                      // tonyEditor에 property binding형태로 넘겨 주어야 하기때문\n                      // property binding시 반드시 string으로 넘겨 주어야만 정상적으로 editor내 textArea에 표현가능함\n  \n                      this.savedSectionContentString = result.reading.section4Script;\n                      this.savedSectionContent = this.snatizer.bypassSecurityTrustHtml(result.reading.section4Script);\n  \n                    }\n                  }\n          },\n            error => console.log(error)\n          );\n\n    this.htmlSubscription = this.executableCommandService.htmlContent.subscribe((html: string) => {\n      this.htmlContent = html;\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.htmlSubscription.unsubscribe();\n  }\n\n  onSubmit() {\n\n    if (this.readingSection4.value.section4Title && this.htmlContent) {\n          const reading4 = new Reading(this.toeflNo,\n                                this.currentDate,\n                                '',\n                                '',\n                                [],\n                                '',\n                                '',\n                                [],\n                                '',\n                                '',\n                                [],\n                                this.readingSection4.value.section4Title,\n                                this.htmlContent,\n                                []);\n          if (!this.updateMode) {\n              this.readingService.addReadingSection(reading4)\n                                  .subscribe(result => {\n\n                                    this.isAlreadySaved = true;\n                                    this.savedSectiontitle = result.reading.section4Title;\n                                    this.savedSectionContent =\n                                                     this.snatizer.bypassSecurityTrustHtml(result.reading.section4Script);\n                                    this.savedSectionContentString = result.reading.section4Script;\n                                  },\n                                  error => console.log(error)\n                                );\n          } else {\n            \n            this.readingService.updateReadingSection(reading4)\n                                .subscribe(result => {\n\n                                  this.isAlreadySaved = true;\n                                  this.savedSectiontitle = result.reading.section4Title;\n                                  this.savedSectionContent =\n                                           this.snatizer.bypassSecurityTrustHtml(result.reading.section4Script);\n                                  this.savedSectionContentString = result.reading.section4Script;\n                                },\n                                error => console.log(error));\n          }\n    }\n\n    this.readingSection4.reset();\n    this.htmlContent = '';\n\n  }\n\n  onEdit() {\n    console.log('edit click');\n    this.isAlreadySaved = false;\n    this.readingSection4 = new FormGroup( {\n      'toeflNo': new FormControl(this.toeflNo, Validators.required),\n      'section4Title' : new FormControl(this.savedSectiontitle, Validators.required),\n      'section4Script' : new FormControl('', Validators.required)\n    });\n    \n    this.htmlContent = this.savedSectionContentString;\n    console.log(this.htmlContent);\n    this.updateMode = true;\n  }\n  onDelete() {\n    console.log('delete click');\n  }\n\n  onMakeExam() {\n    console.log('make exam click');\n      }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Reading } from './../../../../models/reading.model';\nimport 'rxjs/add/observable/throw';\n\nimport { UtilityService } from '../../../../../Utility-shared/utility.service';\n\n@Injectable()\nexport class ReadingService {\n\n  reading: Reading;\n  constructor(private http: Http,\n              private utilityService: UtilityService) {}\n\n\n  getReadingSection(toeflNo: number) {\n\n    const token = localStorage.getItem('token');\n    this.utilityService.loadingStateChanged.next(true);\n\n    return this.http.get('http://localhost:3000/reading/' + toeflNo + '?token=' + token )\n                    .map((res: Response) => {\n                     const data = res.json();\n                     console.log(data);\n                    this.utilityService.loadingStateChanged.next(false);\n                    return data;\n                    })\n                    .catch((error: Response) => this.handleError(error));\n  }\n\n  addReadingSection(reading: Reading) {\n    const token = localStorage.getItem('token');\n\n    const body = JSON.stringify(reading);\n\n    console.log(body);\n    const header = new Headers({'Content-Type': 'application/json'});\n    this.utilityService.loadingStateChanged.next(true);\n    return this.http.post('http://localhost:3000/reading' + '?token=' + token, body, {headers : header} )\n                          .map((res: Response) => {\n                            const data = res.json();\n                            console.log(data);\n                            this.utilityService.loadingStateChanged.next(false);\n                            return data;\n                          })\n                          .catch((error: Response) => this.handleError(error));\n  }\n\n  updateReadingSection(reading: Reading) {\n    const token = localStorage.getItem('token');\n    const body = JSON.stringify(reading);\n    console.log('Update Mode : ' +body);\n    const header = new Headers({'Content-Type': 'application/json'});\n    this.utilityService.loadingStateChanged.next(true);\n    return this.http.patch('http://localhost:3000/reading' + '?token=' + token, body, {headers : header} )\n                          .map((res: Response) => {\n                            const data = res.json();\n                            console.log(data);\n                            this.utilityService.loadingStateChanged.next(false);\n                            return data;\n                          })\n                          .catch((error: Response) => this.handleError(error));\n  }\n\n  public handleError(error: Response) {\n    const err = error.json();\n    this.utilityService.loadingStateChanged.next(false);\n    this.utilityService.errorToast(err.title, err.message);\n    return Observable.throw(err);\n  }\n}\n","module.exports = \"\\n  <!--Card-->\\n  <div class=\\\"areaDesc\\\">\\n      <div class=\\\"card card-cascade wider\\\">\\n          <!--Card image-->\\n          <div class=\\\"view gradient-card-header peach-gradient\\\">\\n              <h2 class=\\\"h2-responsive mb-2\\\">Toefle Exam No: {{ currentToefl.toeflNo }} Speaking General Description </h2>\\n              <p class=\\\"\\\"><i class=\\\"fa fa-calendar\\\"></i> {{ currentDate | date:'fullDate' }}</p>\\n  \\n          </div>\\n          \\n          <div class=\\\"card-body text-center\\\">\\n              <div class=\\\"para\\\">\\n              <p class=\\\"card-text mr-2 ml-2\\\">\\n                {{ currentToefl.speakingDesc }}\\n              </p>\\n            </div>\\n              <a [routerLink]=\\\"['/teacher/'+currentToefl.toeflNo+'/editReadingDesc']\\\" \\n                  class=\\\"orange-text mt-1 d-flex flex-row-reverse\\\">\\n                  <h5 class=\\\"waves-effect p-2\\\" mdbWavesEffect>Edit Description <i class=\\\"fa fa-chevron-right\\\"></i></h5>\\n              </a>\\n          </div>\\n        \\n            \\n              <div class=\\\"row panel\\\">\\n                <div class=\\\"mx-auto col-md-9\\\">\\n              \\n                  <div class=\\\"card card-body\\\">\\n                    <div class=\\\"flex-row text-center\\\">\\n                      <button type=\\\"button\\\" \\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                              (click)=\\\"onSpeakingingProblem1()\\\"\\n                              mdbWavesEffect>Problem Type 1\\n                      </button>\\n                      <button type=\\\"button\\\" \\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                              (click)=\\\"onSpeakingingProblem2()\\\"\\n                              mdbWavesEffect>Problem Type 2\\n                      </button>\\n                      <button type=\\\"button\\\" \\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                              (click)=\\\"onSpeakingingProblem3()\\\"\\n                              mdbWavesEffect>Problem Type 3\\n                      </button>\\n                      <button type=\\\"button\\\" \\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                              (click)=\\\"onSpeakingingProblem4()\\\"\\n                              mdbWavesEffect>Prolem Type 4\\n                      </button>\\n                      <button type=\\\"button\\\" \\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                              (click)=\\\"onSpeakingingProblem5()\\\"\\n                              mdbWavesEffect>Prolem Type 5\\n                      </button>\\n                      <button type=\\\"button\\\" \\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\" \\n                              (click)=\\\"onSpeakingingProblem6()\\\"\\n                              mdbWavesEffect>Prolem Type 6\\n                      </button>\\n\\n                    </div>\\n                  </div>\\n                  <!--/.Panel-->      \\n                </div>\\n              </div>\\n      </div>\\n  </div>\\n  \"","module.exports = \".areaDesc {\\n  position: relative;\\n  top: -3rem;\\n  left: 0;\\n  bottom: 1rem;\\n  right: 0;\\n  overflow: auto; }\\n\\n.para {\\n  height: 18rem;\\n  min-height: 10rem;\\n  overflow: auto; }\\n\\n.panel {\\n  position: relative;\\n  top: -2rem; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Toefl } from '../../../../models/toefl.model';\nimport defaultToeflData from '../../../../models/default.data.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-speaking-exam',\n  templateUrl: './speaking-exam.component.html',\n  styleUrls: ['./speaking-exam.component.scss']\n})\nexport class SpeakingExamComponent implements OnInit {\n  currentDate = Date.now();\n  @Input() currentToefl: Toefl;\n  @Input() currentSpeakingStepper: boolean;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    console.log(this.currentToefl);\n  }\n    onSpeakingingProblem1() {\n      console.log('clicked');\n    }\n    onSpeakingingProblem2() {\n      console.log('clicked');\n    }\n    onSpeakingingProblem3() {\n      console.log('clicked');\n    }\n    onSpeakingingProblem4() {\n      console.log('clicked');\n    }\n    onSpeakingingProblem5() {\n      console.log('clicked');\n    }\n    onSpeakingingProblem6() {\n      console.log('clicked');\n    }\n}\n","module.exports = \"\\n  <!--Card-->\\n  <div class=\\\"areaDesc\\\">\\n      <div class=\\\"card card-cascade wider\\\">\\n          <!--Card image-->\\n          <div class=\\\"view gradient-card-header peach-gradient\\\">\\n              <h2 class=\\\"h2-responsive mb-2\\\">Toefle Exam No: {{ currentToefl.toeflNo }} Writing General Description </h2>\\n              <p class=\\\"\\\"><i class=\\\"fa fa-calendar\\\"></i> {{ currentDate | date:'fullDate' }}</p>\\n\\n          </div>\\n\\n          <div class=\\\"card-body text-center\\\">\\n              <div class=\\\"para\\\">\\n              <p class=\\\"card-text mr-2 ml-2\\\">\\n                {{ currentToefl.writingDesc }}\\n              </p>\\n            </div>\\n              <a [routerLink]=\\\"['/teacher/'+currentToefl.toeflNo+'/editReadingDesc']\\\"\\n                  class=\\\"orange-text mt-1 d-flex flex-row-reverse\\\">\\n                  <h5 class=\\\"waves-effect p-2\\\" mdbWavesEffect>Edit Description <i class=\\\"fa fa-chevron-right\\\"></i></h5>\\n              </a>\\n          </div>\\n\\n\\n              <div class=\\\"row panel\\\">\\n                <div class=\\\"mx-auto col-md-9\\\">\\n\\n                  <div class=\\\"card card-body\\\">\\n                    <div class=\\\"flex-row text-center\\\">\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                               (click)=\\\"onWritingProlem1()\\\"\\n                              mdbWavesEffect>Integrated Writing Problem\\n                      </button>\\n                      <button type=\\\"button\\\"\\n                              class=\\\"btn blue accent-3 btn-rounded waves-light\\\"\\n                             (click)=\\\"onWritingProlem2()\\\"\\n                              mdbWavesEffect>Indepence Writing Problem\\n                      </button>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n              </div>\\n      </div>\\n  </div>\\n\"","module.exports = \".areaDesc {\\n  position: relative;\\n  top: -3rem;\\n  left: 0;\\n  bottom: 1rem;\\n  right: 0;\\n  overflow: auto; }\\n\\n.para {\\n  height: 18rem;\\n  min-height: 10rem;\\n  overflow: auto; }\\n\\n.panel {\\n  position: relative;\\n  top: -2rem; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Toefl } from '../../../../models/toefl.model';\nimport defaultToeflData from '../../../../models/default.data.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-writing-exam',\n  templateUrl: './writing-exam.component.html',\n  styleUrls: ['./writing-exam.component.scss']\n})\nexport class WritingExamComponent implements OnInit {\n\n  currentDate = Date.now();\n  @Input() currentToefl: Toefl;\n  @Input() currentWritingStepper: boolean;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute) {}\n\n  ngOnInit() {\n\n    console.log(this.currentToefl);\n  }\n\n  onWritingProlem1() {\n    console.log(' writing problem 1 ....');\n  }\n  onWritingProlem2() {\n    console.log(' writing problem 1 ....');\n  }\n}\n","module.exports = \"\\n  <!-- Card -->\\n      <div class=\\\"card testimonial-card col-md-12 p-0 mt-auto\\\">\\n\\n        <!-- Bacground color -->\\n        <div class=\\\"card-up indigo lighten-1\\\">\\n        </div>\\n\\n        <!-- Avatar -->\\n        <div class=\\\"avatar mx-auto white\\\">\\n            <img  [src]=\\\"toefl.toeflImage\\\" alt=\\\"toefl.toeflImage\\\"\\n            class=\\\"rounded-circle image-responsive\\\">\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n            <!-- Name -->\\n            <h4 class=\\\"card-title\\\">Toefl Regitration NO: {{ toefl.toeflNo }}</h4>\\n            <hr>\\n            <!-- Quotation -->\\n            <div class=\\\"para\\\">\\n            <p><i class=\\\"fa fa-quote-left\\\"></i>\\n                {{ toefl.toeflDesc }}\\n            </p>\\n        </div>\\n        </div>\\n\\n           <!-- Card footer -->\\n    <div class=\\\"mdb-color lighten-3 text-center\\\">\\n        <ul class=\\\"list-unstyled list-inline font-small mt-3\\\">\\n            <li class=\\\"list-inline-item pr-2\\\">\\n                <button class=\\\"btn btn-default btn-sm\\\" (click)=\\\"onEditToeflRegistration()\\\" >Edit</button>\\n            </li>\\n            <li class=\\\"list-inline-item pr-2\\\">\\n                <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"onDeleteRegistration()\\\" >Delete</button>\\n            </li>\\n            <li class=\\\"list-inline-item pr-2\\\">\\n                <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"onMakeExam()\\\" >Make Exam</button>\\n            </li>\\n\\n        </ul>\\n    </div>\\n    <!-- Card footer -->\\n      <!-- Card -->\\n\"","module.exports = \".para {\\n  height: 32rem;\\n  min-height: 15rem;\\n  overflow: auto; }\\n\"","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Toefl } from './../../../../models/toefl.model';\nimport { RegisterToeflService } from '../../../teacher.service';\nimport { UtilityService } from '../../../../../Utility-shared/utility.service';\n\n\n@Component({\n  selector: 'app-regist-toefl-detail',\n  templateUrl: './regist-toefl-detail.component.html',\n  styleUrls: ['./regist-toefl-detail.component.scss']\n})\nexport class RegistToeflDetailComponent implements OnInit {\n\n  toefl: Toefl;           // toefl model 적용\n\n  audio = new Audio();   // Audio instance 발생시킴\n  toeflNo: number;\n  lastId: number;            // parameter 아이디로 route의 params정보로 부터 넘어오는 toefl No를 지정하기위한 변수\n\n  stepperCheck = false;\n\n  constructor(private registerToeflService: RegisterToeflService,\n              private utilityService: UtilityService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n\n    // Audio Play Service 중 toefl List, detail에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add,  edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n    this.route.params.subscribe((params: Params) => {\n\n                                  this.toeflNo = +params['id'];\n\n                                  console.log(this.toeflNo);\n                                  this.toefl = this.registerToeflService.getRegisterToefl(this.toeflNo);\n                                  this.utilityService.audioPlaySevice(this.toefl.toeflAudio, '1', false);\n    });\n\n    this.utilityService.stepperCheck.subscribe((stepperCheck: boolean) => {\n                this.stepperCheck = stepperCheck;\n                console.log(stepperCheck);\n    })\n  }\n\n  onEditToeflRegistration() {\n    this.router.navigate(['edit'], { relativeTo: this.route });\n  }\n  onMakeExam() {\n    this.utilityService.toeflListShowChanged.next(true);                    // toefl List 값이 바뀜을 알려준다\n    this.utilityService.teacherNavSideBarChanged.next(true);                // NavSideBar가 비뀜을 알려준다\n    this.router.navigate(['makeexam'], { relativeTo: this.route });         // makeExam으로 넘어간다\n  }\n  onDeleteRegistration() {\n    // registration Toefl을 지우기 위해서는 toefl No 가 아닌 this.id(index)값을 parameter로 넘겨준다\n  this.registerToeflService.deleteRegisterToeflExam(this.toeflNo);\n  this.router.navigate( ['../'], { relativeTo: this.route} );\n  }\n}\n\n","module.exports = \"\\n<div class=\\\"flex-md-row\\\">\\n\\n  <form [formGroup]=\\\"registerToeflForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n\\n      <div class=\\\"card col-md-12 p-0 mt-0\\\">\\n          <h3 class=\\\"card-header info-color white-text text-center mb-0\\\">Toefl Registration NO: {{ toeflNo }}</h3>\\n        <div class=\\\"card-body\\\">\\n\\n    <!-- toefl level input 정의  -->\\n              <div class=\\\"row mt-0\\\">\\n                  <div class=\\\"col-md-6 p-3 clearfix\\\">\\n                        <div class=\\\"md-form\\\" #select>\\n                            <mdb-select\\n                                      [options]=\\\"levelSelect\\\"\\n                                      placeholder=\\\"Choose Toefl Level\\\"\\n                                      formControlName=\\\"levelSelect\\\"\\n                                      class=\\\"colorful-select dropdown-primary\\\"\\n                            ></mdb-select>\\n                        </div>\\n                  </div>\\n              </div>\\n\\n    <!-- toefl Description input 정의 -->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                      <label for=\\\"toeflDesc\\\">Description</label>\\n                      <textarea type=\\\"text\\\"\\n                                name=\\\"toeflDesc\\\"\\n                                id=\\\"toeflDesc\\\"\\n                                formControlName=\\\"toeflDesc\\\"\\n                                class=\\\"form-control\\\"\\n                                rows=\\\"10\\\">\\n                      </textarea>\\n                  </div>\\n              </div>\\n\\n<br>\\n    <!-- toefl Preview Image File Input 처리 -->\\n              <div class=\\\"row\\\">\\n                    <!--이미지 선택 타이틀과 이미지 보여주기 카드 -->\\n                    <div class=\\\"card col-md-6 text-center\\\">\\n                        <h3 class=\\\"card-header primary-color white-text\\\">{{ imageTag }}</h3>\\n                        <div class=\\\"card-body\\\">\\n                                <div class=\\\"image-preview\\\" *ngIf=\\\"imagePath !== '' && imagePath\\\">\\n                                        <img [src]=\\\"imagePath\\\" *ngIf=\\\"imagePath !=='' && imagePath\\\">    \\n                                  </div>\\n                        </div>\\n                    </div>\\n\\n                    <!--오디오 선택 타이틀과 오디오 controls 보여주기-->\\n                    <div class=\\\"card col-md-6 text-center\\\">\\n                        <h3 class=\\\"card-header info-color white-text\\\">{{ audioTag }}</h3>\\n                        <div class=\\\"card-body mx-auto\\\">\\n                           <div class=\\\"row\\\">\\n                                <div class=\\\"audio-preview\\\" *ngIf=\\\"audioPath !== '' && audioPath\\\">\\n                                        <audio controls controlsList=\\\"nodownload\\\"\\n                                             [src]=\\\"audioPath\\\" *ngIf=\\\"audioPath !=='' && audioPath\\\">\\n                                        </audio>  \\n                                </div>\\n                           </div>\\n                          <div class=\\\"mt-2\\\">\\n\\n                          </div>\\n                        </div>\\n                    </div>\\n              </div>\\n    <!-- toefl 실제 Upload Image File Input 처리 -->\\n              <div class=\\\"row mt-3\\\">\\n                  <div class=\\\"col-md-6 text-center\\\"  >\\n \\n                        <input type=\\\"file\\\" \\n                                #imagePicker \\n                                accept=\\\"image/*\\\" \\n                                (change)=\\\"onImagePicked($event)\\\" \\n                                multiple>\\n                        <button class=\\\"btn btn-light-blue btn-sm btn-rounded waves-light\\\"\\n                                type=\\\"button\\\"\\n                                (click)=\\\"imagePicker.click()\\\">Upload Image\\n                        </button>\\n                  </div>   \\n                  <div class=\\\"col-md-6 text-center\\\" >\\n\\n                        <div>\\n                                <input type=\\\"file\\\" \\n                                        #audioPicker \\n                                        accept=\\\"audio/*\\\" \\n                                        (change)=\\\"onAudioPicked($event)\\\" \\n                                        multiple>\\n                                <button class=\\\"btn btn-light-blue btn-sm btn-rounded waves-light\\\"\\n                                        type=\\\"button\\\"\\n                                       (click)=\\\"audioPicker.click()\\\">Upload Audio\\n                                </button>\\n                        </div>     \\n                  </div>\\n              </div>\\n        </div>\\n        \\n    <!-- Card footer -->\\n        <div class=\\\"mdb-color lighten-3 text-center\\\">\\n            <ul class=\\\"list-unstyled list-inline font-small m-1\\\">\\n                <li class=\\\"list-inline-item pr-2\\\">\\n                    <button type=\\\"submit\\\"\\n                            class=\\\"btn btn-default waves-light btn-sm\\\"\\n                            [disabled]=\\\"!registerToeflForm.valid\\\"\\n                            mdbWavesEffect>\\n                            <i class=\\\"fa fa-magic mr-1\\\"></i> Save\\n                    </button>\\n\\n                </li>\\n                <li class=\\\"list-inline-item pr-2\\\">\\n                    <button\\n                            type=\\\"button\\\"\\n                            class=\\\"btn btn-danger waves-light btn-sm\\\"\\n                            (click)=\\\"onCancel()\\\"\\n                            mdbWavesEffect>Cancel<i class=\\\"fa fa-magic ml-1\\\"></i>\\n                    </button>\\n\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n<!-- 이부분은 훗날 toefl section부위를 코딩할때 사용할것임 ----- FormArray를 사용한 예제임\\n          <div class=\\\"row mt-5\\\">\\n              <div class=\\\"col-md-12\\\" formArrayName=\\\"imageSettingTimes\\\">\\n                <div class=\\\"row\\\"\\n                    *ngFor=\\\"let imageSettime of getControls(); let i=index\\\"\\n                    [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                          <input type=\\\"text\\\"\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"imageUrl\\\">\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                          <input type=\\\"number\\\"\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"imageShowTime\\\">\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                          <button type=\\\"button\\\"\\n                                  class=\\\"btn btn-danger\\\"\\n                                  (click)=\\\"onDeleteImageShowTime(i)\\\"\\n                                  >X</button>\\n                        </div>\\n                </div>\\n              </div>\\n          </div>\\n\\n  -->\\n\"","module.exports = \"textarea.ng-invalid {\\n  border: 1px solid red; }\\n\\n.fileBox {\\n  border: 1px solid blue; }\\n\\ninput[type=\\\"file\\\"] {\\n  visibility: hidden; }\\n\\n.image-preview {\\n  height: 5rem;\\n  margin: 1rem 0; }\\n\\n.image-preview img {\\n  height: 100%; }\\n\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\nimport { RegisterToeflService } from '../../../teacher.service';\nimport { UtilityService } from './../../../../../Utility-shared/utility.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport DefaultDataDesc from '../../../../models/default.data.model';\n@Component({\n  selector: 'app-regist-toefl-edit',\n  templateUrl: './regist-toefl-edit.component.html',\n  styleUrls: ['./regist-toefl-edit.component.scss']\n})\nexport class RegistToeflEditComponent implements OnInit, OnDestroy {\n\n  levelSelect: Array<any>;\n  makeExam: {desc: string}[];\n  audioPathChangedSubScription: Subscription;\n\n  upLoadImageFile: File = null;\n  upLoadAudioFile: File = null;\n  toeflFiles: Array<File> = [];\n  imageTag = null;\n  audioTag = null;\n\n  imagePath: any = '../../../../../../assets/img/toeflLogo.png';                        // html 내 preview에 image 보여주기위한 기본값\n  audioPath: any = '../../../../../../assets/audio/toeflAudioDefault.mp3';              // html 내 preview에 audio 보여주기위한 기본값\n\n  readings = [];\n  imageSettingTimes = [];\n\n  registerToeflForm: FormGroup;\n\n\n  toeflNo = 0;\n  editMode = false;\n  currentTime = new Date();\n  completionTag = 'not completed';\n\n  constructor(private registerToeflService: RegisterToeflService,\n              private utilityService: UtilityService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n\n    this.levelSelect = [\n                          { value: 'Beginner', label: 'Beginner' },\n                          { value: 'Basic', label: 'Basic' },\n                          { value: 'InterMediate', label: 'InterMediate' },\n                          { value: 'Advanced', label: 'Advanced' },\n                          { value: 'Most Cmparative', label: 'Most Cmparative' },\n                      ];\n\n\n    // Audio Play Service 중 toefl List에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add, detail, edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n    this.route.params.subscribe( ( params: Params ) => {\n                                  this.toeflNo = +params['id'];\n                                  this.editMode = params['id'] != null;\n                                  console.log('toefle edit 모드인지 아닌지 검사', this.editMode);\n                                  this.initForm();\n                                 // this.utilityService.audioPlaySevice(null, '2', false);\n\n    });\n\n    this.audioPathChangedSubScription = this.utilityService.audioPathChanged.subscribe((audioUrl: string) => {\n      console.log(audioUrl);\n      this.audioPath = audioUrl;\n    });\n\n  }\n\n  private initForm() {\n\n    // const toeflImageSettingTimes = new FormArray([]);\n\n    this.makeExam = DefaultDataDesc;\n\n    let levelSelect = '';\n    let toeflDesc = this.makeExam[0].desc;\n\n   console.log(toeflDesc);\n\n    console.log('ㅇ이지점 점검부위임');\n    console.log(this.editMode);\n    if (this.editMode) {\n      const registerToefl = this.registerToeflService.getRegisterToefl(this.toeflNo);\n      levelSelect = registerToefl.toeflLevel;\n      toeflDesc = registerToefl.toeflDesc;\n      this.imagePath = registerToefl.toeflImage;\n      this.audioPath = registerToefl.toeflAudio;\n\n      // 이미지 와 오디오 URL에서 filename만 추출하기\n\n      this.imageTag = this.imagePath.substring(this.imagePath.lastIndexOf('/') + 1);\n      this.audioTag = this.audioPath.substring(this.audioPath.lastIndexOf('/') + 1 );\n\n\n      // 앞으로 진행할 여러개의 이미즈를 upload할때 사용할 formarray 처리부분임 - 삭제하지 말것\n\n      // if (registerToefl['imageSettingTimes']) {\n      //   for (const imageSetTime of registerToefl.imageSettingTimes) {\n      //       toeflImageSettingTimes.push(\n      //         new FormGroup({\n      //           'imageUrl': new FormControl(imageSetTime.imageUrl),\n      //           'imageShowTime': new FormControl(imageSetTime.imageShowTime, [\n      //                                                                           Validators.required,\n      //                                                                           Validators.pattern(/^[1-9]+[0-9]*$/)\n      //                                             ])\n      //                       })\n      //       );\n      //   }\n      // }\n\n\n    } else {\n\n      this.toeflNo = this.registerToeflService.getLastToeflNo();\n\n      // this.registerToeflService.getToeflLastNo().subscribe( (lastToeflNo: number) => {\n      //   this.toeflNo = lastToeflNo;\n      // });\n\n      console.log('adding toefl no is ', this.toeflNo);\n      this.imageTag = 'Default Image Selected';\n      this.audioTag = 'Default Audio Selected';\n\n    }\n\n    // 이부분은 editmode 이든 newMode이든 무조건 실행하여야 한다\n\n      this.registerToeflForm = new FormGroup({\n          'levelSelect': new FormControl(levelSelect, Validators.required),\n          'toeflDesc': new FormControl(toeflDesc, Validators.required),\n          'imagePath': new FormControl(this.imagePath),\n          'audioPath': new FormControl(this.audioPath)\n\n          // 'imageSettingTimes': toeflImageSettingTimes\n\n          });\n\n  }\n\n  // 이부분의 method또한 여러장의 이미지를 가져올 imageSetttingTime에 필요한 method이고 html에서 controls부위가 error가 떨어지므로\n  // 반드시 이부위를 html에서 빼내 새로운 method로 만들었음 그러니 까먹지 말것 ㅋㅋㅋㅋ\n  // getControls() {\n  //   return (<FormArray>this.registerToeflForm.get('imageSettingTimes')).controls;\n  // }\n\n  // upload InputFile 처리 하는 방법중 imagefile 처리\n\n  // onHandleImageFileInput(file: FileList) {\n  //   this.upLoadImageFile = file.item(0);\n  //   console.log(this.upLoadImageFile);\n  //   const reader = new FileReader();\n  //   reader.onload = (event: any) => {\n  //     this.imagePath = event.target.result;\n                                          // 이 부분은 html문서의 이미지 preview에 사용할 id 값지정한것임\n  //   };\n  //   reader.readAsDataURL(this.upLoadImageFile);\n  //   console.log(this.imagePath);\n  //   console.log(this.upLoadImageFile);\n  //   this.imageTag = this.upLoadImageFile.name;\n\n  // }\n  // onHandleAudioFileInput(file: FileList) {\n  //   this.upLoadAudioFile = file.item(0);\n  //   console.log(this.upLoadAudioFile);\n  //   const reader = new FileReader();\n  //   reader.onload = (event: any) => {\n  //     this.audioPath = event.target.result;\n\n\n                                   // 이 부분은 html문서의 이미지 preview에 사용할 id 값지정한것임\n  //   };\n  //   reader.readAsDataURL(this.upLoadAudioFile);\n\n  //   console.log(this.audioPath);\n  //   console.log(this.upLoadAudioFile);\n  //   this.audioTag = this.upLoadAudioFile.name;\n  //   this.utilityService.getChangedAudioUrl(this.audioTag);\n\n  // }\n\n  onImagePicked(event: Event) {\n    this.upLoadImageFile = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePath = reader.result;\n    };\n    console.log(this.upLoadImageFile);\n    reader.readAsDataURL(this.upLoadImageFile);\n    this.imageTag = this.upLoadImageFile.name;\n\n  }\n\n  onAudioPicked(event: Event) {\n    this.upLoadAudioFile = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.audioPath = reader.result;\n    };\n    reader.readAsDataURL(this.upLoadAudioFile);\n    this.audioTag = this.upLoadAudioFile.name;\n\n  }\n\n\n  onSubmit() {\n\n    console.log('onSubmit process.....');\n\n    // 주의 fornData는 string만을 parameter값으로 할수 있으므로 반드시 date(), number는 toString을 변환하여 backend에 넘겨야함\n    const formData = new FormData();\n\n          formData.append('toeflDesc', this.registerToeflForm.value['toeflDesc']);\n          formData.append('toeflLevel', this.registerToeflForm.value['levelSelect']);\n          formData.append('toeflCompletionTag', this.completionTag);\n          formData.append('toeflImage', this.imagePath);\n          formData.append('toeflAudio', this.audioPath);\n          formData.append('readingDesc', this.makeExam[1].desc);                         // reading general desc\n          formData.append('listeningDesc', this.makeExam[2].desc);                       // listening general desc\n          formData.append('writingDesc', this.makeExam[3].desc);                         // writing general desc\n          formData.append('speakingDesc', this.makeExam[4].desc);                        // speaking general desc\n\n                    if (this.upLoadImageFile) {\n                      formData.append('toeflFiles', this.upLoadImageFile);\n                    }\n                    if (this.upLoadAudioFile) {\n                      formData.append('toeflFiles', this.upLoadAudioFile);\n                    }\n\n    if (this.editMode) {\n          this.registerToeflService.updateRegisterToeflExam(this.toeflNo, formData);\n\n        } else {\n          console.log('최종적으로 정해진 toefl no', this.toeflNo );\n          this.registerToeflService.addRegisterToeflExam(this.toeflNo, formData);\n        }\n     this.registerToeflForm.reset();\n      this.onCancel();\n  }\n\n\n  // onAddImageShowTime() {\n  //   (<FormArray>this.registerToeflForm.get('imageSettingTimes')).push(\n  //     new FormGroup({\n  //       'imageUrl': new FormControl(null, Validators.required),\n  //       'imageShowTime': new FormControl(null, [\n  //                                                 Validators.required,\n  //                                                 Validators.pattern(/^[1-9]+[0-9]*$/)\n  //                                               ])\n  //                   })\n  //   );\n  // }\n\n  onDeleteImageShowTime(index: number) {\n    (<FormArray>this.registerToeflForm.get('imageSettingTimes')).removeAt(index);\n  }\n\n  onCancel() {\n      this.router.navigate( ['../'], { relativeTo: this.route} );\n  }\n\nngOnDestroy() {\n  this.audioPathChangedSubScription.unsubscribe();\n\n}\n}\n","module.exports = \"\\n<a  #list\\n    [routerLink]=\\\"[toefl.toeflNo]\\\"\\n    routerLinkActive=\\\"active\\\"\\n    class=\\\"col-md-12 list-group-item waves-light clearfix\\\" mdbWavesEffect>\\n\\n    <div class=\\\"text-center\\\">\\n      <div *ngIf=\\\"soundOnOff\\\">\\n        <a class=\\\"btn-floating btn-lg peach-gradient waves-light\\\" mdbWavesEffect>\\n            <i class=\\\"list-group-item-heading\\\">{{ toefl.toeflNo }}</i>\\n        </a>\\n\\n        <button type=\\\"button\\\" class=\\\"pull-right btn-floating btn-sm blue-gradient waves-light\\\"\\n                  mdbWavesEffect\\n                  (click)=\\\"onSound(false)\\\"><i class=\\\"fa fa-volume-up\\\"></i></button>\\n      </div>\\n\\n      <div *ngIf=\\\"!soundOnOff\\\">\\n          <a class=\\\"btn-floating btn-lg peach-gradient waves-light\\\" mdbWavesEffect>\\n              <i class=\\\"list-group-item-heading\\\">{{ toefl.toeflNo }}</i>\\n          </a>\\n\\n          <button type=\\\"button\\\" class=\\\"pull-right btn-floating btn-sm blue-gradient waves-light\\\"\\n                    mdbWavesEffect\\n                    (click)=\\\"onSound(true)\\\"><i class=\\\"fa fa-volume-off\\\"></i></button>\\n      </div>\\n\\n                  <hr>\\n      <div class=\\\"avatar pull-left\\\">\\n          <img [src]=\\\"toefl.toeflImage\\\"\\n          class=\\\"rounded-circle img-responsive\\\"\\n          style=\\\"max-height: 50px\\\">\\n        </div>\\n\\n      <p class=\\\"list-group-item-text\\\"> {{ toefl.toeflDesc | shorten1:200 }} </p>\\n      <hr>\\n      <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 pt-2\\\">\\n        <small>{{ toefl.toeflCreatedDate | date:'fullDate'}}</small>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n       \\n      </div>\\n      <div class=\\\"col-md-4 pt-2\\\">\\n        <small>{{ toefl.toeflCompletionTag }}</small>\\n      </div>\\n    </div>\\n    </div>\\n  </a>\\n\"","module.exports = \"list {\\n  background-color: blue; }\\n\"","\nimport { Component, OnInit, Input, OnDestroy} from '@angular/core';\nimport { Toefl } from '../../../../../models/toefl.model';\nimport { Subscription } from 'rxjs/Subscription';\nimport { RegisterToeflService } from '../../../../teacher.service';\nimport { UtilityService } from './../../../../../../Utility-shared/utility.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-regist-item',\n  templateUrl: './regist-item.component.html',\n  styleUrls: ['./regist-item.component.scss']\n})\nexport class RegistItemComponent implements OnInit, OnDestroy {\n\n @Input() toefl: Toefl;\n @Input() index: number;\n  soundOnOff = false;\n  soundSubscription: Subscription;\n\n  constructor(private registerToeflService: RegisterToeflService,\n              private router: Router,\n              private utilityService: UtilityService) {}\n  ngOnInit() {\n\n  this.router.navigated = true;\n  this.soundSubscription = this.utilityService.soundButtonChanged\n                           .subscribe((soundStatus: boolean) => {\n                                      this.soundOnOff = soundStatus;\n                                      });\n  }\n\n  onSound(soundCheck: boolean) {\n\n    // this.toefl.toefAudioㄴ는 실제 array안에들어있는 toefl Audio URl 이다\n    // toeflList에서 소리가 들리는지를 확인하기 위한값으로 toefl List에서 소리가 시작되면\n    // 현재 soundCheck에서 소리가 진행하는지 여부를 확인하는 버튼\n    // Audio Play Service 중 toefl List에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add, detail, edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n\n    if (soundCheck) {\n      this.utilityService.audioPlaySevice(this.toefl.toeflAudio, '2', soundCheck);\n    } else {\n      this.utilityService.audioPlaySevice(this.toefl.toeflAudio, '1', soundCheck);\n    }\n  }\n\n  ngOnDestroy() {\n    this.soundSubscription.unsubscribe();\n  }\n}\n","module.exports = \"<div *ngIf=\\\"!toeflListHide\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 pt-0 text-center\\\">\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"onNewToeflRegistration()\\\"  >\\n                    New Toefl Registion\\n                  </button>\\n            </div>\\n        </div>\\n    <hr>\\n\\n        <div *ngIf=\\\"toefls.length > 2\\\" class=\\\"row scrollbar scrollbar-morpheus-den\\\">\\n            <div class=\\\"mt-auto col-md-12\\\">\\n                <app-regist-item\\n                                *ngFor=\\\"let toeflElement of toefls.slice().reverse(); let i = index\\\"\\n                                [toefl]=\\\"toeflElement\\\"\\n                                [index]=\\\"i\\\">\\n                </app-regist-item>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"toefls.length <= 2\\\">\\n              <div class=\\\"mt-auto col-md-12\\\">\\n                  <app-regist-item\\n                                  *ngFor=\\\"let toeflElement of toefls.slice().reverse(); let i = index\\\"\\n                                  [toefl]=\\\"toeflElement\\\"\\n                                  [index]=\\\"i\\\">\\n                  </app-regist-item>\\n              </div>\\n        </div>\\n</div>\\n\"","module.exports = \".scrollbar {\\n  height: 45rem;\\n  background: #fff;\\n  overflow-y: scroll; }\\n\\n.scrollbar-morpheus-den::-webkit-scrollbar-track {\\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\\n  background-color: #F5F5F5;\\n  border-radius: 10px; }\\n\\n.scrollbar-morpheus-den::-webkit-scrollbar {\\n  width: 12px;\\n  background-color: #F5F5F5; }\\n\\n.scrollbar-morpheus-den::-webkit-scrollbar-thumb {\\n  border-radius: 10px;\\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\\n  background-image: linear-gradient(to top, #30cfd0 0%, #330867 100%); }\\n\"","\nimport { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { RegisterToeflService } from '../../../teacher.service';\n\nimport { Toefl } from '../../../../models/toefl.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { UtilityService } from './../../../../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-regist-toefl-list',\n  templateUrl: './regist-toefl-list.component.html',\n  styleUrls: ['./regist-toefl-list.component.scss']\n})\nexport class RegistToeflListComponent implements OnInit, OnDestroy {\n\n  toefls: Toefl[] = [];\n  emptyCehcked = false;\n  toeflListHide = false;\n\n  toeflListSubscription: Subscription;\n  toeflListHideSubscription: Subscription;\n  utilityServiceSubscription: Subscription;\n\n  constructor(private registerToeflService: RegisterToeflService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private utilityService: UtilityService\n             ) { }\n\n  ngOnInit() {\n\n    this.toeflListHideSubscription = this.utilityService.toeflListShowChanged\n                                     .subscribe((toeflListHIdeStatus: boolean) => {\n                                       this.toeflListHide = toeflListHIdeStatus;\n                                     });\n\n    this.toeflListSubscription = this.registerToeflService.registerToeflExamChanged\n                                     .subscribe((recentToefls: Toefl[]) => {\n                                       this.toefls = recentToefls;\n                                       console.log('최신 토플명단', this.toefls);\n                                      });\n\n    this.utilityServiceSubscription = this.utilityService.stepperCheck.\n                                      subscribe((stepCheckStatus: boolean) => {\n                                                  this.toeflListHide = stepCheckStatus;\n                                                  console.log(this.toeflListHide);\n                                      });\n\n    this.toefls = this.registerToeflService.getRegisterToefls();   // 변경된 최신 토플 시험을 가져옴\n  }\n\n\n\n  onNewToeflRegistration() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {\n    this.toeflListSubscription.unsubscribe();\n    this.toeflListHideSubscription.unsubscribe();\n    this.utilityServiceSubscription.unsubscribe();\n  }\n}\n","module.exports = \"\\n\\n<div class=\\\"row mt-2\\\">\\n       \\n        <div class=\\\"col-md-12 mx-auto\\\">\\n            <div class=\\\"card testimonial-card\\\">\\n                <div class=\\\"card-up indigo lighten-1\\\">\\n                </div>\\n    \\n                <div class=\\\"avatar mx-auto\\\"><img src=\\\"./../../../../../assets/img/toeflLogo.png\\\" class=\\\"rounded-circle\\\">\\n                </div>    \\n                <div class=\\\"card-body\\\">\\n                 \\n                    <h4 class=\\\"card-title\\\">Toefl Registration</h4>\\n                    <hr>\\n                    <p><i class=\\\"fa fa-quote-left\\\"></i> Please select a Toefl Exam Number.....</p>\\n                </div>\\n    \\n            </div>\\n    \\n        </div>\\n    \\n    </div>\\n    <!--Grid row-->\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-toefl-start',\n  templateUrl: './register-toefl-start.component.html',\n  styleUrls: ['./register-toefl-start.component.scss']\n})\nexport class RegisterToeflStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<ul class=\\\"stepper stepper-horizontal m-0\\\">\\n    <li *ngIf=\\\"currentStep.home\\\" class=\\\"completed\\\">\\n        <a type=\\\"button\\\" (click)=\\\"onMainHome()\\\">\\n\\n            <span class=\\\"circle\\\">1</span>\\n            <span class=\\\"label\\\">Toefl List</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.toeflList\\\" class=\\\"completed\\\">\\n        <a type=\\\"button\\\" (click)=\\\"onToelfList()\\\">\\n\\n            <span class=\\\"circle\\\">2</span>\\n            <span class=\\\"label\\\">Toefl No. {{currentStep.toeflNo}}</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.readingArea\\\" class=\\\"completed\\\">\\n        <a type=\\\"button\\\" (click)=\\\"onToelfMakeExam()\\\">\\n\\n            <span class=\\\"circle\\\">3</span>\\n            <span class=\\\"label\\\">Reading Areas</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningArea\\\" class=\\\"completed\\\">\\n        <a href=\\\"#!\\\">\\n            <span class=\\\"circle\\\">3</span>\\n            <span class=\\\"label\\\">Listening Areas</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.writingArea\\\" class=\\\"completed\\\">\\n        <a href=\\\"#!\\\">\\n            <span class=\\\"circle\\\">3</span>\\n            <span class=\\\"label\\\">Writing Areas</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.speakingArea\\\" class=\\\"completed\\\">\\n        <a href=\\\"#!\\\">\\n            <span class=\\\"circle\\\">3</span>\\n            <span class=\\\"label\\\">Speaking Areas</span>\\n        </a>\\n    </li>\\n\\n    <li *ngIf=\\\"currentStep.readingSection1\\\" class=\\\"completed\\\">\\n        <a type=\\\"button\\\" (click)=\\\"onToelfMakeExamSection1()\\\">\\n            <span class=\\\"circle\\\">4</span>\\n            <span class=\\\"label\\\">Section 1</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.readingSection2\\\" class=\\\"completed\\\">\\n        <a type=\\\"button\\\" (click)=\\\"onToelfMakeExamSection2()\\\">\\n            <span class=\\\"circle\\\">5</span>\\n            <span class=\\\"label\\\">Section 2</span>\\n        </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.readingSection3\\\" class=\\\"completed\\\">\\n            <a type=\\\"button\\\" (click)=\\\"onToelfMakeExamSection3()\\\">\\n                <span class=\\\"circle\\\">6</span>\\n                <span class=\\\"label\\\">Section 3</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.readingSection4\\\" class=\\\"completed\\\">\\n            <a type=\\\"button\\\" (click)=\\\"onToelfMakeExamSection4()\\\">\\n                <span class=\\\"circle\\\">7</span>\\n                <span class=\\\"label\\\">Section 4</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningSection1\\\" class=\\\"completed\\\">\\n            <a href=\\\"#!\\\">\\n                <span class=\\\"circle\\\">4</span>\\n                <span class=\\\"label\\\">Section 1</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningSection2\\\" class=\\\"completed\\\">\\n            <a href=\\\"#!\\\">\\n                <span class=\\\"circle\\\">5</span>\\n                <span class=\\\"label\\\">Section 2</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningSection3\\\" class=\\\"completed\\\">\\n            <a href=\\\"#!\\\">\\n                <span class=\\\"circle\\\">6</span>\\n                <span class=\\\"label\\\">Section 3</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningSection4\\\" class=\\\"completed\\\">\\n            <a href=\\\"#!\\\">\\n                <span class=\\\"circle\\\">7</span>\\n                <span class=\\\"label\\\">Section 4</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningSection5\\\" class=\\\"completed\\\">\\n            <a href=\\\"#!\\\">\\n                <span class=\\\"circle\\\">8</span>\\n                <span class=\\\"label\\\">Section 5</span>\\n            </a>\\n    </li>\\n    <li *ngIf=\\\"currentStep.listeningSection6\\\" class=\\\"completed\\\">\\n            <a href=\\\"#!\\\">\\n                <span class=\\\"circle\\\">9</span>\\n                <span class=\\\"label\\\">Section 6</span>\\n            </a>\\n    </li>\\n</ul>\\n\"","module.exports = \".stepper {\\n  top: -2rem;\\n  left: -1rem; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StepperModel } from './stepper.model';\nimport { UtilityService } from '../../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss']\n})\nexport class StepperComponent implements OnInit {\n\n  @Input() currentStep: StepperModel;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private utilityService: UtilityService) { }\n\n  ngOnInit() {\n\n    console.log(this.currentStep);\n    console.log(this.currentStep.toeflNo);\n\n  }\n\n  onMainHome() {\n\n    this.router.navigate(['/teacher']);\n  }\n  onToelfList() {\n    console.log('toeflList stepper clicked');\n    console.log(this.currentStep.toeflNo);\n\n    this.router.navigate(['/teacher/' + this.currentStep.toeflNo]);\n\n  }\n\n  onToelfMakeExam() {\n    console.log('Reading Area stepper clicked');\n    console.log(this.currentStep.toeflNo);\n    this.router.navigate(['/teacher/' + this.currentStep.toeflNo + '/makeexam']);\n\n  }\n\n  onToelfMakeExamSection1(){\n    console.log('Reading Area stepper clicked');\n    console.log(this.currentStep.toeflNo);\n    this.router.navigate(['/teacher/' + this.currentStep.toeflNo + '/makeexam/readingSection1']);\n  }\n\n  onToelfMakeExamSection2(){\n    console.log('Reading Area stepper clicked');\n    console.log(this.currentStep.toeflNo);\n    this.router.navigate(['/teacher/' + this.currentStep.toeflNo + '/makeexam/readingSection2']);\n  }\n\n  onToelfMakeExamSection3(){\n    console.log('Reading Area stepper clicked');\n    console.log(this.currentStep.toeflNo);\n    this.router.navigate(['/teacher/' + this.currentStep.toeflNo + '/makeexam/readingSection3']);\n  }\n\n  onToelfMakeExamSection4(){\n    console.log('Reading Area stepper clicked');\n    console.log(this.currentStep.toeflNo);\n    this.router.navigate(['/teacher/' + this.currentStep.toeflNo + '/makeexam/readingSection4']);\n  }\n\n}\n","\nexport class StepperModel {\n  constructor(\n                public home? : boolean,\n                public toeflNo? : number,\n                public toeflList? : boolean,\n                public readingArea? : boolean,\n                public listeningArea? : boolean,\n                public writingArea? : boolean,\n                public speakingArea? : boolean,\n              \n                public readingSection1? : boolean,\n                public readingSection2? : boolean,\n                public readingSection3? : boolean,\n                public readingSection4? : boolean,\n\n                public listeningSection1? : boolean,\n                public listeningSection2? : boolean,\n                public listeningSection3? : boolean,\n                public listeningSection4? : boolean,\n                public listeningSection5? : boolean,\n                public listeningSection6? : boolean,\n\n                public writingSection1? : boolean,\n                public writingSection2? : boolean,\n\n                public speakingSection1? : boolean,\n                public speakingSection2? : boolean,\n                public speakingSection3? : boolean,\n                public speakingSection4? : boolean,\n                public speakingSection5? : boolean,\n                public speakingSection6? : boolean,\n  ) {}\n}\n","module.exports = \"<!-- Navbar -->\\n  <mdb-navbar SideClass=\\\"navbar navbar-light blue fixed-top navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav\\\" [containerInside]=\\\"false\\\">\\n\\n    <!-- SideNav slide-out button -->\\n        <navlinks class=\\\"navbar-container\\\">\\n            <div class=\\\"float-left\\\">\\n                <a (click)=\\\"onToggleSideNav()\\\" class=\\\"button-collapse hidden-nav-button-collapse\\\">\\n                    <i class=\\\"fa fa-bars\\\"></i>\\n                </a>\\n            </div>\\n        </navlinks>\\n\\n        <logo>\\n                <div class=\\\"breadcrumbs breadcrumbs-hidden-nav breadcrumb-dn mr-auto\\\">\\n                        <p> 2018.6.9</p>\\n                    </div>\\n\\n\\n                  <div class=\\\"ml-auto\\\">\\n                      <h5>Teacher's Board</h5>\\n                  </div>\\n        </logo>\\n\\n        <navlinks>\\n            <ul class=\\\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav ie-hidden-double-nav\\\">\\n\\n                <li class=\\\"nav-item\\\">\\n\\n                    <a class=\\\"nav-link waves-light white-text\\\"\\n                    (click)=\\\"goBackHome()\\\"\\n                    mdbWavesEffect>\\n                        <i class=\\\"fa home-o\\\"></i>\\n                        <span class=\\\"clearfix d-none d-sm-inline-block\\\">Home</span>\\n                    </a>\\n                </li>\\n\\n                <li  class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link waves-light white-text\\\" mdbWavesEffect>\\n                        <i class=\\\"fa fa-envelope-o\\\"></i>\\n                        <span class=\\\"clearfix d-none d-sm-inline-block\\\">Contact</span>\\n                    </a>\\n                </li>\\n\\n                <li class=\\\"nav-item dropdown btn-group\\\" dropdown>\\n                    <a dropdownToggle type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light white-text\\\" mdbWavesEffect>\\n                        <i class=\\\"fa fa-user-circle-o\\\"></i>\\n                        {{ this.profileInfo.name }}\\n                    </a>\\n                    <div class=\\\"dropdown-menu dropdown-primary dropdown-menu-right\\\" role=\\\"menu\\\">\\n                        <a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-circle-o\\\"></i>Edit</a>\\n                        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/logout']\\\">LogOut</a>\\n                    </div>\\n                </li>\\n\\n            </ul>\\n        </navlinks>\\n  </mdb-navbar>\\n\\n\"","module.exports = \"\"","\nimport { Component, EventEmitter, Output, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UtilityService } from '../../../../Utility-shared/utility.service';\nimport { MainNavModel } from './../../../../Utility-shared/mainNavChange.model';\nimport { ProfileInfo } from '../../../../auth/profile.model';\nimport { AuthService } from '../../../../auth/auth.service';\n\n@Component({\n  selector: 'app-teacher-nav-header',\n  templateUrl: './teacher-nav-header.component.html',\n  styleUrls: ['./teacher-nav-header.component.scss']\n})\n\nexport class TeacherNavHeaderComponent implements OnInit {\n\n  mainNavModel: MainNavModel;\n  profileInfo: ProfileInfo;\n\n  @Output() sidenavToggle1 = new EventEmitter<void>();\n\n  constructor(private router: Router,\n              private authService: AuthService,\n              private utilityService: UtilityService) { }\n\n  ngOnInit() {\n      this.profileInfo = this.authService.getProfileInfo();\n  }\n\n  goBackHome() {\n\n    this.utilityService.audioPlaySevice('', '0', false);           // audio를 초기화한다\n    this.mainNavModel = new MainNavModel(false, false, true);      // 앞에것은 showNav값 이고 뒤에것은 logout이 아닌경우 즉 home button click시\n    this.utilityService.mainNavChanged.next(this.mainNavModel);    // main 화면 navigation활성화\n    this.router.navigate(['/']);\n  }\n\n  onToggleSideNav() {\n    console.log('side button clicked');\n    this.sidenavToggle1.emit();\n  }\n}\n","module.exports = \"\\n        <logo>\\n          \\n            <div class=\\\"logo-wrapper waves-light pl-4\\\">                                       \\n                                    <img src=\\\"../../../assets/img/toeflLogo.png\\\"\\n                                    class=\\\"rounded-circle img-fluid flex-center\\\"\\n                                    style=\\\"max-height: 90px\\\">       \\n            </div>\\n            \\n    </logo>\\n\\n        <!-- Side navigation links -->\\n        \\n            <ul class=\\\"collapsible collapsible-accordion\\\">\\n                <mdb-squeezebox [multiple]=\\\"false\\\" aria-multiselectable=\\\"false\\\">\\n\\n                    <!-- Collapsible link -->\\n                    <mdb-item>\\n                        <mdb-item-head mdbWavesEffect>\\n                            <i class=\\\"fa fa-chevron-right\\\"></i> Collapsible menu</mdb-item-head>\\n                        <mdb-item-body>\\n                            <ul>\\n                                <li>\\n                                    <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 1</a>\\n                                </li>\\n                                <li>\\n                                    <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 2</a>\\n                                </li>\\n                            </ul>\\n                        </mdb-item-body>\\n                    </mdb-item>\\n\\n                    <!-- Simple link -->\\n                    <mdb-item class=\\\"no-collase\\\">\\n                        <mdb-item-head mdbWavesEffect>\\n                            <i class=\\\"fa fa-hand-pointer-o\\\"></i> Simple link</mdb-item-head>\\n                        <mdb-item-body></mdb-item-body>\\n                    </mdb-item>\\n\\n                    <!-- Collapsible link -->\\n                    <mdb-item>\\n                        <mdb-item-head mdbWavesEffect>\\n                            <i class=\\\"fa fa-eye\\\"></i> Collapsible menu 2</mdb-item-head>\\n                        <mdb-item-body>\\n                            <ul>\\n                                <li>\\n                                    <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 1</a>\\n                                </li>\\n                                <li>\\n                                    <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 2</a>\\n                                </li>\\n                            </ul>\\n                        </mdb-item-body>\\n                    </mdb-item>\\n\\n                    <!-- Simple link -->\\n                    <mdb-item class=\\\"no-collase\\\">\\n                        <mdb-item-head mdbWavesEffect>\\n                            <i class=\\\"fa fa-diamond\\\">\\n                                <a></a>\\n                            </i> Logout </mdb-item-head>\\n                        <mdb-item-body></mdb-item-body>\\n                    </mdb-item>\\n\\n                </mdb-squeezebox>\\n            </ul>\\n       \\n        <!--/. Side navigation links -->\\n   \\n    <div class=\\\"sidenav-bg mask-strong\\\"></div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teacher-sidebar',\n  templateUrl: './teacher-sidebar.component.html',\n  styleUrls: ['./teacher-sidebar.component.scss']\n})\nexport class TeacherSidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../../auth/auth.guard';\nimport { NotFoundComponent } from '../not-found/not-found.component';\n\nimport { RegisterToeflComponent } from './register-toefl.component';\nimport { RegisterToeflStartComponent } from './register-toefl/register-toefl-start/register-toefl-start.component';\nimport { RegistToeflDetailComponent } from './register-toefl/regist-toefl-exam/regist-toefl-detail/regist-toefl-detail.component';\nimport { RegistToeflEditComponent } from '../teacher/register-toefl/regist-toefl-exam/regist-toefl-edit/regist-toefl-edit.component';\n\nimport { MakeExamStartComponent } from './register-toefl/make-toefl-exam/make-exam-start/make-exam-start.component';\n\nimport { ReadingExamComponent } from './register-toefl/make-toefl-exam/reading-exam/reading-exam.component';\nimport { EditReadingDescComponent } from './register-toefl/make-toefl-exam/reading-exam/edit-reading-desc/edit-reading-desc.component';\nimport { ReadingSection1Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section1/reading-section1.component';\nimport { ReadingSection2Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section2/reading-section2.component';\nimport { ReadingSection3Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section3/reading-section3.component';\nimport { ReadingSection4Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section4/reading-section4.component';\n\nimport { ListeningExamComponent } from './register-toefl/make-toefl-exam/listening-exam/listening-exam.component';\n\nconst teacherRoutes: Routes = [\n  { path: 'teacher', component: RegisterToeflComponent, children: [\n      { path: '', component: RegisterToeflStartComponent },\n      { path: 'new', component: RegistToeflEditComponent},       // 만일 순서를 지키지 않으면 params 에러가 발생할수 있음\n      { path: ':id', component: RegistToeflDetailComponent },\n      { path: ':id/edit', component: RegistToeflEditComponent},\n\n      { path: ':id/makeexam', component: MakeExamStartComponent},\n\n      { path: ':id/editReadingDesc', component: EditReadingDescComponent},\n      { path: ':id/makeexam/reading', component: ReadingExamComponent},\n      { path: ':id/makeexam/readingSection1', component: ReadingSection1Component},\n      { path: ':id/makeexam/readingSection2', component: ReadingSection2Component},\n      { path: ':id/makeexam/readingSection3', component: ReadingSection3Component},\n      { path: ':id/makeexam/readingSection4', component: ReadingSection4Component}\n\n\n      // { path: 'registertoefl', component: RegisterToeflComponent, canActivate: [AuthGuard] }\n  ]\n}\n];\n\n@NgModule({\n  imports: [\n            RouterModule.forChild(teacherRoutes)\n  ],\n  exports: [RouterModule],\n  providers: [ AuthGuard ],\n\n})\nexport class TeacherRoutingModule {}\n\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\nimport { MDBSpinningPreloader } from 'ng-uikit-pro-standard';\nimport { TeacherRoutingModule } from './teacher-routing.module';\n\nimport { AuthGuard } from '../../auth/auth.guard';\n\nimport { RegisterToeflStartComponent } from './register-toefl/register-toefl-start/register-toefl-start.component';\nimport { RegisterToeflComponent } from './register-toefl.component';\nimport { RegistToeflListComponent } from './register-toefl/regist-toefl-exam/regist-toefl-list/regist-toefl-list.component';\nimport { RegistToeflDetailComponent } from './register-toefl/regist-toefl-exam/regist-toefl-detail/regist-toefl-detail.component';\nimport { RegistItemComponent } from './register-toefl/regist-toefl-exam/regist-toefl-list/regist-item/regist-item.component';\nimport { RegistToeflEditComponent } from './register-toefl/regist-toefl-exam/regist-toefl-edit/regist-toefl-edit.component';\nimport { RegisterToeflService } from './teacher.service';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { TeacherNavHeaderComponent } from './teacher-navigation/teacher-nav-header/teacher-nav-header.component';\nimport { TeacherSidebarComponent } from './teacher-navigation/teacher-sidebar/teacher-sidebar.component';\n\n\nimport { MakeExamStartComponent } from './register-toefl/make-toefl-exam/make-exam-start/make-exam-start.component';\nimport { ListeningExamComponent } from './register-toefl/make-toefl-exam/listening-exam/listening-exam.component';\nimport { WritingExamComponent } from './register-toefl/make-toefl-exam/writing-exam/writing-exam.component';\nimport { SpeakingExamComponent } from './register-toefl/make-toefl-exam/speaking-exam/speaking-exam.component';\nimport { MakeExamService } from '../teacher/register-toefl/make-toefl-exam/makeexam.service';\n\nimport { ReadingExamComponent } from './register-toefl/make-toefl-exam/reading-exam/reading-exam.component';\nimport { EditReadingDescComponent } from './register-toefl/make-toefl-exam/reading-exam/edit-reading-desc/edit-reading-desc.component';\nimport { ReadingSection1Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section1/reading-section1.component';\nimport { ReadingSection2Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section2/reading-section2.component';\nimport { ReadingSection3Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section3/reading-section3.component';\nimport { ReadingSection4Component } from './register-toefl/make-toefl-exam/reading-exam/reading-section4/reading-section4.component';\nimport { ReadingProblemsComponent } from './register-toefl/make-toefl-exam/reading-exam/reading-problems/reading-problems.component';\nimport { ReadingService } from './register-toefl/make-toefl-exam/reading-exam/reading.service';\n\nimport { TonyEditorComponent } from '../../tony-editorv1.0.0/tony-editor/tony-editor.component';\nimport { TonyEditorToolbarComponent } from '../../tony-editorv1.0.0/tony-editor.toolbar/tony-editor.toolbar.component';\n\nimport { ExecutableCommandService } from '../../tony-editorv1.0.0/services/executable-command.service';\nimport { StepperComponent } from './stepper/stepper.component';\n\nimport { ShortenPipe1 } from '../../shared/pipe-collection/shorten.pipe.1';\n\n@NgModule({\n  declarations: [\n    RegisterToeflComponent,\n    RegistToeflListComponent,\n    RegistToeflDetailComponent,\n    RegistItemComponent,\n    RegisterToeflStartComponent,\n    RegistToeflEditComponent,\n    MakeExamStartComponent,\n    TeacherNavHeaderComponent,\n    TeacherSidebarComponent,\n    ReadingExamComponent,\n    ListeningExamComponent,\n    WritingExamComponent,\n    SpeakingExamComponent,\n    EditReadingDescComponent,\n    ReadingSection1Component,\n    ReadingSection2Component,\n    ReadingSection3Component,\n    ReadingSection4Component,\n    TonyEditorComponent,\n    TonyEditorToolbarComponent,\n    ReadingProblemsComponent,\n    StepperComponent,\n    ShortenPipe1\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MDBBootstrapModulesPro.forRoot(),\n    TeacherRoutingModule\n  ],\n  providers: [ RegisterToeflService, MakeExamService, ExecutableCommandService, ReadingService ]\n})\nexport class ToeflTeacherModule {}\n","import { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { Toefl } from '../models/toefl.model';\nimport { Reading } from '../models/reading.model';\nimport { ImageSettingTime } from '../models/image.model';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport { UtilityService } from '../../Utility-shared/utility.service';\nimport { ProfileInfo } from '../../auth/profile.model';\n\n@Injectable()\nexport class RegisterToeflService {\n\n  registerToeflExamChanged = new Subject<Toefl[]>();\n\n  urlConfig = GlobalConstantShare.httpUrl;    // 실제 url이 있는 위치\n  profileInfo: ProfileInfo;\n  lastToeflNo = 0;\n\n  private date = new Date();\n  private toefls: Toefl[] = [];\n\n  constructor(private http: HttpClient,\n              private utilityService: UtilityService) {}\n\n  getRegisterToefls() {\n\n    // 서버로 부터 모든 데이타를 가져오기 위해서는 반드시 현재 login한 userId와 token이 필요하다\n\n    const token = localStorage.getItem('token');\n\n    this.http.get<{ message: string, toefls: Toefl[] }>(this.urlConfig + '/registerExam/' + '?token=' + token)\n                  .subscribe( (registerToefls) => {\n                    console.log(registerToefls);\n                    this.toefls = [];\n                    for (const toeflItem of registerToefls.toefls) {\n                      this.toefls.push(toeflItem); }\n                    this.registerToeflExamChanged.next([...this.toefls]);\n                                                                        // for looping으로 개별적이 toeflItem을 push로 저장해주어야 한다\n              },\n              (error) => console.log(error)                              // 나중에 이 error는 alert로 처리한다\n              );\n              console.log('이미등록된 토플명단', this.toefls);\n\n  return [...this.toefls];\n  }\n\n// 가장 최신 register toefl exam을 가져올때 사용\n  getRegisterToefl(toeflNo: number) {\n    this.registerToeflExamChanged.next([...this.toefls]);\n      // 이것을 제거하면 registerExam의 listView가 업데이트가 안되고 error가 발생함\n\n    for (let i = 0; i <= this.toefls.length; i++) {\n      if (this.toefls[i].toeflNo === toeflNo) {\n         return this.toefls[i];\n      }\n    }\n  }\n\n  /* 만일의 경우를 대비하여 toefl Last No를 가져오는 방법을 http.map.subscribe를\n     사용하여 코등을 해두었다 이방법을 사용하면 toefl record 추가시 확실히 toefl의 가장 최근 번호를\n     가져올수 있지만 performance가 떨어지는 단점이 있다. 그러므로 되도록 사용하지 말고\n     기본의 this.toefls을 통해 toefl last no를  가져오는 방법이 최적이다\n  */\n\n  getLastToeflNo() {\n    return this.lastToeflNo = this.toefls.slice()[this.toefls.length - 1].toeflNo + 1;\n  }\n\n  // getToeflLastNo() {\n\n  //   return this.http.get<{ message: string, toefls: Toefl[], lastToeflNo: number }>(this.urlConfig + '/showexam')\n  //           .map ( ( data ) => {\n  //             this.lastToeflNo = data.lastToeflNo + 1;\n  //             return this.lastToeflNo;\n  //           });\n  // }\n\n\n  // toefllist 추가 기능\n  addRegisterToeflExam(toeflNo: number, formData: FormData) {\n\n    // 일단 onSubmit을 진행된 formData를 받아서 곧바로 toekn과 함께 posting을 server에 요청한다\n    // 그런후 서버로 부터오는 결과가 error가 없으면 그결과를 res,json() object로 unwrapping 한다\n    // 이제 front 쪽 toefls array에 결과물인 data.toefl을 push한후 slice를 통해 최신 toelflist를 생성한다\n    // Audio Play Service 중 toefl List에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add, detail, edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n\n    const token = localStorage.getItem('token');\n\n    // tslint:disable-next-line:max-line-length\n    this.http.post<{ message: string, toefl: Toefl } >(this.urlConfig + '/registerExam/' + toeflNo + '?token=' + token, formData)\n                    .subscribe( (savedToefl ) => {\n                      console.log('추가되기 전 토플명단', this.toefls);\n                      console.log('새로 추가된 토플시험', savedToefl);\n                      this.toefls.push(savedToefl.toefl);\n                      console.log('추가되고 난 후 토플명단', this.toefls);\n                      this.registerToeflExamChanged.next([...this.toefls]);\n                      //  this.utilityService.audioPlaySevice(savedToefl.toefl.toeflAudio, '3', false);\n\n                    },\n                    (error) => console.log(error)              // 나중에 이 error는 alert로 처리한다\n                  );\n  }\n\n  // toefl item edit후 서버연결후 최신 toefllist로 만드는 method\n\n  updateRegisterToeflExam(toeflNo: number, formData: FormData) {\n\n    // add와 마찬가지로 onSubmit으로 부터 받은 데이타를 formData로 받아서 token과 같이 patch한다.\n    // 그결과물을 받아 res.json()으로 upwrapping한후 toefllist에 index 값으로 update한다\n    // Audio Play Service 중 toefl List에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add, detail, edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n\n    const token = localStorage.getItem('token');\n\n    // tslint:disable-next-line:max-line-length\n    this.http.patch<{ message: string, toefl: Toefl } >(this.urlConfig + '/registerExam/' + toeflNo + '?token=' + token, formData)\n                    .subscribe(( updatedToefl ) => {\n\n                      console.log( '새로 수정된 토플시험', updatedToefl.toefl);\n                      for(let i = 0; i < this.toefls.length; i++) {\n                        if (this.toefls[i].toeflNo === updatedToefl.toefl.toeflNo) {\n                          this.toefls[i] = updatedToefl.toefl;\n                        }\n                      }\n                      this.registerToeflExamChanged.next([...this.toefls]);\n                      this.utilityService.audioPlaySevice(updatedToefl.toefl.toeflAudio, '3', false);\n                    },\n                  (error) => console.log(error)\n                  );\n  }\n\n  // toefl list 삭제 기능\n\n  deleteRegisterToeflExam(toeflNo: number) {\n\n    // Registration Toefl을 제거할때는 반드시 toeflNo가 필요하다\n    // 하지만 front toeflList에서는 index number가 필요하므로 항상 1을 빼고 추가하는작없을 잊어버리면 안된다\n\n    const token = localStorage.getItem('token');\n\n    this.http.delete<{ message: string, toefl: Toefl}>(this.urlConfig + '/registerExam/' + toeflNo + '?token=' + token)\n                    .subscribe((deletedToefl) => {\n\n                      console.log('삭제된 토플시험', deletedToefl );\n\n                      for (let i = 0; i < this.toefls.length; i++) {\n                        if (this.toefls[i].toeflNo === toeflNo) {\n                          this.toefls.splice(i, 1);\n                        }\n                      }\n                      this.registerToeflExamChanged.next([...this.toefls]);\n                    },\n                  (error) => console.log(error)\n                  );\n  }\n\n\n}\n","module.exports = \"        <!--Grid row-->\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <!--Grid column-->\\n          <div class=\\\"col-md-4 mb-3 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n            <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n              <mdb-card class=\\\"testimonial-card\\\">\\n                  <!--Bacground color-->\\n                  <div class=\\\"card-up indigo lighten-1\\\">\\n                  </div>\\n\\n                  <!--Avatar-->\\n                  <div class=\\\"avatar mx-auto\\\">\\n                    <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                  </div>\\n\\n                  <mdb-card-body>\\n                    <!--Name-->\\n                    <mdb-card-title>\\n                      <h4>{{ toefl.toeflNo }} 회차</h4>\\n                      <h6> {{ toefl.toeflLevel }}</h6>\\n                    </mdb-card-title>\\n                    <hr>\\n                    <!--Quotation-->\\n                    <p>\\n                        <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                    </p>\\n\\n                    <div *ngIf=\\\"isTeacherAuth\\\">\\n                        <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                        (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                        <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                        Take Exam\\n                        </button>\\n                    </div>\\n                    <div *ngIf=\\\"!isTeacherAuth\\\">\\n                        <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchased\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Take Exam\\n                            </button>\\n                        </div>\\n                        <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Add Cart\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchase\\n                            </button>\\n                        </div>\\n                    </div>\\n\\n                  </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <!--Bottom Table UI-->\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <!--Pagination -->\\n        <nav class=\\\"my-4 pt-2\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n\\n            <!--Arrow left-->\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n\\n            <!--Numbers-->\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\"","import { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JoinPaidToefl } from '../../models/join-paidtoefl-toefl.model';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n@Component({\n  selector: 'app-advance-toefl-list',\n  templateUrl: './advance-toefl-list.component.html',\n  styleUrls: ['./advance-toefl-list.component.scss']\n})\nexport class AdvanceToeflListComponent {\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {\n\n              }\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","module.exports = \"        <!--Grid row-->\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <!--Grid column-->\\n          <div class=\\\"col-md-4 mb-3 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n            <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n              <mdb-card class=\\\"testimonial-card\\\">\\n                  <!--Bacground color-->\\n                  <div class=\\\"card-up indigo lighten-1\\\">\\n                  </div>\\n\\n                  <!--Avatar-->\\n                  <div class=\\\"avatar mx-auto\\\">\\n                    <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                  </div>\\n\\n                  <mdb-card-body>\\n                    <!--Name-->\\n                    <mdb-card-title>\\n                      <h4>{{ toefl.toeflNo }} 회차</h4>\\n                      <h6> {{ toefl.toeflLevel }}</h6>\\n                    </mdb-card-title>\\n                    <hr>\\n                    <!--Quotation-->\\n                    <p>\\n                        <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                    </p>\\n\\n\\n                    <div *ngIf=\\\"isTeacherAuth\\\">\\n                        <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                        (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                        <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                        Take Exam\\n                       </button>\\n                    </div>\\n\\n                    <div *ngIf=\\\"!isTeacherAuth\\\">\\n                        <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchased\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Take Exam\\n                            </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Add Cart\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchase\\n                            </button>\\n                          </div>\\n                    </div>\\n\\n                  </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <!--Bottom Table UI-->\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <!--Pagination -->\\n        <nav class=\\\"my-4 pt-2\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n\\n            <!--Arrow left-->\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n\\n            <!--Numbers-->\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\"","\nimport { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JoinPaidToefl } from '../../models/join-paidtoefl-toefl.model';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-basic-toefl-list',\n  templateUrl: './basic-toefl-list.component.html',\n  styleUrls: ['./basic-toefl-list.component.scss']\n})\nexport class BasicToeflListComponent {\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {\n\n              }\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","module.exports = \"        <!--Grid row-->\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <!--Grid column-->\\n          <div class=\\\"col-md-4 mb-3 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n            <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n              <mdb-card class=\\\"testimonial-card\\\">\\n                  <!--Bacground color-->\\n                  <div class=\\\"card-up indigo lighten-1\\\">\\n                  </div>\\n\\n                  <!--Avatar-->\\n                  <div class=\\\"avatar mx-auto\\\">\\n                    <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                  </div>\\n\\n                  <mdb-card-body>\\n                    <!--Name-->\\n                    <mdb-card-title>\\n                      <h4>{{ toefl.toeflNo }} 회차</h4>\\n                      <h6> {{ toefl.toeflLevel }}</h6>\\n                    </mdb-card-title>\\n                    <hr>\\n                    <!--Quotation-->\\n                    <p>\\n                        <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                    </p>\\n\\n\\n                    <div *ngIf=\\\"isTeacherAuth\\\">\\n                        <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                        (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                        <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                        Take Exam\\n                       </button>\\n                    </div>\\n\\n                    <div *ngIf=\\\"!isTeacherAuth\\\">\\n                        <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchased\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Take Exam\\n                            </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Add Cart\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchase\\n                            </button>\\n                          </div>\\n                    </div>\\n\\n                  </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <!--Bottom Table UI-->\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <!--Pagination -->\\n        <nav class=\\\"my-4 pt-2\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n\\n            <!--Arrow left-->\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n\\n            <!--Numbers-->\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\"","import { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JoinPaidToefl } from './../../models/join-paidtoefl-toefl.model';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-beginner-toefl-list',\n  templateUrl: './beginner-toefl-list.component.html',\n  styleUrls: ['./beginner-toefl-list.component.scss']\n})\nexport class BeginnerToeflListComponent {\n\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {\n\n              }\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","module.exports = \"\\n        <mdb-carousel [isControls]=\\\"true\\\" class=\\\"carousel-multi-item multi-animation\\\" [type]=\\\"'carousel-multi-item'\\\" [animation]=\\\"'slide'\\\">\\n\\n            <mdb-carousel-item>\\n            <div class=\\\"col-md-4\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(35).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(60).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            </mdb-carousel-item>\\n\\n\\n            <mdb-carousel-item>\\n            <div class=\\\"col-md-4\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(47).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(48).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(53).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            </mdb-carousel-item>\\n         \\n         \\n            <mdb-carousel-item>\\n            <div class=\\\"col-md-4\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(45).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(51).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            </mdb-carousel-item>\\n          \\n        </mdb-carousel>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-event-toefl-list',\n  templateUrl: './event-toefl-list.component.html',\n  styleUrls: ['./event-toefl-list.component.scss']\n})\nexport class EventToeflListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <div class=\\\"col-md-4 mt-1 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n              <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n                <mdb-card class=\\\"testimonial-card\\\">\\n\\n                    <div class=\\\"card-up indigo lighten-1\\\">\\n                    </div>\\n                    <div class=\\\"avatar mx-auto\\\">\\n                      <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                    </div>\\n\\n                    <mdb-card-body>\\n\\n                      <mdb-card-title>\\n                        <h4>{{ toefl.toeflNo }} 회차</h4>\\n                        <h6> {{ toefl.toeflLevel }}</h6>\\n                      </mdb-card-title>\\n                      <hr>\\n\\n                      <p>\\n                          <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                      </p>\\n\\n                      <div *ngIf=\\\"isTeacherAuth\\\">\\n                          <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                          (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                          <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                          Take Exam\\n                         </button>\\n                      </div>\\n\\n                      <div *ngIf=\\\"!isTeacherAuth\\\">\\n                          <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchased\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Take Exam\\n                              </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Add Cart\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchase\\n                              </button>\\n                          </div>\\n                      </div>\\n\\n                      </mdb-card-body>\\n                </mdb-card>\\n              </div>\\n\\n            </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <nav class=\\\"my-4 pt-1\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\"","\nimport { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { JoinPaidToefl } from './../../models/join-paidtoefl-toefl.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-intermediate-toefl-list',\n  templateUrl: './intermediate-toefl-list.component.html',\n  styleUrls: ['./intermediate-toefl-list.component.scss']\n})\nexport class IntermediateToeflListComponent {\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {}\n\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toefl',\n  template: `\n          <router-outlet></router-outlet>\n  `\n})\nexport class ToeflExamComponent {\n\nconstructor() {}\n\n}\n","module.exports = \"\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <div class=\\\"col-md-4 mt-1 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n              <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n                <mdb-card class=\\\"testimonial-card\\\">\\n\\n                    <div class=\\\"card-up indigo lighten-1\\\">\\n                    </div>\\n                    <div class=\\\"avatar mx-auto\\\">\\n                      <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                    </div>\\n\\n                    <mdb-card-body>\\n\\n                      <mdb-card-title>\\n                        <h4>{{ toefl.toeflNo }} 회차</h4>\\n                        <h6> {{ toefl.toeflLevel }}</h6>\\n                      </mdb-card-title>\\n                      <hr>\\n\\n                      <p>\\n                          <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                      </p>\\n\\n                      <div *ngIf=\\\"isTeacherAuth\\\">\\n                          <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                          (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                          <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                          Take Exam\\n                         </button>\\n                      </div>\\n\\n                      <div *ngIf=\\\"!isTeacherAuth\\\">\\n                          <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchased\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Take Exam\\n                              </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Add Cart\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchase\\n                              </button>\\n                          </div>\\n                      </div>\\n\\n                      </mdb-card-body>\\n                </mdb-card>\\n              </div>\\n\\n            </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <nav class=\\\"my-4 pt-1\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \".view {\\n  background: url('students.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.navbar {\\n  z-index: 1; }\\n\"","import { Component, OnInit, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Toefl } from './../../models/toefl.model';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { JoinPaidToefl } from './../../models/join-paidtoefl-toefl.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-toefl-list',\n  templateUrl: './toefl-list.component.html',\n  styleUrls: ['./toefl-list.component.scss']\n})\nexport class ToeflListComponent {\n\n  @Input() isAuth: boolean;\n  @Input() isTeacherAuth: boolean;\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n\n  // tab 페이지 관련 변수설정 영역\n    @ViewChildren('pages') pages: QueryList<any>;\n    itemsPerPage = 6;\n    numberOfVisiblePaginators = 10;\n\n    activePage = 1;\n    firstVisibleIndex = 1;\n    lastVisibleIndex: number = this.itemsPerPage;\n    firstVisiblePaginator = 0;\n    lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n    // shopping cart내 toefl 가격 명시 global 변수: 10불기준\n    price = GlobalConstantShare.price;\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {}\n\n  onShoppingcart(toefl: JoinPaidToefl) {\n\n    console.log('장바구니 클릭');\n\n        if ( this.isAuth ) {\n                            const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                         this.shoppingcartService.addShoppingCartList(cart);\n                            } else {\n                              this.router.navigate(['/auth/login']);\n        }\n  }\n\n  onDirectPayment(toefl: JoinPaidToefl) {\n    console.log('장바구니 클릭' + toefl);\n    console.log(this.isAuth);\n\n      if ( this.isAuth ) {\n            const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n            this.shoppingcartService.addShoppingCartList(cart);\n      } else {\n            this.router.navigate(['/auth/login']);\n      }\n  }\n\n  onPurchasedDetail(toefl) {\n    console.log('Purchased Detail has been clicked');\n  }\n\n  onTakeExam(toefl) {\n    console.log('Take Action for exam has been clicked');\n  }\n\n  changePage(event: any) {\n                        if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                            this.activePage = +event.target.text;\n                            this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                            this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                        }\n  }\n  nextPage(event: any) {\n                        if (this.pages.last.nativeElement.classList.contains('active')) {\n                            if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                  this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                            } else {\n                                  this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator = this.numberOfPaginators;\n                            }\n                        }\n\n                        this.activePage += 1;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n  previousPage(event: any) {\n                      if (this.pages.first.nativeElement.classList.contains('active')) {\n                            if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                            } else {\n                                this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                            }\n                      }\n\n                        this.activePage -= 1;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n\n  firstPage() {\n                        this.activePage = 1;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                        this.firstVisiblePaginator = 0;\n                        this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n  }\n  lastPage() {\n                      this.activePage = this.numberOfPaginators;\n                      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                      if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                          this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                          this.lastVisiblePaginator = this.numberOfPaginators;\n                      } else {\n                          this.lastVisiblePaginator = this.numberOfPaginators;\n                          this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                        (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                      }\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\n\nimport { ToeflListComponent } from './toefl-list/toefl-list.component';\n\nimport { ToeflExamComponent } from './toefl-exam.component';\n\nexport const toeflExamRoutes: Routes = [\n { path: 'toeflexam', component: ToeflExamComponent, children: [\n\n ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(toeflExamRoutes)],\n  exports: [RouterModule]\n})\nexport class ToeflExamRoutingModule {}\n\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToeflExamRoutingModule } from './toefl-routing.module';\n\nimport { ToeflExamComponent } from './toefl-exam.component';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ToeflExamService } from './toeflexam.service';\n\n@NgModule({\n  declarations: [\n    ToeflExamComponent\n   \n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ToeflExamRoutingModule\n  ],\n  providers: [ ToeflExamService ]\n})\nexport class ToeflExamModule {}\n","import { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\n\nimport { Toefl } from './../models/toefl.model';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class ToeflExamService {\n\n  loginStatusChecked = false;\n  urlConfig = GlobalConstantShare.httpUrl;  // 실제 url 주소가 있는곳\n  private toefls: Toefl[] = [];\n  public toeflListChanged = new Subject<Toefl[]>();\n  constructor(private http: HttpClient)  {}\n\n  getAllToeflLists() {\n\n    this.http.get<{ message: string, toefls: Toefl[] }>(this.urlConfig + '/showExam/')\n                  .subscribe((postToefls) => {\n                                                this.toefls = postToefls.toefls;\n                                                this.toeflListChanged.next([...this.toefls]);\n                                              },\n                                                (error) => console.log(error)\n                );\n  }\n\n}\n\n\n","//각종 document.execcomand()에서 작동한 명령어와 parameter값을 저장하기 위한 model\n\nexport class CommandModel{\n    public commandName: string;\n    public value: string;\n    constructor(commandName: string, value: string) {\n        this.commandName = commandName;\n        this.value = value;\n    }\n}","/**\n * toolbar default configuration\n */\nexport const GlobalConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '34rem',\n    minHeight: '15rem',\n    width: '100%',\n    minWidth: '50%',\n    translate: 'yes',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter text here...',\n    imageEndPoint: '',\n    toolbar: [\n        ['bold', 'italic', 'underline'],\n        ['fontName', 'fontSize', 'color'],\n        ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent'],\n        ['cut', 'copy', 'paste']\n    ]\n};\n\nexport const Symbol = {\n\n    squareSymbol: '■',\n    triangleSymbol: '►',\n    oneSymbol: '①',\n    twoSymbol: '②',\n    threeSymbol: '③',\n    fourSymbol: '④'\n\n};\n\n","//각 툴바 옵션 선택사항\n\nexport function canEnableToolbarOptions(value: string, toolbar: any): boolean {\n    if (value) {\n        if(toolbar['length'] === 0) {\n            return true;\n        } else {\n            const found = toolbar.filter(array => {\n                return array.indexOf(value) != -1;\n            });\n            return found.length ? true : false;\n        }\n    } else {\n        return false;\n    }\n}\n\n// textarea에서 선택한 내용물 저장하기\n\nexport function saveSelection(): any {\n    if (window.getSelection) {\n        const selected = window.getSelection();\n        console.log(selected.toString());\n        if(selected.getRangeAt && selected.rangeCount) {\n            return selected.getRangeAt(0);\n        }\n    } else if (document.getSelection && document.createRange) {\n            return document.createRange();\n    }\n    return null;\n}\n\n// textarea에 저장된 값을 복원하기\n\nexport function restoreSelection(range): boolean {\n    if (range) {\n        if (window.getSelection) {\n            const sel = window.getSelection();\n            console.log(sel.toString());\n            sel.removeAllRanges();\n            sel.addRange(range);\n            return true;\n        } else if (document.getSelection && range.select) {\n            range.select();\n            return true;\n        }\n    } else {\n        return false;\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport * as Utils from '../Utility/tony-editor.utility';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class ExecutableCommandService {\n\n    // text area내 벗어나면 blur 기능을 수행하고 곧바로 작업한 내용을 저장하기위한 용도\n\n    public htmlContent = new Subject<string>();\n\n    savedSelection: any = undefined;\n\n    execute(command: string, value: string): void {\n        console.log(command);\n        console.log(value);\n        if (!this.savedSelection && command !== 'enableObjectResizing') {\n            throw new Error('Range OUt of Editor');\n        }\n        if (command === 'enableObjectResizing') {\n            document.execCommand('enableObjectResizing', true, true);\n        }\n        if (command === 'blockquote') {\n            document.execCommand('formatBlock', false, 'blockquote');\n            return;\n        }\n        if (command === 'removeBlockquote') {\n            document.execCommand('formatBlock', false, 'div');\n            return;\n        }\n        if (command !== undefined) {\n            console.log(value);\n            document.execCommand(command, false, value);\n        } else {\n            console.log('this is check point');\n            document.execCommand(command, false, null);\n        }\n\n        return;\n    }\n\n}\n","module.exports = \"<div class=\\\"row mt-0 p-0\\\">\\n  <div class=\\\"mx-auto\\\">\\n    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n          <button type=\\\"button\\\"\\n                  class=\\\"btn-floating light-blue accent-4 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('bold', 'none')\\\">\\n                  <i class=\\\"fa fa-bold indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating light-blue accent-3 btn-sm\\\"\\n                 (click)=\\\"triggerCommand('italic', 'none')\\\">\\n                 <i class=\\\"fa fa-italic indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating light-blue accent-1 btn-sm\\\"\\n                   (click)=\\\"triggerCommand('underline', 'none')\\\">\\n                 <i class=\\\"fa fa-underline indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n      </div>\\n\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n\\n        <div class=\\\"dropdown\\\" dropdown>\\n                                <button dropdownToggle type=\\\"button\\\"\\n                                        class=\\\"btn-floating\\n                                        light-blue accent-4 btn-sm\\n                                        dropdown-toggle waves-light\\\"\\n                                        mdbWavesEffect>\\n                                        <i class=\\\"fa fa-clipboard indigo-text\\\" aria-hidden=\\\"true\\\"></i>\\n                                </button>\\n\\n                                <div class=\\\"dropdown-menu\\\">\\n\\n                                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\"\\n                                            (click)=\\\"onSymbolInsert(0)\\\"\\n                                    >\\n                                                ■ Symbol Insert\\n                                    </button>\\n                                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\"\\n                                            (click)=\\\"onSymbolInsert(1)\\\"\\n                                    >\\n                                                ► Symbol Insert\\n                                    </button>\\n\\n                                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\"\\n                                            (click)=\\\"onSymbolInsert(2)\\\"\\n                                    >\\n                                                ① Symbol Insert\\n                                    </button>\\n                                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\"\\n                                            (click)=\\\"onSymbolInsert(3)\\\"\\n                                    >\\n                                                ② Symbol Insert\\n                                    </button>\\n                                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\"\\n                                            (click)=\\\"onSymbolInsert(4)\\\"\\n                                    >\\n                                                ③ Symbol Insert\\n                                     </button>\\n                                     <button class=\\\"dropdown-item\\\" type=\\\"button\\\"\\n                                             (click)=\\\"onSymbolInsert(5)\\\"\\n                                     >\\n                                                ④ Symbol Insert\\n                                     </button>\\n\\n                                </div>\\n                            </div>\\n\\n        <button type=\\\"button\\\" class=\\\"btn-floating light-blue accent-3 btn-sm\\\"\\n                (click)=\\\"onBackColorChange()\\\">\\n                <i class=\\\"fa fa-tint indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n    </div>\\n\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n          <button type=\\\"button\\\" class=\\\"btn-floating green accent-4 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('justifyCenter', 'none')\\\">\\n                  <i class=\\\"fa fa-align-center indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating green accent-3 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('justifyFull', 'none')\\\">\\n                  <i class=\\\"fa fa-align-justify indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating green accent-2 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('justifyLeft', 'none')\\\">\\n                  <i class=\\\"fa fa-align-left indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating green accent-1 btn-sm\\\"\\n                        (click)=\\\"triggerCommand('justifyRight', 'none')\\\">\\n                  <i class=\\\"fa fa-align-right indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n       </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fourth group\\\">\\n          <button type=\\\"button\\\" class=\\\"btn-floating indigo lighten-2 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('indent', 'none')\\\">\\n                  <i class=\\\"fa fa-indent indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn-floating indigo lighten-2 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('outdent', 'none')\\\">\\n                  <i class=\\\"fa fa-dedent indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n\\n      </div>\\n\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fifth group\\\">\\n          <button type=\\\"button\\\" class=\\\"btn-floating amber accent-4 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('copy', 'none')\\\">\\n                  <i class=\\\"fa fa-copy indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating amber accent-3 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('cut','none')\\\">\\n                  <i class=\\\"fa fa-cut indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn-floating amber accent-4 btn-sm\\\"\\n                  (click)=\\\"triggerCommand('delete', 'none')\\\">\\n                  <i class=\\\"fa fa-eraser indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n      </div>\\n\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Sixth group\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-floating amber accent-4 btn-sm\\\"\\n                (click)=\\\"triggerCommand('undo', 'none')\\\">\\n                <i class=\\\"fa fa-undo indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n        <button type=\\\"button\\\" class=\\\"btn-floating amber accent-3 btn-sm\\\"\\n                (click)=\\\"triggerCommand('redo', 'none')\\\">\\n                <i class=\\\"fa fa-repeat indigo-text\\\" aria-hidden=\\\"true\\\"></i></button>\\n    </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".btn-floating {\\n  margin: 0;\\n  padding: 0;\\n  height: 35px;\\n  width: 35px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Symbol } from '../GlobalSetting/tony-editor.global.default';\nimport { CommandModel } from '../GlobalSetting/command.model';\n\n\nimport { ExecutableCommandService } from '../services/executable-command.service';\nimport * as Utils from '../Utility/tony-editor.utility';\n\n@Component({\n  selector: 'app-tony-editor-toolbar',\n  templateUrl: './tony-editor.toolbar.component.html',\n  styleUrls: ['./tony-editor.toolbar.component.scss'],\n\n})\nexport class TonyEditorToolbarComponent implements OnInit {\n\n  command: CommandModel;\n  checkBackColor = true;\n\n  @Input() config: any;\n  @Output() execute: EventEmitter<CommandModel> = new EventEmitter<CommandModel>();\n\n  constructor(private executableCommandService: ExecutableCommandService) { }\n\n  ngOnInit() {\n  }\n  canEnableToolbarOptions(value): boolean {\n\n    return Utils.canEnableToolbarOptions(value, this.config['toolbar']);\n  }\n\n  onSymbolInsert(option: number) {\n    console.log(' ■ Symbol Insert');\n    switch (option) {\n      case 0: this.triggerCommand('insertText', Symbol.squareSymbol);\n      break;\n      case 1: this.triggerCommand('insertText', Symbol.triangleSymbol);\n      break;\n      case 2: this.triggerCommand('insertText', Symbol.oneSymbol);\n      break;\n      case 3: this.triggerCommand('insertText', Symbol.twoSymbol);\n      break;\n      case 4: this.triggerCommand('insertText', Symbol.threeSymbol);\n      break;\n      case 5: this.triggerCommand('insertText', Symbol.fourSymbol);\n      break;\n    }\n  }\n\n  onBackColorChange() {\n    if (this.checkBackColor) {\n      this.triggerCommand('backcolor', '#80cbc4');\n      this.checkBackColor = false;\n    } else {\n      this.triggerCommand('backcolor', 'white');\n      this.checkBackColor = true;\n    }\n  }\n\n  triggerCommand(command:  string, value): void {\n    this.command = new CommandModel(command, value);\n    console.log(this.command);\n    this.execute.emit(this.command);\n  }\n}\n","module.exports = \"<div>\\n  <app-tony-editor-toolbar [config]=\\\"config\\\" (execute)=\\\"executeCommand($event)\\\"></app-tony-editor-toolbar>\\n</div>\\n  <div class=\\\"tony-editor\\\"\\n       id=\\\"tonyEditor\\\"\\n       [style.width]=\\\"config['width']\\\"\\n       [style.minWidth]=\\\"config['minWidth']\\\"\\n       tabindex=\\\"0\\\"\\n      (focus)=\\\"onEditorFocus()\\\">\\n\\n    <!-- text area -->\\n    <div class=\\\"tony-wrapper\\\" #tonyWrapper>\\n      <div class=\\\"tony-editor-textarea\\\"\\n           [attr.contenteditable]=\\\"config['editable']\\\"\\n\\n           (input)=\\\"onContentChange($event.target.innerHTML)\\\"\\n           [attr.translate]=\\\"config['translate']\\\"\\n           [attr.spellcheck]=\\\"config['spellcheck']\\\"\\n           [style.height]=\\\"config['height']\\\"\\n           [style.minHeight]=\\\"config['minHeight']\\\"\\n           (focus)=\\\"onTextAreaFocus()\\\"\\n           (blur)=\\\"onTextAreaBlur()\\\"\\n           #tonyTextArea>\\n      </div>\\n\\n    </div>\\n  </div>\\n\"","module.exports = \".tony-editor {\\n  position: relative; }\\n  .tony-editor ::ng-deep [contenteditable=true]:empty:before {\\n    content: attr(placeholder);\\n    display: block;\\n    color: #868e96;\\n    opacity: 1; }\\n  .tony-editor .tony-wrapper {\\n    position: relative;\\n    top: 1rem; }\\n  .tony-editor .tony-wrapper .tony-editor-textarea {\\n      min-height: 5rem;\\n      padding: 0.5rem 0.8rem 1rem 0.8rem;\\n      border: 1px solid #ddd;\\n      background-color: transparent;\\n      overflow-x: hidden;\\n      overflow-y: auto;\\n      z-index: 3;\\n      position: relative; }\\n  .tony-editor .tony-wrapper .tony-editor-textarea:focus, .tony-editor .tony-wrapper .tony-editor-textarea.focus {\\n        outline: 0; }\\n  .tony-editor .tony-wrapper .tony-editor-textarea ::ng-deep blockquote {\\n        margin-left: 1rem;\\n        border-left: 0.2em solid #dfe2e5;\\n        padding-left: 0.5rem; }\\n  .tony-editor .tony-wrapper ::ng-deep p {\\n      margin-bottom: 0; }\\n\"","\nimport { Component, OnInit, Input, Output,\n         ViewChild, EventEmitter, Renderer2, forwardRef, ElementRef } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { GlobalConfig } from '../GlobalSetting/tony-editor.global.default';\nimport { CommandModel } from '../GlobalSetting/command.model';\n\nimport { ExecutableCommandService } from '../services/executable-command.service';\nimport * as Utils from '../Utility/tony-editor.utility';\n\n@Component({\n  selector: 'app-tony-editor',\n  templateUrl: './tony-editor.component.html',\n  styleUrls: ['./tony-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TonyEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class TonyEditorComponent implements OnInit {\n\n\n  translate: string;\n  height: string;\n  minHeight: string;\n  width: string;\n  minWidth: string;\n\n  html: any;\n  htmlContent1: any;\n\n  resizer = 'stack';\n\n  @Input() htmlContent: string;\n\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild('tonyTextArea') textArea: ElementRef;\n  @ViewChild('tonyWrapper') tonyWrapper: any;\n\n  Utils: any = Utils;\n\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n\n  config = GlobalConfig;\n\n  constructor(private executableCommandService: ExecutableCommandService,\n              private renderer: Renderer2,\n              private snatizer: DomSanitizer\n            ) { }\n\n  ngOnInit() {\n\n    console.log(this.config.editable);\n    console.log(this.config.height);\n    console.log(this.config.placeholder);\n\n    if (this.htmlContent) {\n      console.log(this.htmlContent);\n        this.textArea.nativeElement.innerHTML = this.htmlContent;\n   }\n    // const div = this.readerer.createElement('div');\n    // const text = this.readerer.createText(this.htmlContent);\n    // this.readerer.appendChild(div, text);\n    // this.readerer.appendChild(this.textArea.nativeElement, div);\n\n  }\n\n\n  writeValue(value: any): void {\n    console.log(value);\n    if (value === null || value === undefined || value === '' || value === '<br>') {\n      value = null;\n    }\n    this.refreshView(value);\n }\n\n registerOnChange(fn: any): void {\n   this.onChange = fn;\n }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n onTextAreaFocus() {\n    this.focus.emit('focus');\n    console.log(this.focus);\n    return;\n  }\n  onEditorFocus() {\n    this.textArea.nativeElement.focus();\n    console.log(this.textArea.nativeElement.focus());\n  }\n\n  onTextAreaBlur(): void {\n    // 만일 textarea에서 벗어나면 곧바로 window.section영역을 이용하여 저장함\n    this.executableCommandService.savedSelection = Utils.saveSelection();\n  }\n\n  resixeTextArea(offsetY: number): void {\n    let newHeight = parseInt(this.height, 10);\n    newHeight += offsetY;\n    this.height = newHeight + 'px';\n    this.textArea.nativeElement.style.height = this.height;\n  }\n\n  onContentChange(html: string): void {\n\n    console.log(html);\n\n    this.executableCommandService.htmlContent.next(html);   // 실시간으로 textArea에서 입력한 값을 Obserable함\n\n  }\n\n  executeCommand(command: CommandModel) {\n    try {\n      console.log(command.commandName);\n      console.log(command.value);\n      this.executableCommandService.execute(command.commandName, command.value);\n    } catch (error) {\n      console.log(error);\n    }\n    return;\n  }\n\n  refreshView(value: string): void {\n    const normalizedValue = value === null ? '' : value;\n    this.renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\n    return;\n  }\n\n\n}\n","module.exports = \"\\n<!-- 메인화면 모드 -->\\n\\n<div class=\\\"view\\\">\\n  <div class=\\\"full-bg-img\\\">\\n      <div class=\\\"mask rgba-black-light flex-center\\\">\\n          <div class=\\\"container\\\">\\n              <div class=\\\"white-text text-center wow fadeInUp\\\">\\n                  <h2 class=\\\"font-weight-bold\\\">TOEFL EXAM SIMULATOR</h2>\\n                  <h5 class=\\\"font-weight-bold\\\">When you need to get better scores</h5>\\n                  <br>\\n                  <p>In your heart, You know you can get the TOEFL SCORES eaily and fast that you want !!! </p>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n</div>\\n\\n<!-- 두번째 2개 카드 모드 -->\\n\\n<section class=\\\"pt-3 pb-3\\\">\\n    <div class=\\\"row\\\" id=\\\"floatingCard\\\">\\n        <div class=\\\"col-md-1\\\"></div>\\n        <div class=\\\"col-md-5\\\">\\n            <div class=\\\"border border-gray rounded z-depth-4\\\">\\n                <div class=\\\"card white text-center\\\">\\n                        <!-- Card content -->\\n                        <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\n\\n                                <!--Title-->\\n                                <mdb-card-title>\\n                                <h4>\\n                                    <strong><i class=\\\"fa fa-share-alt-square\\\"></i> To Share Your Tests</strong>\\n                                </h4>\\n                                </mdb-card-title>\\n\\n                                <hr>\\n                                <button type=\\\"button\\\" class=\\\"btn indigo accent-4 btn-rounded\\\">SignUp</button>\\n                                <mdb-card-text class=\\\"mt-3\\\">\\n                                    If you want to share your Toefl Test, Please Sign Up for Sharing...\\n                                </mdb-card-text>\\n\\n                                <a type=\\\"button\\\" class=\\\"btn-floating btn-sm btn-fb\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\n                                <a type=\\\"button\\\" class=\\\"btn-floating btn-sm btn-ins\\\"><i class=\\\"fa fa-instagram\\\"></i></a>\\n                                <a type=\\\"button\\\" class=\\\"btn-floating btn-sm btn-yt\\\"><i class=\\\"fa fa-youtube\\\"></i></a>\\n\\n                        </mdb-card-body>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"border border-gray rounded z-depth-4\\\">\\n              <div class=\\\"card white text-center\\\">\\n                      <!-- Card content -->\\n                      <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\n\\n                              <!--Title-->\\n                              <mdb-card-title>\\n                              <h4>\\n                                  <strong><i class=\\\"fa fa-pencil-square\\\"></i> To Take Our Best Toefl Exams</strong>\\n                              </h4>\\n                              </mdb-card-title>\\n\\n                              <hr>\\n                              <button type=\\\"button\\\" class=\\\"btn deep-orange darken-4 btn-rounded\\\">   SignUp   </button>\\n                              <mdb-card-text class=\\\"mt-3\\\">\\n                                  If you want to take Our Toefl Test, Please Sign Up for taking...\\n                              </mdb-card-text>\\n\\n                              <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" size=\\\"sm\\\" class=\\\"btn-fb waves-light\\\" mdbWavesEffect>\\n                                 <i class=\\\"fa fa-facebook\\\"></i></a>\\n                              <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" size=\\\"sm\\\" class=\\\" btn-gplus waves-light\\\" mdbWavesEffect>\\n                                 <i class=\\\"fa fa-google-plus\\\"></i></a>\\n\\n                      </mdb-card-body>\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n</section>\\n\\n<!-- 세번째 이영역을 carousal을 구현하는 영역임 -->\\n<section class=\\\"pb-3\\\">\\n\\n    <h2 class=\\\"h1 py-5 font-weight-bold text-center\\\">Do You Want To Take Our Free Toefl Exams?</h2>\\n\\n    <p class=\\\"px-5 mb-3 pb-3 lead grey-text text-center\\\">\\n        Please just SignUp or Login to take our Free Toefl Exams to help your decisions.\\n    </p>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n\\n          <mdb-carousel [isControls]=\\\"true\\\" [animation]=\\\"'slide'\\\">\\n\\n              <mdb-carousel-item>\\n                  <img class=\\\"view1\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\\\" alt=\\\"First slide\\\">\\n                    <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\n                    <div class=\\\"carousel-caption\\\">\\n                        <h3 class=\\\"py-3 font-weight-bold\\\">\\n                            <strong>으메이징한 무료시험 체험하기</strong>\\n                        </h3>\\n                        <button class=\\\"btn btn-secondary btn-rounded btn-md  waves-light\\\" mdbWavesEffect>\\n                            <i class=\\\"fa fa-clone left\\\"></i>무료시험 보러가기\\n                        </button>\\n                      </div>\\n              </mdb-carousel-item>\\n              <mdb-carousel-item>\\n                  <img class=\\\"view1\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\\\" alt=\\\"Second slide\\\">\\n                  <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\n                  <div class=\\\"carousel-caption\\\">\\n                      <h3 class=\\\"py-3 font-weight-bold\\\">\\n                          <strong>으메이징한 무료시험 체험하기</strong>\\n                      </h3>\\n                      <button class=\\\"btn btn-secondary btn-rounded btn-md  waves-light\\\" mdbWavesEffect>\\n                          <i class=\\\"fa fa-clone left\\\"></i>무료시험 보러가기\\n                      </button>\\n                    </div>\\n              </mdb-carousel-item>\\n              <mdb-carousel-item>\\n                  <img class=\\\"view1\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\\\" alt=\\\"Third slide\\\">\\n                  <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\n                  <div class=\\\"carousel-caption\\\">\\n                      <h3 class=\\\"py-3 font-weight-bold\\\">\\n                          <strong>으메이징한 무료시험 체험하기</strong>\\n                      </h3>\\n                      <button class=\\\"btn btn-secondary btn-rounded btn-md  waves-light\\\" mdbWavesEffect>\\n                          <i class=\\\"fa fa-clone left\\\"></i>무료시험 보러가기\\n                      </button>\\n                    </div>\\n              </mdb-carousel-item>\\n\\n          </mdb-carousel>\\n\\n      </div>\\n  </div>\\n\\n</section>\\n\\n<!-- 네번째 이영역은 핫 이벤트 세일이 가능한 toefl list를 전시하고 결재가 이루어 지도록 한다 -->\\n<section class=\\\"pb-3\\\">\\n\\n  <h2 class=\\\"h1 py-5 font-weight-bold text-center\\\">The Latest Tests With The Highest Hit Rate? 75%Off</h2>\\n  <p class=\\\"px-5 mb-3 pb-3 lead grey-text text-center\\\">\\n      You can take a Toefl Exam with one of the hottest deals for our best Toefl Exams.\\n  </p>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-11 mx-auto\\\">\\n              <app-event-toefl-list></app-event-toefl-list>\\n      </div>\\n  </div>\\n\\n\\n</section>\\n\\n\\n<!-- 다섯번째 tab을 이용한 모든 토플 시험을 볼수 있도록 구성한다 -->\\n<section class=\\\"text-center\\\">\\n\\n  <h2 class=\\\"h1-responsive font-weight-bold text-center my-5\\\">Current Toefl Exams</h2>\\n  <p class=\\\"grey-text text-center w-responsive mx-auto mb-5\\\">Look at our best Toefl Exams for your success. Please try to select one of them to get your best results for your Toefl Scores</p>\\n\\n<div *ngIf=\\\"toefls\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-11 p-0 mx-auto\\\">\\n              <mdb-tabset #staticTabs [buttonClass]=\\\"'md-tabs tabs-6 pills-secondary blue lighten-2'\\\" [contentClass]=\\\"''\\\">\\n\\n                          <mdb-tab heading=\\\"All Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-toefl-list\\n                                                    [toefls]=\\\"jointPaidToeflLists\\\"\\n                                                    [numberOfPaginators]=\\\"numberOfPaginators\\\"\\n                                                    [paginators]=\\\"paginators\\\"\\n                                                    [isAuth]=\\\"isAuth\\\"\\n                                                    [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Beginners Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12 \\\">\\n\\n                                      <app-beginner-toefl-list\\n                                                              [toefls]=\\\"beginnerToefls\\\"\\n                                                              [numberOfPaginators]=\\\"beginnerNumberOfPaginators\\\"\\n                                                              [paginators]=\\\"beginnerPaginators\\\"\\n                                                              [isAuth]=\\\"isAuth\\\"\\n                                                              [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-beginner-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Basic Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-basic-toefl-list\\n                                                            [toefls]=\\\"basicToefls\\\"\\n                                                            [numberOfPaginators]=\\\"basicNumberOfPaginators\\\"\\n                                                            [paginators]=\\\"basicPaginators\\\"\\n                                                            [isAuth]=\\\"isAuth\\\"\\n                                                            [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-basic-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Intermediate Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-intermediate-toefl-list\\n                                                                  [toefls]=\\\"intermediateToefls\\\"\\n                                                                  [numberOfPaginators]=\\\"interNumberOfPaginators\\\"\\n                                                                  [paginators]=\\\"interPaginators\\\"\\n                                                                  [isAuth]=\\\"isAuth\\\"\\n                                                                  [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-intermediate-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Advanced Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-advance-toefl-list\\n                                                            [toefls]=\\\"advancedToefls\\\"\\n                                                            [numberOfPaginators]=\\\"advNumberOfPaginators\\\"\\n                                                            [paginators]=\\\"advPaginators\\\"\\n                                                            [isAuth]=\\\"isAuth\\\"\\n                                                            [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-advance-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Each Section Exams\\\">\\n                                  <div class=\\\"row\\\">\\n                                      <div class=\\\"col-12\\\">\\n\\n                                          <app-toefl-list\\n                                                        [toefls]=\\\"jointPaidToeflLists\\\"\\n                                                        [numberOfPaginators]=\\\"numberOfPaginators\\\"\\n                                                        [paginators]=\\\"paginators\\\"\\n                                                        [isAuth]=\\\"isAuth\\\"\\n                                                        [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-toefl-list>\\n                                        </div>\\n                                  </div>\\n                          </mdb-tab>\\n\\n              </mdb-tabset>\\n      </div>\\n  </div>\\n</div>\\n</section>\\n\\n<app-footer></app-footer>\\n\"","module.exports = \".view {\\n  background: url('university.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 80vh; }\\n\\n.view1 {\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 30rem; }\\n\\n#floatingCard {\\n  position: relative;\\n  bottom: 50px; }\\n\\n.navbar {\\n  z-index: 1; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthService } from '../auth/auth.service';\n\nimport {Toefl} from '../toefl/models/toefl.model';\nimport {ToeflExamService} from '../toefl/toeflExam/toeflexam.service';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport { ShoppingcartService } from '../payment/shoppingcart.service';\nimport { PaidToeflList } from '../payment/model/paidToeflLists.model';\nimport { JoinPaidToefl } from '../toefl/models/join-paidtoefl-toefl.model';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit, OnDestroy {\n\n   // 원본 toefl list init\n       toefls: Toefl[] = [];\n\n   // 지불이 완료된 toefl list\n       newPaidToeflLists: PaidToeflList[] = [];\n\n   // paid Toefl List와 합쳐진 toefl lists\n       joinPaidToefl: JoinPaidToefl;\n       jointPaidToeflLists: JoinPaidToefl[] = [];\n\n       beginnerToefls: JoinPaidToefl[] = [];\n       basicToefls: JoinPaidToefl[] = [];\n       intermediateToefls: JoinPaidToefl[] = [];\n       advancedToefls: JoinPaidToefl[] = [];\n\n\n    // 각 인증에 필요한 기능 설정\n      paidToeflCheck = false;\n      isAuth = false;\n      isTeacherAuth = false;\n\n    // Subscription 설정\n    toeflListSubscription: Subscription;\n    paidToeflListSubscription: Subscription;\n\n    // bootstrap tab에서 사용하는 각종 기능규정\n\n        itemsPerPage = 6;\n        numberOfPaginators: number;\n        paginators: Array<any> = [];\n\n        beginnerNumberOfPaginators: number;\n        beginnerPaginators: Array<any> = [];\n\n        basicNumberOfPaginators: number;\n        basicPaginators: Array<any> = [];\n\n        interNumberOfPaginators: number;\n        interPaginators: Array<any> = [];\n\n        advNumberOfPaginators: number;\n        advPaginators: Array<any> = [];\n\n\n  constructor(\n              private toeflExamService: ToeflExamService,\n              private authService: AuthService,\n              private shoppincartService: ShoppingcartService\n              ) {}\n\n   ngOnInit() {\n\n\n    /* 새로 결재된 토플명단을 추출하는 subject: this.shoppincartService.paidToeflListAdded\n                                        paidToeflListAdded observable 위치: authservice내 로그인시\n                                                                           shoppingcat 연결시\n    */\n\n      this.paidToeflListSubscription = this.shoppincartService.paidToeflListAdded\n                                                              .subscribe((paidToeflLists: PaidToeflList[]) => {\n                                                                this.newPaidToeflLists = paidToeflLists;\n                                                                console.log('updated newPaid Toefl Lists: ' + this.newPaidToeflLists);\n                                                              });\n\n      this.toeflListSubscription = this.toeflExamService.toeflListChanged\n                                                              .subscribe((toefls: Toefl[]) => {\n                                                                this.toefls = toefls;\n                                                                console.log('original toefl lists: ' + this.toefls);\n\n                                                                console.log('new paid toefl lists: ' + this.newPaidToeflLists);\n\n                                                                if (this.newPaidToeflLists.length !== 0) {\n                                                                  this.jointPaidToeflLists = [];\n                                                                    for (const toeflItem of this.toefls) {\n                                                                      this.paidToeflCheck = false;\n                                                                        for (const paidToeflItem of this.newPaidToeflLists) {\n                                                                          if ( toeflItem.toeflNo === paidToeflItem.examNo) {\n                                                                                this.paidToeflCheck = true;\n                                                                          }\n                                                                        }\n                                                                        this.joinPaidToefl = new JoinPaidToefl(toeflItem.toeflNo,\n                                                                                                                toeflItem.toeflDesc,\n                                                                                                                toeflItem.toeflLevel,\n                                                                                                                toeflItem.toeflImage,\n                                                                                                                this.paidToeflCheck);\n                                                                        this.jointPaidToeflLists.push(this.joinPaidToefl);\n                                                                    }\n                                                                  } else {\n                                                                    this.jointPaidToeflLists = [];\n                                                                    \n                                                                  for (const toeflItem of this.toefls) {\n                                                                      this.paidToeflCheck = false;\n                                                                      this.joinPaidToefl = new JoinPaidToefl(toeflItem.toeflNo,\n                                                                                                        toeflItem.toeflDesc,\n                                                                                                        toeflItem.toeflLevel,\n                                                                                                        toeflItem.toeflImage,\n                                                                                                        this.paidToeflCheck);\n                                                                      this.jointPaidToeflLists.push(this.joinPaidToefl);\n                                                                  }\n                                                                }\n\n                                                            for (const eachToefl of this.jointPaidToeflLists) {\n                                                              if ( eachToefl.toeflLevel === 'Beginner' ) {\n                                                                    this.beginnerToefls.push(eachToefl);\n                                                              } else if ( eachToefl.toeflLevel === 'Basic' ) {\n                                                                    this.basicToefls.push(eachToefl);\n                                                              } else if ( eachToefl.toeflLevel === 'InterMediate' ) {\n                                                                    this.intermediateToefls.push(eachToefl);\n                                                              } else if ( eachToefl.toeflLevel === 'Advanced' ) {\n                                                                    this.advancedToefls.push(eachToefl);\n                                                              }\n                                                          }\n\n                                                        this.calculatePagenator(this.jointPaidToeflLists,\n                                                                                this.beginnerToefls,\n                                                                                this.basicToefls,\n                                                                                this.intermediateToefls,\n                                                                                this.advancedToefls);\n\n\n                                                      console.log('this is join paid toefl lists: ' + this.jointPaidToeflLists);\n                                                              });\n\n      this.toeflExamService.getAllToeflLists();\n      this.newPaidToeflLists = this.shoppincartService.getPaidToefltLists();\n      this.isAuth = this.authService.isAuthenticated;         // 일반 사용자 인증\n      this.isTeacherAuth = this.authService.isteacherAuthenticated;   // teacher 관리자 인증\n\n    }\n\n    ngOnDestroy() {\n      this.toeflListSubscription.unsubscribe();\n      this.paidToeflListSubscription.unsubscribe();\n    }\n\n    calculatePagenator(toefls, beginnerToefls, basicToefls, interToefls, advancedToefls) {\n\n           // 모든 토플 명단에 관한 pagenator 산출\n           if (toefls.length % this.itemsPerPage === 0) {\n                this.numberOfPaginators = Math.floor(toefls.length / this.itemsPerPage);\n          } else {\n                this.numberOfPaginators = Math.floor(toefls.length / this.itemsPerPage + 1);\n          }\n\n                for (let i = 1; i <= this.numberOfPaginators; i++) {\n                      this.paginators.push(i);\n                }\n\n          // beginner level toefl pagenator 산출\n\n          if (beginnerToefls.length % this.itemsPerPage === 0) {\n                this.beginnerNumberOfPaginators = Math.floor(beginnerToefls.length / this.itemsPerPage);\n          } else {\n                this.beginnerNumberOfPaginators = Math.floor(beginnerToefls.length / this.itemsPerPage + 1);\n          }\n\n                for (let i = 1; i <= this.beginnerNumberOfPaginators; i++) {\n                      this.beginnerPaginators.push(i);\n                }\n\n         // basic level toefl pagenator 산출\n\n          if (basicToefls.length % this.itemsPerPage === 0) {\n                this.basicNumberOfPaginators = Math.floor(basicToefls.length / this.itemsPerPage);\n              } else {\n                    this.basicNumberOfPaginators = Math.floor(basicToefls.length / this.itemsPerPage + 1);\n          }\n                  for (let i = 1; i <= this.basicNumberOfPaginators; i++) {\n                    this.basicPaginators.push(i);\n                  }\n\n\n           // intermediate level toefl pagenator 산출\n\n           if (interToefls.length % this.itemsPerPage === 0) {\n                this.interNumberOfPaginators = Math.floor(interToefls.length / this.itemsPerPage);\n              } else {\n                this.interNumberOfPaginators = Math.floor(interToefls.length / this.itemsPerPage + 1);\n            }\n                for (let i = 1; i <= this.interNumberOfPaginators; i++) {\n                  this.interPaginators.push(i);\n                }\n\n        // advanced level toefl pagenator 산출\n\n            if (advancedToefls.length % this.itemsPerPage === 0) {\n                  this.advNumberOfPaginators = Math.floor(advancedToefls.length / this.itemsPerPage);\n            } else {\n                  this.advNumberOfPaginators = Math.floor(advancedToefls.length / this.itemsPerPage + 1);\n            }\n                for (let i = 1; i <= this.advNumberOfPaginators; i++) {\n                      this.advPaginators.push(i);\n                }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}