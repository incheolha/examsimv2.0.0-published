{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Utility-shared/globalConstantShare.ts","webpack:///./src/app/Utility-shared/mainNavChange.model.ts","webpack:///./src/app/Utility-shared/utility.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/authentication.component.ts","webpack:///./src/app/auth/contact/contact.component.html","webpack:///./src/app/auth/contact/contact.component.scss","webpack:///./src/app/auth/contact/contact.component.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/logout/logout.component.html","webpack:///./src/app/auth/logout/logout.component.scss","webpack:///./src/app/auth/logout/logout.component.ts","webpack:///./src/app/auth/profile/profile-edit/edit-user-profile/edit-user-profile.component.html","webpack:///./src/app/auth/profile/profile-edit/edit-user-profile/edit-user-profile.component.scss","webpack:///./src/app/auth/profile/profile-edit/edit-user-profile/edit-user-profile.component.ts","webpack:///./src/app/auth/profile/profile-edit/exam-analysis/exam-analysis.component.html","webpack:///./src/app/auth/profile/profile-edit/exam-analysis/exam-analysis.component.scss","webpack:///./src/app/auth/profile/profile-edit/exam-analysis/exam-analysis.component.ts","webpack:///./src/app/auth/profile/profile-edit/exam-history/exam-history.component.html","webpack:///./src/app/auth/profile/profile-edit/exam-history/exam-history.component.scss","webpack:///./src/app/auth/profile/profile-edit/exam-history/exam-history.component.ts","webpack:///./src/app/auth/profile/profile-edit/profile-edit.component.html","webpack:///./src/app/auth/profile/profile-edit/profile-edit.component.scss","webpack:///./src/app/auth/profile/profile-edit/profile-edit.component.ts","webpack:///./src/app/auth/profile/profile-edit/profile-order-history/profile-order-history.component.html","webpack:///./src/app/auth/profile/profile-edit/profile-order-history/profile-order-history.component.scss","webpack:///./src/app/auth/profile/profile-edit/profile-order-history/profile-order-history.component.ts","webpack:///./src/app/auth/profile/purchased-history/purchased-history.component.html","webpack:///./src/app/auth/profile/purchased-history/purchased-history.component.scss","webpack:///./src/app/auth/profile/purchased-history/purchased-history.component.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.scss","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/auth/user.model.ts","webpack:///./src/app/error-interceptor.ts","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.scss","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/navigation/footer/footer.component.html","webpack:///./src/app/navigation/footer/footer.component.scss","webpack:///./src/app/navigation/footer/footer.component.ts","webpack:///./src/app/navigation/header/header.component.html","webpack:///./src/app/navigation/header/header.component.scss","webpack:///./src/app/navigation/header/header.component.ts","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.html","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.scss","webpack:///./src/app/navigation/sidenav-list/sidenav-list.component.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.scss","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/payment/model/payment.model.ts","webpack:///./src/app/payment/model/shoppingcart.model.ts","webpack:///./src/app/payment/model/stripeModel.ts","webpack:///./src/app/payment/payment-checkout/payment-notification/payment-notification.component.html","webpack:///./src/app/payment/payment-checkout/payment-notification/payment-notification.component.scss","webpack:///./src/app/payment/payment-checkout/payment-notification/payment-notification.component.ts","webpack:///./src/app/payment/payment-checkout/payment-order-summary/payment-order-summary.component.html","webpack:///./src/app/payment/payment-checkout/payment-order-summary/payment-order-summary.component.scss","webpack:///./src/app/payment/payment-checkout/payment-order-summary/payment-order-summary.component.ts","webpack:///./src/app/payment/payment-checkout/payment-proceed/payment-proceed.component.html","webpack:///./src/app/payment/payment-checkout/payment-proceed/payment-proceed.component.scss","webpack:///./src/app/payment/payment-checkout/payment-proceed/payment-proceed.component.ts","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/payment/paymentAgency-Service/paypal-payment.service.ts","webpack:///./src/app/payment/paymentAgency-Service/stripe-payment.service.ts","webpack:///./src/app/payment/shoppingcart.service.ts","webpack:///./src/app/payment/shoppingcart/order-summary/order-summary.component.html","webpack:///./src/app/payment/shoppingcart/order-summary/order-summary.component.scss","webpack:///./src/app/payment/shoppingcart/order-summary/order-summary.component.ts","webpack:///./src/app/payment/shoppingcart/shoppingcart.component.html","webpack:///./src/app/payment/shoppingcart/shoppingcart.component.scss","webpack:///./src/app/payment/shoppingcart/shoppingcart.component.ts","webpack:///./src/app/shared/pipe-collection/shorten.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/toefl/models/join-paidtoefl-toefl.model.ts","webpack:///./src/app/toefl/toeflExam/advance-toefl-list/advance-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/advance-toefl-list/advance-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/advance-toefl-list/advance-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/basic-toefl-list/basic-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/basic-toefl-list/basic-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/basic-toefl-list/basic-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/event-toefl-list/event-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/event-toefl-list/event-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/event-toefl-list/event-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/toefl-exam.component.ts","webpack:///./src/app/toefl/toeflExam/toefl-list/toefl-list.component.html","webpack:///./src/app/toefl/toeflExam/toefl-list/toefl-list.component.scss","webpack:///./src/app/toefl/toeflExam/toefl-list/toefl-list.component.ts","webpack:///./src/app/toefl/toeflExam/toefl-routing.module.ts","webpack:///./src/app/toefl/toeflExam/toeflexam.module.ts","webpack:///./src/app/toefl/toeflExam/toeflexam.service.ts","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.scss","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./toefl/teacher/teacher.module\": [\n\t\t\"./src/app/toefl/teacher/teacher.module.ts\",\n\t\t\"toefl-teacher-teacher-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export const GlobalConstantShare = {\n// httpUrl: 'https://examsimv100.herokuapp.com',\n  httpUrl: 'http://localhost:3000',\n     price: 10\n};\n","\nexport class MainNavModel {\n  constructor(public showMainNav: boolean,\n              public checkLogoutOrNot: boolean,\n              public isTeacherLogin?: boolean) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MainNavModel } from './mainNavChange.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProfileInfo } from '../auth/profile.model';\n@Injectable()\nexport class UtilityService {\n\n  public loadingStateChanged = new Subject<boolean>();\n  public soundButtonChanged = new Subject<boolean>();   // toefl list에서 audio button을 클릭하였을때를 감시하는 subject\n  public audioPathChanged = new Subject<string>();\n  public mainNavChanged = new Subject<MainNavModel>();        // main Nav 화면 보이고 안보이고 할때\n  public toeflListShowChanged = new Subject<boolean>();    // toefl list를 화면에 보이고 안보이고 할때 사용\n  public teacherNavSideBarChanged = new Subject<boolean>();  // make exam 생성시 teacher navigation의 sidebar를 보이거나 안보이거나 할때 사용\n  public stepperCheck = new Subject<boolean>();              // stepper 단계 점검시 사용\n  private audio = new Audio();\n\n  private options = { positionClass: 'toast-top-full-width', closeButton: true, progressBar: true };\n\n  constructor(private toaster: ToastrService) { }\n\n\n  successToast(title, message) {\n    this.toaster.success(title, message, this.options);\n\n  }\n\n errorToast(title, message) {\n   this.toaster.error(title, message, this.options);\n }\n\n getChangedAudioUrl(audioPath: string) {\n  this.audioPathChanged.next(audioPath);\n }\n\n audioPlaySevice(audioPath: string, soundLocationMode: string, soundButton: boolean) {\n  // 만일 toefl List를 보여주는 것이라면 audio.play()가 실행되고 있는지의 여부를 확인하여\n  // 실행되고 있다면 반드시 중지 시키고 새로 시작하여야만 중복된 소리가 들리지 않는다\n  // Audio Play Service 중 toefl List에서 소리가 나면 값은 \"1\" === 소리 실행\n    // 만일 add, detail, edit component는 \"2\" --- 소리를 중지\n    // add 와 edit 후  save 버튼을 누르면 새로 update된 값으로 소리 실행  === \"3\"\n\n  console.log('this is the service area:' + this.soundButtonChanged);\n  console.log(soundLocationMode);\n\n        if (soundLocationMode === '0') {\n          this.audio.pause();\n        }\n        if (soundLocationMode === '1') {\n\n              if (soundButton) {\n                if (this.audio.play()) {\n                  this.audio.pause();\n                  this.soundButtonChanged.next(true);\n                }\n              } else {\n                  if (this.audio.play()) {\n                    this.audio.pause();\n                  }\n                  this.audio = new Audio();\n                  this.audio.src = audioPath;\n                  this.audio.autoplay = true;\n                  this.audio.loop = true;\n                  this.soundButtonChanged.next(false);\n                }\n        }\n        if (soundLocationMode === '2') {\n\n                if (this.audio.play()) {\n                  this.audio.pause();\n                }\n                this.soundButtonChanged.next(true);\n        }\n        if (soundLocationMode === '3') {\n\n                if (this.audio.play()) {\n                  this.audio.pause();\n                }\n                  this.audio = new Audio();\n                  this.audio.src = audioPath;\n                  this.audio.autoplay = true;\n                  this.audio.loop = true;\n                  this.soundButtonChanged.next(false);\n        }\n    }\n\n }\n","// angular module\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\n// header side footer component\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\nimport { FooterComponent } from './navigation/footer/footer.component';\n\n// page not found 관련 component\n\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n// 각종 pipe 규정\nimport { ShortenPipe } from './shared/pipe-collection/shorten.pipe';\n\n// MDTabset으로 구성된 components\nimport { ToeflListComponent } from './toefl/toeflExam/toefl-list/toefl-list.component';\nimport { BasicToeflListComponent } from './toefl/toeflExam/basic-toefl-list/basic-toefl-list.component';\nimport { IntermediateToeflListComponent } from './toefl/toeflExam/intermediate-toefl-list/intermediate-toefl-list.component';\nimport { AdvanceToeflListComponent } from './toefl/toeflExam/advance-toefl-list/advance-toefl-list.component';\nimport { BeginnerToeflListComponent } from './toefl/toeflExam/beginner-toefl-list/beginner-toefl-list.component';\nimport { EventToeflListComponent } from './toefl/toeflExam/event-toefl-list/event-toefl-list.component';\n\n// payment module 관련 component -- RouterModule.forChild는 한개박에 작동이 안되므로\n// auth module애 forChild모드를 적용하면 payment module이 적용이 되지만 page-not-found가 작동 안됨\nimport { PaymentComponent } from './payment/payment.component';\nimport { ShoppingcartComponent } from './payment/shoppingcart/shoppingcart.component';\nimport { PaymentProceedComponent } from './payment/payment-checkout/payment-proceed/payment-proceed.component';\nimport { PaymentNotificationComponent } from './payment/payment-checkout/payment-notification/payment-notification.component';\nimport { OrderSummaryComponent } from './payment/shoppingcart/order-summary/order-summary.component';\nimport { PaymentOrderSummaryComponent } from './payment/payment-checkout/payment-order-summary/payment-order-summary.component';\n\n// 주소창에 아무거나 입력하면 무조건 auth.guard를 작동하여 인증모드로 강제로 forward하는 기능\nimport { AuthGuard } from './auth/auth.guard';\n\nconst APP_ROUTES: Routes = [\n   { path: '', redirectTo: '/home', pathMatch: 'full'},\n   { path: 'home', component: WelcomeComponent  },\n   { path: 'payment', component: PaymentComponent, children: [\n                      {path: 'shoppingcart', component: ShoppingcartComponent, canActivate: [AuthGuard]},\n                      {path: 'checkout/:totalAmount', component: PaymentProceedComponent, canActivate: [AuthGuard]},\n                      {path: 'result', component: PaymentNotificationComponent}\n                  ]\n   },\n   { path: 'teacher', loadChildren: './toefl/teacher/teacher.module#ToeflTeacherModule'},\n   { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES,\n                                  {\n                                    preloadingStrategy: PreloadAllModules\n                                  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\nexport const appRoutingComponent = [\n\n                                    WelcomeComponent,\n                                    HeaderComponent,\n                                    SidenavListComponent,\n                                    EventToeflListComponent,\n\n                                    ToeflListComponent,\n                                    BeginnerToeflListComponent,\n                                    BasicToeflListComponent,\n                                    IntermediateToeflListComponent,\n                                    AdvanceToeflListComponent,\n                                    FooterComponent,\n\n                                    ShortenPipe,\n\n                                    NotFoundComponent,\n                                    PaymentComponent,\n                                    ShoppingcartComponent,\n                                    PaymentProceedComponent,\n                                    PaymentNotificationComponent,\n                                    OrderSummaryComponent,\n                                    PaymentOrderSummaryComponent,\n\n                                   ];\n","module.exports = \"\\n<!--Double navigation-->\\n<header *ngIf=\\\"!mainNavHide\\\">\\n    <!-- Sidebar navigation -->\\n    <mdb-sidenav #sidenav class=\\\"sn-bg-1\\\" [fixed]=\\\"false\\\">\\n       <app-sidenav-list></app-sidenav-list>\\n    </mdb-sidenav>\\n    <!--/. Sidebar navigation -->\\n    <app-header [userName]= 'userName' [isAuth]=\\\"isAuth\\\" [isteacherAuth]=\\\"isteacherAuth\\\" (sidenavToggle)=\\\"sidenav.toggle()\\\"></app-header>\\n</header>\\n\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \".form-light .font-small {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"radio\\\"] + label,\\n.form-light [type=\\\"checkbox\\\"] + label {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"checkbox\\\"] + label:before {\\n  top: 2px;\\n  width: 15px;\\n  height: 15px; }\\n\\n.form-light input[type=\\\"checkbox\\\"] + label:before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 17px;\\n  height: 17px;\\n  z-index: 0;\\n  border-radius: 1px;\\n  margin-top: 2px;\\n  transition: 0.2s; }\\n\\n.form-light input[type=\\\"checkbox\\\"]:checked + label:before {\\n  top: -4px;\\n  left: -3px;\\n  width: 12px;\\n  height: 22px;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: transparent #EB3573 #EB3573 transparent;\\n  -webkit-transform: rotate(40deg);\\n  transform: rotate(40deg);\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform-origin: 100% 100%;\\n  transform-origin: 100% 100%; }\\n\\n.form-light .footer {\\n  border-bottom-left-radius: .3rem;\\n  border-bottom-right-radius: .3rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGlCQUFpQixFQUFBOztBQUVuQjs7RUFFRSxpQkFBaUIsRUFBQTs7QUFFbkI7RUFDRSxRQUFRO0VBQ1IsV0FBVztFQUNYLFlBQVksRUFBQTs7QUFFZDtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxXQUFXO0VBQ1gsWUFBWTtFQUNaLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsZUFBZTtFQUVmLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLHFEQUFxRDtFQUNyRCxnQ0FBZ0M7RUFFaEMsd0JBQXdCO0VBQ3hCLG1DQUFtQztFQUNuQyxtQ0FBbUM7RUFFbkMsMkJBQTJCLEVBQUE7O0FBRTdCO0VBQ0UsZ0NBQWdDO0VBQ2hDLGlDQUFpQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uZm9ybS1saWdodCAuZm9udC1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtOyB9XG5cbi5mb3JtLWxpZ2h0IFt0eXBlPVwicmFkaW9cIl0gKyBsYWJlbCxcbi5mb3JtLWxpZ2h0IFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtOyB9XG5cbi5mb3JtLWxpZ2h0IFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpiZWZvcmUge1xuICB0b3A6IDJweDtcbiAgd2lkdGg6IDE1cHg7XG4gIGhlaWdodDogMTVweDsgfVxuXG4uZm9ybS1saWdodCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxN3B4O1xuICBoZWlnaHQ6IDE3cHg7XG4gIHotaW5kZXg6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgbWFyZ2luLXRvcDogMnB4O1xuICAtd2Via2l0LXRyYW5zaXRpb246IDAuMnM7XG4gIHRyYW5zaXRpb246IDAuMnM7IH1cblxuLmZvcm0tbGlnaHQgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xuICB0b3A6IC00cHg7XG4gIGxlZnQ6IC0zcHg7XG4gIHdpZHRoOiAxMnB4O1xuICBoZWlnaHQ6IDIycHg7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMnB4O1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICNFQjM1NzMgI0VCMzU3MyB0cmFuc3BhcmVudDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0MGRlZyk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQwZGVnKTtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAxMDAlO1xuICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAxMDAlO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDEwMCU7IH1cblxuLmZvcm0tbGlnaHQgLmZvb3RlciB7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IC4zcmVtO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogLjNyZW07IH1cbiJdfQ== */\"","/*\n    이 mainNavChanged Subject은 주 nav menu를 활성화 시키는 역할을 수행한다\n    만일 main nav상태가 false이면 main nav가 활성화 되어 있고 만일 true이면\n    이 main nav는 hide되면서 상대적으로 teacher-nav-header가 활성화 되는 기능이다\n    이기능에서 navStatus가 MainNavModel을 사용하고 있으며\n    다음 3 가지 기능을 수행한다 1) showMainNav를 hide or not\n                          2) logout 점검,\n                          3) teacherLogin 점검\n    또한 로그인 후 사용자 이름을 가져올수 있는 profileInfo정보를 수행하며 특히\n    payment구현시 반드시 prfileInfo()가 localstorage에 저장된 userName을 가지고 와야\n    property 'name' not defined error 가 발생하자 않는다\n    이기능은 또한 routing 시 처음에는 곧바로 welcomComponent가 불러지므로 활성화 되지는 않지만\n    logout/isAuth/teacherLogin/mainNav가 변경되자 마자 작동되는 기능이므로\n    많은 시간을 소비한 곳이므로 잘 기억해두기 바란다\n*/\n\nimport { AuthService_Local } from './auth/auth.service';\nimport { Component, OnInit, ChangeDetectorRef, AfterViewChecked, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UtilityService } from './Utility-shared/utility.service';\nimport { MainNavModel } from './Utility-shared/mainNavChange.model';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { User } from './auth/user.model';\nimport { ShoppingcartService } from './payment/shoppingcart.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewChecked, OnDestroy {\n\n  title = 'app';\n  userInfo: User;\n\n  userName = '';\n  mainNavHide = false;\n  isAuth = false;\n  isteacherAuth = false;\n  val = 0;\n\n  utilitySubscription: Subscription;\n\n  constructor(private utilityService: UtilityService,\n              private authService: AuthService_Local,\n              private router: Router,\n              private shoppingCartService: ShoppingcartService,\n              private changeDetector: ChangeDetectorRef) {}\n\n  ngOnInit() {\n\n    this.utilitySubscription = this.utilityService.mainNavChanged.subscribe((navStatus: MainNavModel) => {\n            this.mainNavHide = navStatus.showMainNav;\n\n            console.log('main nav 상태점검', this.mainNavHide);\n\n            if (navStatus.checkLogoutOrNot) {               // logout상태가 호출되었으므로 모든것이 초기화됨\n\n                                              this.isAuth = false;\n                                              this.isteacherAuth = false;\n            } else if (!navStatus.isTeacherLogin) {              // 일반 사용자 로그인\n                                               this.isAuth = true;\n                                               this.isteacherAuth = false;\n\n            } else {                                        // login상태에서 홈버튼이 click한경우  teacher모드로 기존 토큰이 존재함\n              this.isAuth = true;\n              this.isteacherAuth = true;\n            }\n\n            this.userName = this.authService.getUserName();\n\n          });\n\n          this.router.routeReuseStrategy.shouldReuseRoute = function() {\n                return false;\n          };\n\n\n          this.router.events.subscribe((evt) => {\n              if (evt instanceof NavigationEnd) {\n                  this.router.navigated = false;\n                  window.scrollTo(0, 0);\n              }\n          });\n\n  }\n\n  ngOnDestroy() {\n    this.utilitySubscription.unsubscribe();\n  }\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n}\n","// anglar 순수 modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\n// MDBBootstrap모들\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\nimport { MDBSpinningPreloader } from 'ng-uikit-pro-standard';\n\n// 제 3자에서 제공하는 모듈\nimport { MatDialogModule } from '@angular/material';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxStripeModule } from 'ngx-stripe';\n\n// angular가 제공하는 facebook google 인증을 위한 모듈: angular-6-social-login\nimport { SocialLoginModule, AuthServiceConfig } from 'angular-6-social-login';\n\n// http Module\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// component 모듈\nimport { AppComponent } from './app.component';\n\n// routing 모둘\nimport { AppRoutingModule, appRoutingComponent } from './app-routing.module';\n\n// 사용자 정의 모듈\nimport { ToeflExamModule } from './toefl/toeflExam/toeflexam.module';\nimport { AuthModule } from './auth/auth.module';\n\n// 유틸리티 모듈\nimport { SharedModule } from './shared/shared.module';\n\n// error관련 모둘\nimport { ErrorComponent } from './error/error.component';\nimport { ErrorInterceptor } from './error-interceptor';\n\n// 각종 서비스 모듈\nimport { AuthService_Local } from './auth/auth.service';\nimport { UtilityService } from './Utility-shared/utility.service';\nimport { ShoppingcartService } from './payment/shoppingcart.service';\nimport { PaypalPaymentService } from './payment/paymentAgency-Service/paypal-payment.service';\nimport { StripePaymentService } from './payment/paymentAgency-Service/stripe-payment.service';\nimport { getAuthServiceConfigs } from '../environments/environment';\n\n@NgModule({\n   declarations: [\n    AppComponent,\n    ErrorComponent,\n    appRoutingComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    HttpClientModule,\n    AuthModule,\n    ToeflExamModule,\n    AppRoutingModule,\n    SharedModule,\n    SocialLoginModule,          // facebook google login을 위한 모둘 import\n    NgxStripeModule.forRoot('pk_test_erzDoCmLOPEP1n4tLjvtT7Y2'),\n    ToastrModule.forRoot(),\n    MDBBootstrapModulesPro.forRoot(),\n    MatDialogModule\n   ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  providers: [\n              MDBSpinningPreloader,\n              AuthService_Local,\n              UtilityService,\n              ShoppingcartService,\n              PaypalPaymentService,\n              StripePaymentService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    { provide: AuthServiceConfig, useFactory: getAuthServiceConfigs }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","// angular module\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// 보안 module\nimport { AuthGuard } from './auth.guard';\n\n// routing component module\nimport { AuthenticationComponent } from './authentication.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ProfileEditComponent } from './profile/profile-edit/profile-edit.component';\nimport { PurchasedHistoryComponent } from './profile/purchased-history/purchased-history.component';\nimport { ContactComponent } from './contact/contact.component';\n\nexport const authRoutes: Routes = [\n{ path: 'auth', component: AuthenticationComponent, children: [\n          { path: 'signup', component: SignupComponent },\n          { path: 'login', component: LoginComponent },\n          { path: 'contact', component: ContactComponent},\n          { path: 'profile', component: ProfileEditComponent, canActivate: [AuthGuard] },\n          { path: 'orderHistory', component: PurchasedHistoryComponent, canActivate: [AuthGuard] },\n          { path: 'logout', component: LogoutComponent }\n    ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AuthRoutingModule {}\nexport const authRoutingComponents = [\n                                      AuthenticationComponent,\n                                      SignupComponent,\n                                      LoginComponent,\n                                      ContactComponent,\n                                      ProfileEditComponent,\n                                      PurchasedHistoryComponent,\n                                      LogoutComponent\n                                     ];\n\n","\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nimport { AuthService_Local } from './auth.service';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private authService: AuthService_Local) {}\n\n   canActivate(route: ActivatedRouteSnapshot,\n               state: RouterStateSnapshot\n               ): boolean | Observable<boolean> | Promise<boolean> {\n     if (this.authService.isAuth()) {\n       return true;\n     } else {\n       this.router.navigate(['/auth/login']);\n     }\n  }\n}\n\n","// angular module\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// MDBootstrap module\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\n\n// Google AGM Map 사용하기\nimport { AgmCoreModule } from '@agm/core';\n\n// authRoutingMOdule\nimport { AuthRoutingModule, authRoutingComponents } from './auth-routing.module';\n// 제 3자가 제공한 toaster module\nimport { ToastModule } from 'ng-uikit-pro-standard';\n// 모든 component module에서 공통으로 사용하는 모들\nimport { SharedModule } from './../shared/shared.module';\n\n// 컴포넌트는 만들어 졌으나 아직 코딩이 안된 모듈\nimport { EditUserProfileComponent } from './profile/profile-edit/edit-user-profile/edit-user-profile.component';\nimport { ExamHistoryComponent } from './profile/profile-edit/exam-history/exam-history.component';\nimport { ExamAnalysisComponent } from './profile/profile-edit/exam-analysis/exam-analysis.component';\nimport { ProfileOrderHistoryComponent } from './profile/profile-edit/profile-order-history/profile-order-history.component';\n\n@NgModule({\n  declarations: [\n                  authRoutingComponents,\n                  EditUserProfileComponent,\n                  ExamHistoryComponent,\n                  ExamAnalysisComponent,\n                  ProfileOrderHistoryComponent\n                ],\n  imports: [\n            CommonModule,\n            SharedModule,\n            MDBBootstrapModulesPro.forRoot(),\n            ToastModule.forRoot(),\n            AgmCoreModule.forRoot({\n              apiKey: 'AIzaSyCwMYILY491pwQdKQzCV8XfFT1O0E3aYFo'\n            }),\n            AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { GlobalConstantShare } from '../Utility-shared/globalConstantShare';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs/Subject';\n\nimport { UtilityService } from './../Utility-shared/utility.service';\nimport { MainNavModel } from './../Utility-shared/mainNavChange.model';\nimport { User } from './user.model';\n\nimport { Shoppingcart } from '../payment/model/shoppingcart.model';\nimport { PaidToeflList } from '../payment/model/paidToeflLists.model';\nimport { ProfileInfo } from './profile.model';\n\n\n@Injectable()\nexport class AuthService_Local {\n\n  urlConfig = GlobalConstantShare.httpUrl;     // 현재 설정ehls url 주소 설정\n  authChange = new Subject<boolean>();\n  teacherAuth = new Subject<boolean>();\n\n  mainNavModel: MainNavModel;\n\n  userName: string;             // 메인 header에 필요한 사용자 이름을 가조오기위한 모델\n  user: User;                             // 사용자에 관한 모든정보를 가져오기 위한 user 모델\n\n  currentUser: User;\n\n  clearPaidToeflLists: PaidToeflList[] = [];\n  clearShoppingCartLists: Shoppingcart[] = [];\n  clearProfileInfoPassed: ProfileInfo = null;\n\n  isAuthenticated = false;\n  isteacherAuthenticated = false;\n\n  public shoppingCartLists = new Subject<Shoppingcart[]>();\n  public paidToeflLists = new Subject<PaidToeflList[]>();\n  public userInfoList = new Subject<User>();\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private utilityService: UtilityService) {}\n  signup(user: User) {\n\n        this.utilityService.loadingStateChanged.next(true);\n        this.http.post\n                      <{ message: string,\n                          token: string,\n                          user: User\n                          // userName: string,\n                          // permissionTag: string,\n                          // shoppingCartLists: Shoppingcart[],\n                          // paidToeflLists: PaidToeflList[]\n                        }>\n                        (this.urlConfig + '/user/signup', user)\n\n                        .subscribe((result) => {\n\n                                localStorage.setItem('token', result.token);\n                                localStorage.setItem('userName', result.user.name);\n                                this.currentUser = result.user;\n                                this.authSuccess(result.user.permissionTag);\n                                this.utilityService.loadingStateChanged.next(false);\n                                this.shoppingCartLists.next(result.user.shoppingCartLists);\n                                this.paidToeflLists.next(result.user.paidToeflLists);\n                                this.router.navigate(['/']);\n                    },\n                    error => { this.handleError( error ); });\n  }\n\n  login(user: User) {\n\n        this.utilityService.loadingStateChanged.next(true);\n        this.http.post\n                      <{ message: string,\n                          token: string,\n                          user: User\n                          // userName: string,\n                          // permissionTag: string,\n                          // shoppingCartLists: Shoppingcart[],\n                          // paidToeflLists: PaidToeflList[]\n                        }>\n                        (this.urlConfig + '/user/login', user)\n\n                        .subscribe((result) => {\n                                localStorage.setItem('token', result.token);\n                                localStorage.setItem('userName', result.user.name);\n                                this.currentUser = result.user;\n                                this.authSuccess(result.user.permissionTag);\n                                this.utilityService.loadingStateChanged.next(false);\n                                this.shoppingCartLists.next(result.user.shoppingCartLists);\n                                this.userInfoList.next(result.user);\n                                this.paidToeflLists.next(result.user.paidToeflLists);\n                                this.router.navigate(['/']);\n                    },\n                    error => { this.handleError( error ); });\n              }\n\n\n  sociaLogin(user: User) {\n\n    this.utilityService.loadingStateChanged.next(true);\n    this.http.post\n                  <{ message: string,\n                      token: string,\n                      user: User\n                      // userName: string,\n                      // permissionTag: string,\n                      // shoppingCartLists: Shoppingcart[],\n                      // paidToeflLists: PaidToeflList[]\n                    }>\n                    (this.urlConfig + '/user/sociaLogin', user)\n\n                    .subscribe((result) => {\n                            localStorage.setItem('token', result.token);\n                            localStorage.setItem('userName', result.user.name);\n                            this.currentUser = result.user;\n                            this.authSuccess(result.user.permissionTag);\n                            this.utilityService.loadingStateChanged.next(false);\n                            this.shoppingCartLists.next(result.user.shoppingCartLists);\n                            this.userInfoList.next(result.user);\n                            this.paidToeflLists.next(result.user.paidToeflLists);\n                            this.router.navigate(['/']);\n                },\n                error => { this.handleError( error ); });\n          }\n\n  private handleError(error) {\n    console.log('에러 메세지', error);\n    this.authChange.next(false);\n    this.utilityService.loadingStateChanged.next(false);\n    return;\n  }\n\n  private authSuccess(teacherAuth: string) {\n    this.authChange.next(true);\n    console.log(this.authChange);\n\n        if (localStorage.getItem('token') !== null) {\n            this.isAuthenticated = true;\n        }\n        if (teacherAuth === 'teacher') {\n          this.teacherAuth.next(true);\n          this.isteacherAuthenticated = true;\n        } else {\n          this.teacherAuth.next(false);\n          this.isteacherAuthenticated = false;\n        }\n        this.router.navigate(['/']);\n  }\n\n  logout() {\n              localStorage.removeItem('token');\n              localStorage.removeItem('userName');\n\n              this.authChange.next(false);                             // 사용자 인증 logout\n              this.teacherAuth.next(false);                            // teacher permission 초기화\n              this.isAuthenticated = false;                             // 인증 취소\n              this.isteacherAuthenticated = false;                      // 관리자 선생님 인증 취소\n\n              this.paidToeflLists.next(this.clearPaidToeflLists);            // paid ToeflList 초기화\n              this.shoppingCartLists.next(this.clearShoppingCartLists);      // shopping cart list 초기화\n\n              this.mainNavModel = new MainNavModel(false, true);             // 인증 clear\n\n              this.utilityService.mainNavChanged.next(this.mainNavModel);    // main 화면 navigation활성화\n              this.router.navigate(['/']);                                   // main 홈페이지 화면으로 돌아감\n  }\n\n  isAuth() {\n              console.log(this.isAuthenticated);\n              return this.isAuthenticated;\n  }\n\n\n  isTecherAuth() {                                                 // welcome component에서 teacher인증여부를 각 tabl에 injection하여\n              return this.isteacherAuthenticated;                            // 선생님 관리자 모드인 경우 장바구니버튼과 purchase버튼을 보여주지 않을목적으로 설정됨\n  }\n\n  getUserName() {\n              console.log('현재 사용자 정보');\n              this.userName = localStorage.getItem('userName');\n  return this.userName;\n  }\n\n  getUserInfo() {\n  return this.currentUser;\n  }\n\n}\n","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  template: `\n         <router-outlet></router-outlet>\n  `\n})\nexport class AuthenticationComponent {\n\nconstructor() {}\n\n}\n","module.exports = \"<!-- Section: Contact v.1 -->\\n<section class=\\\"view\\\">\\n\\n  <!-- Section heading -->\\n  <h2 class=\\\"h1-responsive font-weight-bold text-center my-5\\\">Contact us</h2>\\n  <!-- Section description -->\\n  <p class=\\\"text-center w-responsive mx-auto pb-5\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.\\n    Fugit, error amet numquam iure provident voluptate esse quasi, veritatis totam voluptas nostrum quisquam\\n    eum porro a pariatur veniam.</p>\\n\\n<div class=\\\"col-md-10 mx-auto\\\">\\n  <!-- Grid row -->\\n      <div class=\\\"row\\\">\\n          <!-- Grid column -->\\n        <div class=\\\"col-md-5 mb-lg-0\\\">\\n          <mdb-card>\\n\\n            <mdb-card-body>\\n              <!--Header-->\\n              <div class=\\\"form-header blue accent-1\\\">\\n                <h3>\\n                  <i class=\\\"fas fa-envelope\\\"></i> Write to us:</h3>\\n              </div>\\n\\n              <p>We'll write rarely, but only the best content.</p>\\n              <br>\\n\\n              <!--Body-->\\n              <div class=\\\"md-form\\\">\\n                <i class=\\\"fas fa-user prefix grey-text\\\"></i>\\n                <input mdbInputDirective type=\\\"text\\\" id=\\\"form3\\\" class=\\\"form-control\\\">\\n                <label for=\\\"form3\\\">Your name</label>\\n              </div>\\n\\n              <div class=\\\"md-form\\\">\\n                <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\n                <input mdbInputDirective type=\\\"text\\\" id=\\\"form2\\\" class=\\\"form-control\\\">\\n                <label for=\\\"form2\\\">Your email</label>\\n              </div>\\n\\n              <div class=\\\"md-form\\\">\\n                <i class=\\\"fas fa-tag prefix grey-text\\\"></i>\\n                <input mdbInputDirective type=\\\"text\\\" id=\\\"form32\\\" class=\\\"form-control\\\">\\n                <label for=\\\"form34\\\">Subject</label>\\n              </div>\\n\\n              <div class=\\\"md-form\\\">\\n                <i class=\\\"fas fa-pencil-alt prefix grey-text\\\"></i>\\n                <textarea mdbInputDirective type=\\\"text\\\" id=\\\"form8\\\" class=\\\"md-textarea\\\"></textarea>\\n                <label for=\\\"form8\\\">Icon Prefix</label>\\n              </div>\\n\\n              <div class=\\\"text-center\\\">\\n                <button mdbBtn color=\\\"light-blue\\\" class=\\\"waves-light\\\" mdbWavesEffect>Submit</button>\\n              </div>\\n\\n            </mdb-card-body>\\n\\n          </mdb-card>\\n          <!--Form with header-->\\n\\n        </div>\\n        <!-- Grid column -->\\n  <!--Grid column-->\\n  <div class=\\\"col-lg-7\\\">\\n\\n    <!--Google map-->\\n    <agm-map [zoom]=\\\"16\\\" class=\\\"z-depth-1-half map-container\\\" style=\\\"height: 400px;\\\"[latitude]=\\\"map.lat\\\" [longitude]=\\\"map.lng\\\">\\n      <agm-marker [latitude]=\\\"map.lat\\\" [longitude]=\\\"map.lng\\\"></agm-marker>\\n    </agm-map>\\n\\n    <br>\\n    <!--Buttons-->\\n    <div class=\\\"row text-center\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <a mdbBtn floating=\\\"true\\\" color=\\\"blue\\\" class=\\\"accent-1 waves-light\\\" mdbWavesEffect>\\n          <i class=\\\"fas fa-map-marked\\\"></i>\\n        </a>\\n        <p>San Francisco, CA 94126</p>\\n        <p>United States</p>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <a mdbBtn floating=\\\"true\\\" color=\\\"blue\\\" class=\\\"accent-1 waves-light\\\" mdbWavesEffect>\\n          <i class=\\\"fas fa-phone\\\"></i>\\n        </a>\\n        <p>+ 01 234 567 89</p>\\n        <p>Mon - Fri, 8:00-22:00</p>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <a mdbBtn floating=\\\"true\\\" color=\\\"blue\\\" class=\\\"accent-1 waves-light\\\" mdbWavesEffect>\\n          <i class=\\\"fas fa-envelope\\\"></i>\\n        </a>\\n        <p>info@gmail.com</p>\\n        <p>sale@gmail.com</p>\\n      </div>\\n    </div>\\n\\n      </div>\\n\\n    </div>\\n  <!-- Grid row -->\\n </div>\\n</section>\\n<!-- Section: Contact v.1 -->\\n\"","module.exports = \".view {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\\n.map-container-section {\\n  overflow: hidden;\\n  padding-bottom: 56.25%;\\n  position: relative;\\n  height: 0; }\\n\\n.map-container-section iframe {\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  width: 100%;\\n  position: absolute; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2F1dGgvY29udGFjdC9jb250YWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsZUFBZTtFQUNmLFNBQVM7RUFDVCxPQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVMsRUFBQTs7QUFHWDtFQUNFLGdCQUFlO0VBQ2Ysc0JBQXFCO0VBQ3JCLGtCQUFpQjtFQUNqQixTQUFRLEVBQUE7O0FBRVY7RUFDRSxPQUFNO0VBQ04sTUFBSztFQUNMLFlBQVc7RUFDWCxXQUFVO0VBQ1Ysa0JBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2NvbnRhY3QvY29udGFjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnZpZXcge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNXJlbTtcbiAgbGVmdDowO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xufVxuXG4ubWFwLWNvbnRhaW5lci1zZWN0aW9uIHtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBwYWRkaW5nLWJvdHRvbTo1Ni4yNSU7XG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xuICBoZWlnaHQ6MDtcbn1cbi5tYXAtY29udGFpbmVyLXNlY3Rpb24gaWZyYW1lIHtcbiAgbGVmdDowO1xuICB0b3A6MDtcbiAgaGVpZ2h0OjEwMCU7XG4gIHdpZHRoOjEwMCU7XG4gIHBvc2l0aW9uOmFic29sdXRlO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AgmCoreModule } from '@agm/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  map = {\n    lat: 37.368889,\n    lng: 126.929667\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n<!--Main Layout-->\\n\\n<div class=\\\"view\\\">\\n        <div class=\\\"full-bg-img\\\">\\n            <div class=\\\"mask rgba-black-strong flex-center\\\">\\n                <div class=\\\"container\\\">\\n                        <div class=\\\"form-gradient col-md-6 mx-auto\\\">\\n                                <!--Form with header-->\\n                                <div class=\\\"card\\\">\\n\\n                                    <!--Header-->\\n                                    <div class=\\\"header pt-3 blue-gradient z-depth-2\\\">\\n\\n                                        <div class=\\\"row d-flex justify-content-center\\\">\\n                                            <h3 class=\\\"white-text mb-3 pt-3 font-weight-bold\\\">Log in</h3>\\n                                        </div>\\n\\n                                        <div class=\\\"row mt-2 mb-3 d-flex justify-content-center\\\">\\n                                            <!--Facebook-->\\n                                            <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" (click)=\\\"socialLogin('facebook')\\\" mdbWavesEffect><i class=\\\"fa fa-facebook\\\"></i></a>\\n                                            <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-twitter\\\"></i></a>\\n                                            <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" (click)=\\\"socialLogin('google')\\\" mdbWavesEffect><i class=\\\"fa fa-google-plus\\\"></i></a>\\n                                        </div>\\n\\n                                    </div>\\n                                    <!--Header-->\\n\\n                                    <div class=\\\"card-body mx-4 mt-4\\\">\\n                                        <!-- SigUp form -->\\n                                        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                            <div class=\\\"md-form\\\">\\n                                            <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n                                            <input\\n                                                    type=\\\"email\\\"\\n                                                    formControlName=\\\"email\\\"\\n                                                    id=\\\"email\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    mdbInputDirective\\n                                            >\\n                                            <label for=\\\"email\\\">Your email</label>\\n                                            </div>\\n                                            <div class=\\\"md-form pb-1 pb-md-3\\\">\\n                                                <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n                                                <input\\n                                                    type=\\\"password\\\"\\n                                                    formControlName=\\\"password\\\"\\n                                                    id=\\\"password\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    mdbInputDirective\\n                                                >\\n                                                <label for=\\\"Form-pass3\\\">Your password</label>\\n                                                <p class=\\\"font-small grey-text d-flex justify-content-end\\\">Forgot <a href=\\\"#\\\" class=\\\"dark-grey-text ml-2 font-weight-bold\\\"> Password?</a></p>\\n                                            </div>\\n                                            <!--Grid row-->\\n                                            <div class=\\\"row d-flex align-items-center mb-4\\\">\\n\\n                                                <!--Grid column-->\\n                                                <div class=\\\"col-md-1 col-md-5 d-flex align-items-start\\\">\\n                                                    <div class=\\\"text-center\\\">\\n                                                        <button *ngIf=\\\"!isLoading\\\" type=\\\"submit\\\" class=\\\"btn btn-grey btn-rounded z-depth-1\\\">Log in</button>\\n\\n                                                        <!--Big blue-->\\n                                                        <mdb-spinner *ngIf=\\\"isLoading\\\" spinnerType=\\\"big crazy\\\"></mdb-spinner>\\n\\n                                                    </div>\\n                                                </div>\\n                                                <!--Grid column-->\\n\\n                                                <!--Grid column-->\\n                                                <div class=\\\"col-md-7\\\">\\n                                                    <p class=\\\"font-small grey-text d-flex justify-content-start mt-1\\\">Don't have an account? <a href=\\\"#\\\" class=\\\"dark-grey-text ml-3 font-weight-bold\\\"> Sign up</a></p>\\n                                                </div>\\n                                                <!--Grid column-->\\n\\n                                            </div>\\n                                            <!--Grid row-->\\n                                        </form>\\n                                        <!--/Form with header-->\\n                                    </div>\\n                                </div>\\n                        </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n</div>\\n\\n<!--/Main layout-->\\n\"","module.exports = \".view {\\n  background: url('students.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.form-gradient .font-small {\\n  font-size: 0.8rem; }\\n\\n.form-gradient .header {\\n  border-top-left-radius: .3rem;\\n  border-top-right-radius: .3rem; }\\n\\n.form-gradient input[type=text]:focus:not([readonly]) {\\n  border-bottom: 1px solid #fd9267;\\n  box-shadow: 0 1px 0 0 #fd9267; }\\n\\n.form-gradient input[type=text]:focus:not([readonly]) + label {\\n  color: #4f4f4f; }\\n\\n.form-gradient input[type=password]:focus:not([readonly]) {\\n  border-bottom: 1px solid #fd9267;\\n  box-shadow: 0 1px 0 0 #fd9267; }\\n\\n.form-gradient input[type=password]:focus:not([readonly]) + label {\\n  color: #4f4f4f; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1REFBc0U7RUFDdEUsc0JBQXNCO0VBQ3RCLGFBQWEsRUFBQTs7QUFHZjtFQUNFLGlCQUFpQixFQUFBOztBQUVuQjtFQUNFLDZCQUE2QjtFQUM3Qiw4QkFBOEIsRUFBQTs7QUFFaEM7RUFDRSxnQ0FBZ0M7RUFFaEMsNkJBQTZCLEVBQUE7O0FBRS9CO0VBQ0UsY0FBYyxFQUFBOztBQUVoQjtFQUNFLGdDQUFnQztFQUVoQyw2QkFBNkIsRUFBQTs7QUFFL0I7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZpZXcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi8uLi9hc3NldHMvc3R1ZGVudHMuanBnXCIpbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbi5mb3JtLWdyYWRpZW50IC5mb250LXNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjhyZW07IH1cblxuLmZvcm0tZ3JhZGllbnQgLmhlYWRlciB7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IC4zcmVtO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogLjNyZW07IH1cblxuLmZvcm0tZ3JhZGllbnQgaW5wdXRbdHlwZT10ZXh0XTpmb2N1czpub3QoW3JlYWRvbmx5XSkge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZkOTI2NztcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDFweCAwIDAgI2ZkOTI2NztcbiAgYm94LXNoYWRvdzogMCAxcHggMCAwICNmZDkyNjc7IH1cblxuLmZvcm0tZ3JhZGllbnQgaW5wdXRbdHlwZT10ZXh0XTpmb2N1czpub3QoW3JlYWRvbmx5XSkgKyBsYWJlbCB7XG4gIGNvbG9yOiAjNGY0ZjRmOyB9XG5cbi5mb3JtLWdyYWRpZW50IGlucHV0W3R5cGU9cGFzc3dvcmRdOmZvY3VzOm5vdChbcmVhZG9ubHldKSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmQ5MjY3O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMXB4IDAgMCAjZmQ5MjY3O1xuICBib3gtc2hhZG93OiAwIDFweCAwIDAgI2ZkOTI2NzsgfVxuXG4uZm9ybS1ncmFkaWVudCBpbnB1dFt0eXBlPXBhc3N3b3JkXTpmb2N1czpub3QoW3JlYWRvbmx5XSkgKyBsYWJlbCB7XG4gIGNvbG9yOiAjNGY0ZjRmOyB9XG4iXX0= */\"","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { AuthService_Local } from './../auth.service';\nimport { AuthService, FacebookLoginProvider, GoogleLoginProvider } from 'angular-6-social-login';   // google and facebook 인증위한 서비스\nimport { UtilityService } from './../../Utility-shared/utility.service';\n\nimport { User } from './../user.model';\n\nimport 'rxjs/add/operator/catch';\nimport { Subscription } from 'rxjs/Subscription';\nimport { PaidToeflList } from 'src/app/payment/model/paidToeflLists.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup;\n  pwdPattern = '^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{6,12}$';\n\n  teacherAuth = false;\n  isLoading = false;\n\n  private loadingSubscriptiion: Subscription;\n\n  constructor( private fb: FormBuilder,\n               private authService: AuthService_Local,\n               private socialAuthService: AuthService,\n               private utilityService: UtilityService\n              ) {}\n\n  ngOnInit() {\n\n    console.log('this is the login clicked');\n    this.loadingSubscriptiion = this.utilityService.loadingStateChanged.subscribe(loadingStatus => {\n      this.isLoading = loadingStatus;\n    });\n\n    this.loginForm = this.fb.group({\n                      email: ['', Validators.required],\n                      password: ['', [Validators.required,\n                                      Validators.minLength(6)\n                                ]]\n                    });\n    }\n\n  onSubmit() {\n    console.log(this.loginForm.value.email);\n    const user = new User(this.loginForm.value.email,\n                          this.loginForm.value.password);\n\n    this.authService.login(user);\n    this.loginForm.reset();\n  }\n\n  socialLogin( socialPlatform: string ) {\n    let socialPlaformProvider;\n    const currentDate = new Date();\n    const updatedDate = new Date();\n\n    const permissionTag = 'student';\n    const toeflId = '';\n    const paymentId = '';\n\n    const paidToeflLists: PaidToeflList[] = [];\n    const shoppingCartLists: any[] = [];\n    const wishLists: any[] = [];\n\n    if ( socialPlatform === 'facebook' ) {\n      socialPlaformProvider = FacebookLoginProvider.PROVIDER_ID;\n    } else if ( socialPlatform === 'google') {\n      socialPlaformProvider = GoogleLoginProvider.PROVIDER_ID;\n    }\n\n    this.socialAuthService.signIn( socialPlaformProvider ).then((userData) => {\n\n\n        const user = new User(userData.email,\n                              userData.id,\n                              userData.name,\n                              permissionTag,\n                              currentDate,\n                              updatedDate,\n                              userData.provider);\n\n            console.log(socialPlatform + ' sign in data : ', userData);\n            console.log('사용자 아이디: ', userData.id);\n            console.log('사용자 이름: ', userData.name);\n            console.log('사용자 이메일: ', userData.email);\n            console.log('사용자 token: ', userData.token);\n            console.log('사용자 image: ', userData.image);\n            console.log('사용자 provider: ', userData.provider);\n\n            this.authService.sociaLogin(user);\n\n    });\n  }\n  ngOnDestroy() {\n    this.loadingSubscriptiion.unsubscribe();\n  }\n}\n","module.exports = \"\\n<!--Main Layout-->\\n\\n<div class=\\\"view\\\">\\n    <div class=\\\"full-bg-img\\\">\\n        <div class=\\\"mask rgba-black-strong flex-center\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"card col-md-4 mx-auto\\\">\\n                    <h6 class=\\\"card-header primary-color white-text text-center rounded z-depth-2\\\">LogOut</h6>\\n                    <div class=\\\"card-body text-center\\\">\\n                        <p class=\\\"card-text text-center\\\">Do you really want to logout?</p>\\n                        <br>\\n                          <button class=\\\"btn btn-primary waves-light z-depth-2\\\" mdbWavesEffect (click)=\\\"onLogout()\\\" ><i class=\\\"fa fa-sign-out mr-1\\\"></i>Yes</button>\\n                          <button class=\\\"btn btn-default waves-light z-depth-2\\\" mdbWavesEffect\\n                                  \\n                          (click)=\\\"onStay()\\\">No<i class=\\\"fa fa-sign-in ml-1\\\"></i></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<!--/Main layout-->\\n\"","module.exports = \".view {\\n  background: url('university.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.navbar {\\n  z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2F1dGgvbG9nb3V0L2xvZ291dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLHlEQUF5RTtFQUN6RSxzQkFBc0I7RUFDdEIsYUFBYSxFQUFBOztBQUVmO0VBQ0UsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dvdXQvbG9nb3V0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4udmlldyB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uLy4uL2Fzc2V0cy91bml2ZXJzaXR5LmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cbi5uYXZiYXIge1xuICB6LWluZGV4OiAxO1xufVxuIl19 */\"","import { Router, ActivatedRoute, RoutesRecognized } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { AuthService_Local } from '../auth.service';\n\nimport { filter, pairwise } from 'rxjs/operators';\nimport { UtilityService } from '../../Utility-shared/utility.service';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent {\n\n  constructor(private location: Location,\n              private authService: AuthService_Local,\n              private utilityService: UtilityService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n\n  onLogout() {\n    this.utilityService.audioPlaySevice('', '0', false);\n    this.authService.logout();\n\n  }\n\n  onStay() {\n\n    this.location.back();\n  }\n}\n","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-11 mx-auto\\\">\\n      <mdb-card class=\\\"testimonial-card\\\">\\n        <div class=\\\"card-up indigo lighten-1\\\">\\n        </div>\\n        <div class=\\\"avatar mx-auto\\\">\\n          <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/img%20%2810%29.jpg\\\" class=\\\"rounded-circle\\\">\\n        </div>\\n\\n        <mdb-card-body>\\n\\n          <mdb-card-title>\\n            <h4>{{ userInfo.name }}</h4>\\n          </mdb-card-title>\\n          <hr>\\n          <p>Email: {{ userInfo.email }}</p>\\n          <hr>\\n          <p>Password 변경 부위</p>\\n          <hr>\\n          <p>Current Address 삽입부위</p>\\n          <hr>\\n          <p>Shipping Address 삽입부위</p>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZS9wcm9maWxlLWVkaXQvZWRpdC11c2VyLXByb2ZpbGUvZWRpdC11c2VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../../user.model';\n\n@Component({\n  selector: 'app-edit-user-profile',\n  templateUrl: './edit-user-profile.component.html',\n  styleUrls: ['./edit-user-profile.component.scss']\n})\nexport class EditUserProfileComponent {\n\n  @Input() userInfo: User;\n\n  constructor() { }\n\n}\n","module.exports = \"<p>\\n  exam-analysis works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZS9wcm9maWxlLWVkaXQvZXhhbS1hbmFseXNpcy9leGFtLWFuYWx5c2lzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exam-analysis',\n  templateUrl: './exam-analysis.component.html',\n  styleUrls: ['./exam-analysis.component.scss']\n})\nexport class ExamAnalysisComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  exam-history works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZS9wcm9maWxlLWVkaXQvZXhhbS1oaXN0b3J5L2V4YW0taGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exam-history',\n  templateUrl: './exam-history.component.html',\n  styleUrls: ['./exam-history.component.scss']\n})\nexport class ExamHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"view\\\">\\n\\n        <div class=\\\"row t-1\\\">\\n            <div class=\\\"col-md-11 p-0 mx-auto\\\">\\n                    <mdb-tabset #staticTabs [buttonClass]=\\\"'md-tabs tabs-6 pills-secondary blue lighten-2'\\\" [contentClass]=\\\"''\\\">\\n\\n                            <mdb-tab heading=\\\"Edit User Profile\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <br>\\n                                        <app-edit-user-profile [userInfo]=\\\"userInfo\\\"></app-edit-user-profile>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                            <mdb-tab heading=\\\"Exam History\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 mx-auto\\\">\\n                                        <br>\\n                                        <app-exam-history></app-exam-history>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                            <mdb-tab heading=\\\"Exam Analysis\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 mx-auto\\\">\\n                                        <br>\\n                                       <app-exam-analysis></app-exam-analysis>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                            <mdb-tab heading=\\\"Exam Order Histroy\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 mx-auto\\\">\\n                                        <br>\\n                                        <app-profile-order-history [paidToeflLists]=\\\"paidToeflLists\\\" [numberOfPaginators]=\\\"numberOfPaginators\\\" [paginators]=\\\"paginators\\\" [totalAmount]=\\\"totalAmount\\\"></app-profile-order-history>\\n                                    </div>\\n                                </div>\\n                            </mdb-tab>\\n\\n                    </mdb-tabset>\\n            </div>\\n        </div>\\n        <div class=\\\"row t-1\\\">\\n          <div class=\\\"col-md-11 text-center mx-auto\\\">\\n              <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"onReturn()\\\" mdbWavesEffect><mdb-icon icon=\\\"magic\\\" class=\\\"mr-1\\\"></mdb-icon>Confirmation</button>\\n          </div>\\n        </div>\\n</div>\\n\"","module.exports = \".view {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2F1dGgvcHJvZmlsZS9wcm9maWxlLWVkaXQvcHJvZmlsZS1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsZUFBZTtFQUNmLFNBQVM7RUFDVCxPQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZS9wcm9maWxlLWVkaXQvcHJvZmlsZS1lZGl0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4udmlldyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA1cmVtO1xuICBsZWZ0OjA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthService_Local } from '../../auth.service';\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { PaidToeflList } from './../../../payment/model/paidToeflLists.model';\n\nimport { Router } from '@angular/router';\nimport { User } from '../../user.model';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.scss']\n})\nexport class ProfileEditComponent implements OnInit {\n\n\n  userName: string = null;\n  userInfo: User;\n  userInfoSubscription: Subscription;\n\n  itemsPerPage = 3;\n  numberOfPaginators: number;\n  paginators: Array<any> = [];\n\n  currentDate = new Date();\n  totalAmount = 0;\n\n  paidToeflLists: PaidToeflList[] = [];\n\n  constructor(private authService: AuthService_Local,\n              private router: Router,\n              private shoppingCartService: ShoppingcartService) { }\n\n  ngOnInit() {\n          this.userInfo = this.authService.getUserInfo();        // 로그인한 사용자 정보 가저오기\n          console.log('처음 시동시 사용자 정보', this.userInfo);\n\n// 만일 userInfo가 없으면 paypal이나 stripe에서 결재후 사용자 정보를 받아야함\n          if (!this.userInfo) {\n               this.userInfo = this.shoppingCartService.getUserInfoListFromShoppingCartService();\n               this.userName = this.userInfo.name;\n               console.log('결재후 다시 되돌아 온 사용자 정보', this.userInfo.name);\n          } else {\n               this.userName = this.userInfo.name;\n          }\n\n         this.paidToeflLists = this.shoppingCartService.getPaidToefltLists();\n                  if ( this.paidToeflLists.length !== 0 ) {\n                    for (const paidToeflitem of this.paidToeflLists) {\n                      this.totalAmount += paidToeflitem.examPrice;\n                    }\n                    this.calculatePagenator(this.paidToeflLists);\n                  }\n  }\n\ncalculatePagenator(paidToeflists) {\n\n      // 모든 Paid Toefl List명단에 관한 pagenator 산출\n           if (paidToeflists.length % this.itemsPerPage === 0) {\n            this.numberOfPaginators = Math.floor(paidToeflists.length / this.itemsPerPage);\n            } else {\n            this.numberOfPaginators = Math.floor(paidToeflists.length / this.itemsPerPage + 1);\n           }\n\n            for (let i = 1; i <= this.numberOfPaginators; i++) {\n                  this.paginators.push(i);\n            }\n}\n\nonReturn() {\n  this.router.navigate(['/']);\n}\n\n}\n","module.exports = \"\\n    <div class=\\\"card card-cascade narrower mt-0\\\">\\n        <table class=\\\"table table-hover table-responsive-md mb-0 text-center\\\">\\n            <thead>\\n            <tr>\\n                <th scope=\\\"th-lg\\\">Exam No<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examNo')\\\"></mdb-icon></th>\\n                <th class=\\\"th-lg\\\">Exam Type</th>\\n                <th class=\\\"th-lg\\\">Exam Level<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examLevel')\\\"></mdb-icon></th>\\n                <th class=\\\"th-lg\\\">Purchased Price<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examPrice')\\\"></mdb-icon></th>\\n                <th class=\\\"th-lg\\\">Purchased Date</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let paidToeflItem of paidToeflLists.slice().reverse(); let myIndex = index\\\">\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examNo}}</td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">\\n                        <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\\\"\\n                        class=\\\"avatar rounded-circle z-depth-1-half\\\"></td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examLevel}}</td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examPrice | currency: \\\"USD\\\"}}</td>\\n                <td *ngIf=\\\"myIndex >= firstVisibleIndex && myIndex <= lastVisibleIndex\\\" class=\\\"align-middle\\\">2018.08.23</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n\\n    <hr class=\\\"my-0\\\">\\n\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <nav class=\\\"my-4 pt-2\\\">\\n        <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n          <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n            <a class=\\\"page-link\\\">First</a>\\n          </li>\\n          <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n            <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n              <span aria-hidden=\\\"true\\\">&laquo;</span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n          </li>\\n          <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n              <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n          </li>\\n          <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n            <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n              <span aria-hidden=\\\"true\\\">&raquo;</span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </li>\\n          <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n            <a class=\\\"page-link\\\">Last</a>\\n          </li>\\n\\n        </ul>\\n      </nav>\\n\\n\\n    </div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZS9wcm9maWxlLWVkaXQvcHJvZmlsZS1vcmRlci1oaXN0b3J5L3Byb2ZpbGUtb3JkZXItaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit,  ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { PaidToeflList } from './../../../../payment/model/paidToeflLists.model';\n\n@Component({\n  selector: 'app-profile-order-history',\n  templateUrl: './profile-order-history.component.html',\n  styleUrls: ['./profile-order-history.component.scss']\n})\nexport class ProfileOrderHistoryComponent implements OnInit {\n\n  @Input() paidToeflLists: PaidToeflList[];\n  @Input() totalAmount: number;\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any> = [];\n\n  // tab 페이지 관련 변수설정 영역\n    @ViewChildren('pages') pages: QueryList<any>;\n    itemsPerPage = 3;\n    numberOfVisiblePaginators = 10;\n\n    activePage = 1;\n    firstVisibleIndex = 1;\n    lastVisibleIndex: number = this.itemsPerPage;\n    firstVisiblePaginator = 0;\n    lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n  constructor(private ref: ElementRef) { }\n\n  private sorted = false;\n  ngOnInit() {}\n\n\n  sortBy(by: string | any): void {\n\n    this.paidToeflLists.sort((a: any, b: any) => {\n          if (a[by] < b[by]) {\n            return this.sorted ? 1 : -1;\n          }\n          if (a[by] > b[by]) {\n            return this.sorted ? -1 : 1;\n          }\n          return 0;\n    });\n\n    this.sorted = !this.sorted;\n  }\n\n  changePage(event: any) {\n    if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n        this.activePage = +event.target.text;\n        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n  }\n  nextPage(event: any) {\n      if (this.pages.last.nativeElement.classList.contains('active')) {\n          if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n          } else {\n                this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                this.lastVisiblePaginator = this.numberOfPaginators;\n          }\n      }\n\n      this.activePage += 1;\n      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n  previousPage(event: any) {\n    if (this.pages.first.nativeElement.classList.contains('active')) {\n          if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n              this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n              this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n          } else {\n              this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n              this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n          }\n    }\n\n      this.activePage -= 1;\n      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n  firstPage() {\n      this.activePage = 1;\n      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n      this.firstVisiblePaginator = 0;\n      this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n  }\n  lastPage() {\n    this.activePage = this.numberOfPaginators;\n    this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n    this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n    if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n        this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n        this.lastVisiblePaginator = this.numberOfPaginators;\n    } else {\n        this.lastVisiblePaginator = this.numberOfPaginators;\n        this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                      (this.numberOfPaginators % this.numberOfVisiblePaginators);\n    }\n  }\n}\n","module.exports = \"\\n<div class=\\\"view\\\">\\n\\n  <div class=\\\"col-md-11 mx-auto\\\">\\n    <mdb-card cascade=\\\"true\\\" narrower=\\\"true\\\">\\n        <div class=\\\"view-cascade gradient-card-header blue-gradient narrower z-depth-1-half\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1\\\">\\n                <div class=\\\"text-left\\\">\\n                    <a mdbBtn floating=\\\"true\\\" size=\\\"sm\\\" gradient=\\\"blue\\\" (click)=\\\"onReturn()\\\" mdbWavesEffect><mdb-icon icon=\\\"angle-double-left\\\"></mdb-icon></a>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-11 p-3\\\">\\n                <div class=\\\"text-center\\\">\\n                    <h4 class=\\\"white-text font-weight-bold text-uppercase mb-0\\\">\\n                        Table with pagination</h4>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      <div class=\\\"px-4\\\">\\n        <table class=\\\"table table-hover table-responsive-md mb-0 text-center\\\">\\n            <thead>\\n            <tr>\\n              <th scope=\\\"th-lg\\\">Exam No<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examNo')\\\"></mdb-icon></th>\\n              <th class=\\\"th-lg\\\">Exam Type</th>\\n              <th class=\\\"th-lg\\\">Exam Level<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examLevel')\\\"></mdb-icon></th>\\n              <th class=\\\"th-lg\\\">Purchased Price<mdb-icon class=\\\"ml-1\\\" icon=\\\"sort\\\" (click)=\\\"sortBy('examPrice')\\\"></mdb-icon></th>\\n              <th class=\\\"th-lg\\\">Purchased Date</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let paidToeflItem of elements; let i = index\\\">\\n                <th *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" scope=\\\"row\\\" class=\\\"align-middle\\\">{{paidToeflItem.examNo}}</th>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\"class=\\\"align-middle\\\">\\n                        <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\\\"\\n                        class=\\\"avatar rounded-circle z-depth-1-half\\\"></td>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examLevel}}</td>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.examPrice | currency: \\\"USD\\\"}}</td>\\n                <td *ngIf=\\\"i+1 >= firstItemIndex && i < lastItemIndex\\\" class=\\\"align-middle\\\">{{paidToeflItem.paidDate | date }}</td>\\n            </tr>\\n            </tbody>\\n            <tfoot class=\\\"grey lighten-5\\\" p-0>\\n              <tr>\\n                <td colspan=\\\"5\\\">\\n                  <mdb-table-pagination\\n                                        (nextPageClick)=\\\"onNextPageClick($event)\\\"\\n                                        (previousPageClick)=\\\"onPreviousPageClick($event)\\\">\\n                  </mdb-table-pagination>\\n                </td>\\n              </tr>\\n\\n            </tfoot>\\n        </table>\\n      </div>\\n    </mdb-card>\\n\\n    <hr class=\\\"my-0\\\">\\n\\n    <div class=\\\"text-center\\\">\\n          <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"onReturn()\\\" mdbWavesEffect><mdb-icon icon=\\\"magic\\\" class=\\\"mr-1\\\"></mdb-icon>Confirmation</button>\\n      </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".view {\\n  position: fixed;\\n  top: 5rem;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2F1dGgvcHJvZmlsZS9wdXJjaGFzZWQtaGlzdG9yeS9wdXJjaGFzZWQtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGVBQWU7RUFDZixTQUFTO0VBQ1QsT0FBTTtFQUNOLFFBQVE7RUFDUixTQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3Byb2ZpbGUvcHVyY2hhc2VkLWhpc3RvcnkvcHVyY2hhc2VkLWhpc3RvcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi52aWV3IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDVyZW07XG4gIGxlZnQ6MDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbn1cbiJdfQ== */\"","import { MdbTablePaginationComponent, MdbTableService } from 'ng-uikit-pro-standard';\nimport { Component, OnInit,  ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaidToeflList } from './../../../payment/model/paidToeflLists.model';\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Subscription } from 'rxjs/Subscription';\n@Component({\n  selector: 'app-purchased-history',\n  templateUrl: './purchased-history.component.html',\n  styleUrls: ['./purchased-history.component.scss']\n})\nexport class PurchasedHistoryComponent implements OnInit, AfterViewInit {\n\n  paidToeflLists: PaidToeflList[];\n  totalAmount: number;\n  paidToeflListsSubscription: Subscription;\n\n  // tab 페이지 관련 변수설정 영역\n\n  @ViewChild(MdbTablePaginationComponent) mdbTablePagination: MdbTablePaginationComponent;\n\n  elements: any = [];\n  previous: any = [];\n  headElements = ['ID', 'First', 'Last', 'Handle'];\n\n  firstItemIndex;\n  lastItemIndex;\n\n  constructor(private shoppingCartService: ShoppingcartService,\n              private router: Router,\n              private tableService: MdbTableService,\n              private cdRef: ChangeDetectorRef) { }\n\n  private sorted = false;\n\n  ngOnInit() {\n    console.log('this is the purchased history');\n    this.paidToeflLists = this.shoppingCartService.getPaidToefltLists();\n\n    console.log(this.paidToeflLists);\n    this.elements = this.paidToeflLists;\n    this.tableService.setDataSource(this.elements);\n    this.elements = this.tableService.getDataSource();\n    this.previous = this.tableService.getDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(4);\n    this.firstItemIndex = this.mdbTablePagination.firstItemIndex;\n    this.lastItemIndex = this.mdbTablePagination.lastItemIndex;\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  onNextPageClick(data: any) {\n    this.firstItemIndex = data.first;\n    this.lastItemIndex = data.last;\n  }\n\n  onPreviousPageClick(data: any) {\n    this.firstItemIndex = data.first;\n    this.lastItemIndex = data.last;\n  }\n\n  onReturn() {\n              this.router.navigate(['/']);\n  }\n  sortBy(by: string | any): void {\n\n    this.paidToeflLists.sort((a: any, b: any) => {\n          if (a[by] < b[by]) {\n            return this.sorted ? 1 : -1;\n          }\n          if (a[by] > b[by]) {\n            return this.sorted ? -1 : 1;\n          }\n          return 0;\n    });\n\n    this.sorted = !this.sorted;\n  }\n\n}\n","module.exports = \"\\n<!--Main Layout-->\\n<main>\\n    <div class=\\\"view\\\">\\n        <div class=\\\"full-bg-img\\\">\\n            <div class=\\\"mask rgba-black-strong flex-center\\\">\\n\\n                  <!--Section: Live preview-->\\n                  <div class=\\\"form-light col-md-4\\\">\\n\\n                    <!--Form without header-->\\n                    <div class=\\\"card\\\">\\n\\n                        <div class=\\\"card-body mx-4\\\">\\n\\n                            <!--Header-->\\n                            <div class=\\\"text-center\\\">\\n                                <h3 class=\\\"white-text mb-5 blue-gradient waves-light z-depth-3 rounded\\\"><strong>Sign up</strong></h3>\\n                            </div>\\n\\n                              <!-- SigUp form -->\\n                                <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                    <div class=\\\"md-form\\\">\\n                                      <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n                                      <input\\n                                            type=\\\"text\\\"\\n                                            formControlName=\\\"name\\\"\\n                                            id=\\\"name\\\"\\n                                            class=\\\"form-control\\\"\\n                                            mdbInputDirective\\n                                      >\\n                                      <label for=\\\"name\\\">Your Name</label>\\n                                    </div>\\n\\n                                    <div class=\\\"md-form\\\">\\n                                        <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n                                        <input\\n                                              type=\\\"email\\\"\\n                                              formControlName=\\\"email\\\"\\n                                              id=\\\"email\\\"\\n                                              class=\\\"form-control\\\"\\n                                              mdbInputDirective\\n                                        >\\n                                        <label for=\\\"email\\\">Your email</label>\\n                                      </div>\\n\\n\\n                                    <div class=\\\"md-form pb-3\\\">\\n                                      <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n                                      <input\\n                                            type=\\\"password\\\"\\n                                            formControlName=\\\"password\\\"\\n                                            id=\\\"password\\\"\\n                                            class=\\\"form-control\\\"\\n                                            mdbInputDirective\\n                                      >\\n                                      <label for=\\\"password\\\">Your password</label>\\n\\n                                      <div class=\\\"form-check my-4\\\">\\n                                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"defaultCheck12\\\">\\n                                          <label for=\\\"defaultCheck12\\\" class=\\\"grey-text\\\">Accept the<a href=\\\"#\\\" class=\\\"blue-text\\\"> Terms and Conditions</a></label>\\n                                      </div>\\n                                    </div>\\n\\n                                    <!--Grid row-->\\n                                    <div class=\\\"row d-flex align-items-center mb-4\\\">\\n\\n                                        <!--Grid column-->\\n                                        <div class=\\\"col-md-3 col-md-6 text-center\\\">\\n                                            <button\\n                                                  *ngIf=\\\"!isLoading\\\"\\n                                                  [disabled]=\\\"!signUpForm.valid\\\"\\n                                                  type=\\\"submit\\\"\\n                                                  class=\\\"btn btn-pink btn-block btn-rounded z-depth-1 waves-light\\\"\\n                                                  mdbWavesEffect>Sign Up</button>\\n                                            <!--Big blue-->\\n                                            <mdb-spinner *ngIf=\\\"isLoading\\\" spinnerType=\\\"big crazy\\\"></mdb-spinner>\\n                                        </div>\\n                                        <!--Grid column-->\\n\\n                                        <!--Grid column-->\\n                                        <div class=\\\"col-md-6\\\">\\n                                            <p class=\\\"font-small grey-text d-flex justify-content-center\\\">Have an account? <a href=\\\"#\\\" class=\\\"blue-text ml-2\\\"> Log in</a></p>\\n                                        </div>\\n                                        <!--Grid column-->\\n\\n                                    </div>\\n                                    <!--Grid row-->\\n                                </form>\\n                                <!-- Login form -->\\n\\n                        <!--Footer-->\\n                        <div class=\\\"footer pt-3 mdb-color lighten-3\\\">\\n\\n                            <div class=\\\"row d-flex justify-content-center\\\">\\n                                <p class=\\\"font-small white-text mb-2 pt-3\\\">or Sign up with:</p>\\n                            </div>\\n\\n                            <div class=\\\"row mt-2 mb-3 d-flex justify-content-center\\\">\\n                                <!--Facebook-->\\n                                <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-facebook\\\"></i></a>\\n                                <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-twitter\\\"></i></a>\\n                                <a class=\\\"btn-floating btn-lg purple-gradient waves-light\\\" mdbWavesEffect><i class=\\\"fa fa-google-plus\\\"></i></a>\\n                            </div>\\n\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <!--/Form without header-->\\n\\n                  </div>\\n                  <!--Section: Live preview-->\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n</main>\\n<!--/Main layout-->\\n\"","module.exports = \".view {\\n  background: url('students.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.form-light .font-small {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"radio\\\"] + label,\\n.form-light [type=\\\"checkbox\\\"] + label {\\n  font-size: 0.8rem; }\\n\\n.form-light [type=\\\"checkbox\\\"] + label:before {\\n  top: 2px;\\n  width: 15px;\\n  height: 15px; }\\n\\n.form-light input[type=\\\"checkbox\\\"] + label:before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 17px;\\n  height: 17px;\\n  z-index: 0;\\n  border-radius: 1px;\\n  margin-top: 2px;\\n  transition: 0.2s; }\\n\\n.form-light input[type=\\\"checkbox\\\"]:checked + label:before {\\n  top: -4px;\\n  left: -3px;\\n  width: 12px;\\n  height: 22px;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: transparent #EB3573 #EB3573 transparent;\\n  -webkit-transform: rotate(40deg);\\n  transform: rotate(40deg);\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform-origin: 100% 100%;\\n  transform-origin: 100% 100%; }\\n\\n.form-light .footer {\\n  border-bottom-left-radius: .3rem;\\n  border-bottom-right-radius: .3rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVEQUFzRTtFQUN0RSxzQkFBc0I7RUFDdEIsYUFBYSxFQUFBOztBQUlmO0VBQ0UsaUJBQWlCLEVBQUE7O0FBRW5COztFQUVFLGlCQUFpQixFQUFBOztBQUVuQjtFQUNFLFFBQVE7RUFDUixXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQUVkO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFdBQVc7RUFDWCxZQUFZO0VBQ1osVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixlQUFlO0VBRWYsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIscURBQXFEO0VBQ3JELGdDQUFnQztFQUVoQyx3QkFBd0I7RUFDeEIsbUNBQW1DO0VBQ25DLG1DQUFtQztFQUVuQywyQkFBMkIsRUFBQTs7QUFFN0I7RUFDRSxnQ0FBZ0M7RUFDaEMsaUNBQWlDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmlldyB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uLy4uL2Fzc2V0cy9zdHVkZW50cy5qcGdcIiluby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuXG4uZm9ybS1saWdodCAuZm9udC1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtOyB9XG5cbi5mb3JtLWxpZ2h0IFt0eXBlPVwicmFkaW9cIl0gKyBsYWJlbCxcbi5mb3JtLWxpZ2h0IFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtOyB9XG5cbi5mb3JtLWxpZ2h0IFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpiZWZvcmUge1xuICB0b3A6IDJweDtcbiAgd2lkdGg6IDE1cHg7XG4gIGhlaWdodDogMTVweDsgfVxuXG4uZm9ybS1saWdodCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbDpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxN3B4O1xuICBoZWlnaHQ6IDE3cHg7XG4gIHotaW5kZXg6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgbWFyZ2luLXRvcDogMnB4O1xuICAtd2Via2l0LXRyYW5zaXRpb246IDAuMnM7XG4gIHRyYW5zaXRpb246IDAuMnM7IH1cblxuLmZvcm0tbGlnaHQgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xuICB0b3A6IC00cHg7XG4gIGxlZnQ6IC0zcHg7XG4gIHdpZHRoOiAxMnB4O1xuICBoZWlnaHQ6IDIycHg7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMnB4O1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICNFQjM1NzMgI0VCMzU3MyB0cmFuc3BhcmVudDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0MGRlZyk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQwZGVnKTtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAxMDAlO1xuICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAxMDAlO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDEwMCU7IH1cblxuLmZvcm0tbGlnaHQgLmZvb3RlciB7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IC4zcmVtO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogLjNyZW07IH1cbiJdfQ== */\"","\n\nimport { User } from './../user.model';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AuthService_Local } from '../auth.service';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { UtilityService } from './../../Utility-shared/utility.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n\n  permission = 'teacher';\n  signUpForm: FormGroup;\n  isLoading = false;\n  loadingSubscription: Subscription;\n\n  pwdPattern = '^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{6,12}$';\n  constructor(private fb: FormBuilder,\n              private authServie: AuthService_Local,\n              private router: Router,\n              private utilityService: UtilityService\n            ) {}\n\n  ngOnInit() {\n    this.loadingSubscription = this.utilityService.loadingStateChanged.subscribe(loadingStatus => {\n                                this.isLoading = loadingStatus;\n                                });\n\n    this.signUpForm = this.fb.group({\n                      name: [''],\n                      email: ['', Validators.required],\n                      password: ['', [Validators.required,\n                                      Validators.minLength(6)\n                                    ]],\n                      permissionTag: ['student']\n                  });\n  }\n\n  onSubmit() {\n\n    const user = new User(this.signUpForm.value.email,\n                          this.signUpForm.value.password,\n                          this.signUpForm.value.name,\n                          this.signUpForm.value.permissionTag);\n\n    this.authServie.signup(user);\n    this.signUpForm.reset();\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n  }\n}\n","\nexport class User {\n\n  constructor( public email: string,\n               public password: string,\n               public name?: string,\n               public permissionTag?: string,\n               public created_at?: Date,\n               public update_at?: Date,\n               public provider?: string,\n               public authToken?: string,\n               public toeflId?: string,\n               public paymentId?: string,\n               public paidToeflLists?:  [\n                                          {\n                                            examNo?: number,\n                                            examLevel?: string,\n                                            examPrice?: number,\n                                            paidDate?: Date\n                                          }\n                                        ],\n               public shoppingCartLists?: [\n                                            {\n                                              examNo?: number,\n                                              examLevel?: string,\n                                              examPrice?: number,\n                                              cartDate?: Date\n                                            }\n                                          ],\n               public wishLists?: [\n                                    {\n                                      examNo?: number,\n                                      examLevel?: string,\n                                      examPrice?: number,\n                                      wishDate?: Date\n                                    }\n                                  ]) {}\n}\n","import { UtilityService } from './Utility-shared/utility.service';\n/*\nhttpClient에서 발생하는 모든 error를 중간에서 intercet한후\n이것을 MATDialog->ErrorComponent에 MODAL을 이용하여 error message를 화면와 보여준다\n*/\n\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor,\n         HttpHandler,\n         HttpRequest,\n         HttpErrorResponse} from '@angular/common/http';\n\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs/';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor( private dialog: MatDialog ) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An Unkwown error occurred';\n        let errorTitle = 'An Unkown Error Title';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n          errorTitle = error.error.title;\n        }\n        this.dialog.open( ErrorComponent, {data: { message: errorMessage, title: errorTitle}});\n        return throwError(error);\n      })\n    );\n  }\n}\n","module.exports = \"<div mdbModal #basicModal=\\\"mdbModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"basicModal.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n        <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">{{ data.title }}</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        {{ data.message }}\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary waves-light\\\" aria-label=\\\"OK\\\" (click)=\\\"basicModal.hide()\\\" mdbWavesEffect>Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5zY3NzIn0= */\"","\nimport { ModalDirective } from 'ng-uikit-pro-standard';\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements AfterViewInit {\n\n  @ViewChild('basicModal') basicModal: ModalDirective;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string, title: string}) {}\n\n  ngAfterViewInit(): void {\n    this.basicModal.show();\n  }\n\n}\n","module.exports = \"<!--Footer-->\\n<footer class=\\\"page-footer mdb-color text-center text-md-left pt-4 mt-4\\\">\\n\\n  <!--Footer Links-->\\n  <div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n  \\n      <!--First column-->\\n      <div class=\\\"col-md-3 offset-md-1\\\">\\n          <h5 class=\\\"title\\\">Footer Content </h5>\\n          <p>Here you can use rows and columns here to organize your footer content.</p>\\n      </div>\\n      <!--/.First column-->\\n  \\n      <hr class=\\\"hidden-md-up\\\">\\n  \\n      <!--Second column-->\\n      <div class=\\\"col-md-2 offset-md-1\\\">\\n          <h5 class=\\\"title\\\">Links</h5>\\n          <ul class=\\\"list-unstyled\\\">\\n              <li>\\n                  <a href=\\\"#!\\\">Link 1</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 2</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 3</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 4</a>\\n              </li>\\n          </ul>\\n      </div>\\n      <!--/.Second column-->\\n  \\n      <hr class=\\\"hidden-md-up\\\">\\n  \\n      <!--Third column-->\\n      <div class=\\\"col-md-2\\\">\\n          <h5 class=\\\"title\\\">Links</h5>\\n          <ul class=\\\"list-unstyled\\\">\\n              <li>\\n                  <a href=\\\"#!\\\">Link 1</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 2</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 3</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 4</a>\\n              </li>\\n          </ul>\\n      </div>\\n      <!--/.Third column-->\\n  \\n      <hr class=\\\"hidden-md-up\\\">\\n  \\n      <!--Fourth column-->\\n      <div class=\\\"col-md-2\\\">\\n          <h5 class=\\\"title\\\">Links</h5>\\n          <ul class=\\\"list-unstyled\\\">\\n              <li>\\n                  <a href=\\\"#!\\\">Link 1</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 2</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 3</a>\\n              </li>\\n              <li>\\n                  <a href=\\\"#!\\\">Link 4</a>\\n              </li>\\n          </ul>\\n      </div>\\n      <!--/.Fourth column-->\\n  \\n  </div>\\n  </div>\\n  <!--/.Footer Links-->\\n  \\n  <hr>\\n  <!--Social buttons-->\\n  <div class=\\\"text-center mb-3\\\">\\n  \\n  <a class=\\\"btn-floating btn-small btn-fb waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-facebook\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-tw waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-twitter\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-gplus waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-google-plus\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-li waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-linkedin\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-git waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-github\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-pin waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-pinterest\\\"> </i>\\n  </a>\\n  <a class=\\\"btn-floating btn-small btn-ins waves-light\\\" mdbWavesEffect>\\n      <i class=\\\"fa fa-instagram\\\"> </i>\\n  </a>\\n  \\n  </div>\\n  <!--/.Social buttons-->\\n  \\n  <!--Copyright-->\\n  <div class=\\\"footer-copyright text-center py-3\\\">\\n  <div class=\\\"container-fluid\\\">\\n      © 2017 Copyright:\\n      <a href=\\\"https://www.MDBootstrap.com\\\"> MDBootstrap.com </a>\\n  \\n  </div>\\n  </div>\\n  <!--/.Copyright-->\\n  \\n  </footer>\\n  <!--/.Footer-->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- Navbar -->\\n<mdb-navbar SideClass=\\\"navbar fixed-top navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav\\\" [containerInside]=\\\"false\\\">\\n\\n  <!-- SideNav slide-out button -->\\n                  <navlinks class=\\\"navbar-container\\\">\\n                      <div class=\\\"float-left\\\">\\n                          <a (click)=\\\"onToggleSideNav()\\\" class=\\\"button-collapse hidden-nav-button-collapse\\\">\\n                              <i class=\\\"fa fa-bars\\\"></i>\\n                          </a>\\n                      </div>\\n                  </navlinks>\\n\\n  <!-- Breadcrumb-->\\n                  <logo>\\n\\n                      <div class=\\\"breadcrumbs breadcrumbs-hidden-nav breadcrumb-dn mr-auto\\\">\\n                          <p>Total Examinations for People </p>\\n                      </div>\\n                  </logo>\\n\\n  <!-- 가로 진열하는 각종 navbar menu를 구성하는 영역 -->\\n        <navlinks>\\n                <ul class=\\\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav ie-hidden-double-nav\\\">\\n\\n\\n      <!-- 시험출제자 모드로 로그인 하였을시 활성화 시킨다 -->\\n                          <li *ngIf=\\\"isteacherAuth\\\" class=\\\"nav-item\\\">\\n\\n                              <a class=\\\"nav-link border border-light rounded waves-light\\\"\\n                              [routerLink]=\\\"['/teacher']\\\"\\n                              mdbWavesEffect>\\n                                  <i class=\\\"fa fa-pencil-square-o\\\"></i>\\n                                  <span class=\\\"clearfix d-none d-sm-inline-block\\\">Examination</span>\\n                              </a>\\n                          </li>\\n\\n      <!-- Contact Navbar 시작 -->\\n                          <li  class=\\\"nav-item\\\">\\n                              <a class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/auth/contact']\\\"\\n                              mdbWavesEffect>\\n                                  <i class=\\\"fa fa-envelope-o\\\"></i>\\n                                  <span class=\\\"clearfix d-none d-sm-inline-block\\\">Contact</span>\\n                              </a>\\n                          </li>\\n\\n      <!-- Support Navbar 시작 -->\\n                          <li  class=\\\"nav-item\\\">\\n                              <a class=\\\"nav-link waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-comments-o\\\"></i>\\n                                  <span class=\\\"clearfix d-none d-sm-inline-block\\\">Support</span>\\n                              </a>\\n                          </li>\\n\\n      <!-- shopping cart dropdown menu시작 -->\\n\\n                          <li *ngIf=\\\"!isteacherAuth && isAuth\\\" class=\\\"nav-item dropdown btn-group\\\" dropdown >\\n\\n\\n                                <a dropdownToggle type=\\\"button\\\" aria-hidden=\\\"true\\\"\\n                                    class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n                                        <i class=\\\"fa  fa-shopping-bag fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n                                        <span class=\\\"counter\\\">  {{ shoppingcartListCounter }} </span>\\n                                </a>\\n                                                <div *ngIf=\\\"shoppingcartListCounter != 0\\\" class=\\\"dropdown-menu dropdown-primary dropdown-menu-right text-center\\\"  role=\\\"menu\\\" >\\n                                                            <table class=\\\"table\\\">\\n                                                                <thead>\\n                                                                  <tr>\\n                                                                    <th colspan=\\\"1\\\">No</th>\\n                                                                    <th colspan=\\\"1\\\">Level</th>\\n                                                                    <th colspan=\\\"1\\\">Price</th>\\n                                                                    <th colspan=\\\"1\\\">Remove</th>\\n                                                                  </tr>\\n                                                                </thead>\\n                                                                <tbody>\\n\\n                                                                  <tr *ngFor=\\\"let shoppingcartItem of shoppingcartLists\\\">\\n\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        {{shoppingcartItem.examNo}}\\n                                                                    </td>\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        {{shoppingcartItem.examLevel}}\\n                                                                    </td>\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        {{shoppingcartItem.examPrice | currency : \\\"USD\\\" }}\\n                                                                    </td>\\n                                                                    <td colspan=\\\"1\\\">\\n                                                                        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"shoppingcartItemDelete(shoppingcartItem)\\\">\\n                                                                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                                                                        </button>\\n                                                                    </td>\\n                                                                  </tr>\\n                                                                </tbody>\\n                                                             </table>\\n                                                              <div class=\\\"dropdown-divider\\\"></div>\\n                                                              <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" outline=\\\"true\\\" size=\\\"sm\\\"\\n                                                                      (click)=\\\"goShoppingListCheckOut()\\\" mdbWavesEffect>\\n                                                                      <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                                      CheckOut\\n                                                              </button>\\n                                                              <button mdbBtn class=\\\"mr-1\\\" type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" outline=\\\"true\\\" size=\\\"sm\\\"\\n                                                              (click)=\\\"goShoppingListSave()\\\" mdbWavesEffect>\\n                                                              <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                              Save\\n                                                      </button>\\n\\n                                                </div>\\n                          </li>\\n\\n      <!-- 사용자 profile dropdopw menu -->\\n                          <li *ngIf=\\\"isAuth\\\" class=\\\"nav-item dropdown btn-group\\\" dropdown>\\n                              <a dropdownToggle type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-user-circle-o\\\"></i>\\n                                  {{ this.userName }}\\n                              </a>\\n                              <div class=\\\"dropdown-menu dropdown-primary dropdown-menu-right\\\" role=\\\"menu\\\">\\n                                  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/profile']\\\"><i class=\\\"fa fa-user-circle-o mr-1\\\"></i>Dashboard</a>\\n                                  <a *ngIf=\\\"!isteacherAuth\\\" class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/orderHistory']\\\"><i class=\\\"fa fa-info mr-1\\\"></i>Purchase History</a>\\n                                  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/logout']\\\"><i class=\\\"fa fa-sign-out mr-1\\\"></i>LogOut</a>\\n                              </div>\\n                          </li>\\n\\n      <!-- 사용자 login/signup dropdown menu  -->\\n                          <li *ngIf=\\\"!isAuth\\\" class=\\\"nav-item dropdown btn-group\\\" dropdown>\\n                              <a dropdownToggle type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n                                  <i class=\\\"fa fa-smile-o\\\"></i>\\n                                  LogIn\\n                              </a>\\n                              <div class=\\\"dropdown-menu dropdown-primary dropdown-menu-right\\\" role=\\\"menu\\\">\\n                                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/login']\\\">\\n                                  <i class=\\\"fa fa-sign-in\\\"></i>\\n                                  LogIn</a>\\n                                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/auth/signup']\\\">\\n                                  <i class=\\\"fa fa-registered\\\"></i>\\n                                  SignUp</a>\\n                            </div>\\n                          </li>\\n\\n                </ul>\\n        </navlinks>\\n    </mdb-navbar>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, EventEmitter, Output, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthService_Local } from '../../auth/auth.service';\nimport { ShoppingcartService} from '../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../payment/model/shoppingcart.model';\nimport { ProfileInfo } from '../../auth/profile.model';\nimport { User } from '../../auth/user.model';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n// 상단 navBar와 sideMenu와 관련한 변수설정\n    @Output() sidenavToggle = new EventEmitter<void>();\n    @Input() isAuth: boolean;\n    @Input() isteacherAuth: boolean;\n    @Input() userName: string;\n\n// 인증관련 Subscription 변수설정\n    authSubscription: Subscription;\n    teacherAuthSubscription: Subscription;\n\n// shoppingcart에 관한 변수설정\n    shoppingcartLists: Shoppingcart[] = [];\n    shoppingcartListCounter = 0;\n    shoppingcartListSubscription: Subscription;\n\nconstructor(private authService: AuthService_Local,\n            private shoppingcartService: ShoppingcartService) { }\n\n  ngOnInit() {\n\n   // 인증관련 Subject설정\n    this.authSubscription = this.authService.authChange.subscribe((authStatus: boolean) => {\n          // 로그인 여부 확인\n                    this.isAuth = authStatus;\n          // 로그인이 되어 있지 않으면 shoppingcartLists를 초기화한다\n                    if (!this.isAuth) {\n                      this.shoppingcartLists = [];\n                      this.shoppingcartListCounter = 0;\n                    } else {\n                        // 사용자 프로파일중 이름을 가져온다\n                        this.userName = this.authService.getUserName();\n\n                        console.log('인증후 현재 사용자 정보', this.userName);\n\n                        // 로그인이 되어 있고 teacher mode가 아니면 shopping cart를 활성화 시킨다\n                        if (!this.isteacherAuth) {\n                          this.shoppingcartListSubscription = this.shoppingcartService.shoppingCartListAdded\n                                                            .subscribe((shoppingcart: Shoppingcart[]) => {\n                                                            // tslint:disable-next-line:max-line-length\n                                                            this.shoppingcartLists = shoppingcart.sort((a, b) => 0 - (a.examNo > b.examNo ? -1 : 1));\n                                                            // tslint:disable-next-line:max-line-length\n                                                            this.shoppingcartListCounter = this.shoppingcartLists.length;\n\n                                                          });\n                          // 처음 angular가 접속하였을시 node server로 부터 인증된 user 정보에서 shopping cart 와 paidToeflLists 정보 가져오기\n                              this.shoppingcartService.connectAuthShoppingCart();\n                          }\n\n                      }\n                            // 시험출제자 선생님 인증관련 영역\n                            this.teacherAuthSubscription = this.authService.teacherAuth.subscribe((teacherStatus: boolean) => {\n                              this.isteacherAuth = teacherStatus;\n                   });\n\n    });\n\n  }\n    // 유저가 헤더부분에 있는 쇼핑목록을 지웠을때 실행됨.\n    shoppingcartItemDelete(shoppingcartItem: Shoppingcart) {\n      this.shoppingcartService.shoppingCartItemRemoved(shoppingcartItem);\n    }\n\n    // 헤더 쇼핑카트부분에 있는 체크아웃 버튼을 눌렀을때 paymentPreview Page로 이동합니다.\n    goShoppingListCheckOut() {\n      this.shoppingcartService.goCheckOut();\n    }\n\n    // 서버에 shopping cart내용을 정리한후 훗날 재사용할 수 있도록 하는 기능추가\n    goShoppingListSave() {\n      this.shoppingcartService.goSave();\n    }\n\n    onToggleSideNav() {\n      this.sidenavToggle.emit();\n    }\n\n    ngOnDestroy() {\n      this.authSubscription.unsubscribe();\n      if (!this.isteacherAuth) {\n        this.shoppingcartListSubscription.unsubscribe();\n      }\n      this.teacherAuthSubscription.unsubscribe();\n  }\n\n}\n\n","module.exports = \"\\n        <logo>\\n          \\n                <div class=\\\"logo-wrapper waves-light pl-4\\\">                                       \\n                                        <img src=\\\"../../../assets/img/toeflLogo.png\\\"\\n                                        class=\\\"rounded-circle img-fluid flex-center\\\"\\n                                        style=\\\"max-height: 90px\\\">       \\n                </div>\\n                \\n        </logo>\\n\\n     \\n            <!-- Side navigation links -->\\n            \\n                <ul class=\\\"collapsible collapsible-accordion\\\">\\n                    <mdb-squeezebox [multiple]=\\\"false\\\" aria-multiselectable=\\\"false\\\">\\n\\n                        <!-- Collapsible link -->\\n                        <mdb-item>\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-chevron-right\\\"></i> Collapsible menu</mdb-item-head>\\n                            <mdb-item-body>\\n                                <ul>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 1</a>\\n                                    </li>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 2</a>\\n                                    </li>\\n                                </ul>\\n                            </mdb-item-body>\\n                        </mdb-item>\\n\\n                        <!-- Simple link -->\\n                        <mdb-item class=\\\"no-collase\\\">\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-hand-pointer-o\\\"></i> Simple link</mdb-item-head>\\n                            <mdb-item-body></mdb-item-body>\\n                        </mdb-item>\\n\\n                        <!-- Collapsible link -->\\n                        <mdb-item>\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-eye\\\"></i> Collapsible menu 2</mdb-item-head>\\n                            <mdb-item-body>\\n                                <ul>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 1</a>\\n                                    </li>\\n                                    <li>\\n                                        <a class=\\\"waves-effect\\\" mdbWavesEffect>Link 2</a>\\n                                    </li>\\n                                </ul>\\n                            </mdb-item-body>\\n                        </mdb-item>\\n\\n                        <!-- Simple link -->\\n                        <mdb-item class=\\\"no-collase\\\">\\n                            <mdb-item-head mdbWavesEffect>\\n                                <i class=\\\"fa fa-diamond\\\">\\n                                    <a></a>\\n                                </i> Logout </mdb-item-head>\\n                            <mdb-item-body></mdb-item-body>\\n                        </mdb-item>\\n\\n                    </mdb-squeezebox>\\n                </ul>\\n           \\n            <!--/. Side navigation links -->\\n       \\n        <div class=\\\"sidenav-bg mask-strong\\\"></div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vc2lkZW5hdi1saXN0L3NpZGVuYXYtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.scss']\n})\nexport class SidenavListComponent {\n}\n","module.exports = \"<div mdbModal #basicModal=\\\"mdbModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"basicModal.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n        <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Page Not Found</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        Can not find out a Page.......\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary waves-light\\\" aria-label=\\\"OK\\\" (click)=\\\"goBackToHome()\\\" mdbWavesEffect>Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */\"","\nimport { ModalDirective } from 'ng-uikit-pro-standard';\nimport { Component, ViewChild } from '@angular/core';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements AfterViewInit {\n\n  @ViewChild('basicModal') basicModal: ModalDirective;\n\n  constructor( private router: Router) {}\n\n    ngAfterViewInit(): void {\n    this.basicModal.show();\n  }\n  goBackToHome() {\n    this.basicModal.hide();\n    this.router.navigate(['/']);\n  }\n}\n","import { Shoppingcart } from './shoppingcart.model';\n\nexport class Payment {\n    constructor(\n                    public userToken?: string,\n                    public shoppingCartLists?: Shoppingcart[],\n                    public amount?: number) {}\n}\n","export class Shoppingcart {\n    constructor(\n                   public examNo?: number,\n                   public examLevel?: string,\n                   public examPrice?: number,\n                   public cartDate?: Date\n    ) {}\n}\n","import { Shoppingcart } from './shoppingcart.model';\nexport class StripeModel {\n\n    constructor( public cardHolderName?: string,\n                 public cardHolderEmail?: string,\n                 public cardHolderZip?: string,\n                 public tokenId?: string,\n                 public userToken?: string,\n                 public shoppingCartLists?: Shoppingcart[],\n                 public amount?: number,\n                 public cardNumber?: string,\n                 public cardExpiry?: string,\n                 public cardCvc?: string)\n                 { }\n}\n","module.exports = \"\"","module.exports = \".table {\\n  margin-left: 3rem;\\n  margin-right: 3rem; }\\n\\n#totalAmount {\\n  border-top: 2px solid #444444;\\n  border-bottom: 2px solid; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL3BheW1lbnQvcGF5bWVudC1jaGVja291dC9wYXltZW50LW5vdGlmaWNhdGlvbi9wYXltZW50LW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQjtFQUNqQixrQkFBbUIsRUFBQTs7QUFFdkI7RUFDSSw2QkFBNkI7RUFDN0Isd0JBQ0osRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvcGF5bWVudC1jaGVja291dC9wYXltZW50LW5vdGlmaWNhdGlvbi9wYXltZW50LW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZXtcbiAgICBtYXJnaW4tbGVmdDogM3JlbTtcbiAgICBtYXJnaW4tcmlnaHQgOiAzcmVtO1xufVxuI3RvdGFsQW1vdW50e1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjNDQ0NDQ0O1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBcbn0iXX0= */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { MainNavModel } from './../../../Utility-shared/mainNavChange.model';\nimport { UtilityService } from '../../../Utility-shared/utility.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService_Local } from '../../../auth/auth.service';\nimport { PaypalPaymentService } from '../../paymentAgency-Service/paypal-payment.service';\n\n@Component({\n  selector: 'app-payment-notification',\n  templateUrl: './payment-notification.component.html',\n  styleUrls: ['./payment-notification.component.scss']\n})\nexport class PaymentNotificationComponent implements OnInit, AfterViewInit {\n\n  mainNavModel: MainNavModel;\n\n  constructor(private utilityService: UtilityService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private authService: AuthService_Local,\n              private payPalService: PaypalPaymentService\n            ) { }\n\n  ngOnInit() {\n    console.log('this is a init result page');\n        this.payPalService.getPaypalResult();\n        this.mainNavModel = new MainNavModel(false, false, false);\n        this.utilityService.mainNavChanged.next(this.mainNavModel);    // main 화면 navigation활성화\n        this.authService.authChange.next(true);                         // header component에 영향을 주는 authChange값\n        this.authService.isAuthenticated = true;\n        this.router.navigate(['/']);\n\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.utilityService.successToast('PayPal 결제가 완료되었습니다. 감사합니다', 'PayPal 결제완료 공지사항');\n    }, 0);\n\n  }\n}\n","module.exports = \"\\n<mdb-card class=\\\"text-center\\\">\\n    <mdb-card-header class=\\\"dark-grey-text\\\">\\n      <h3><strong>Order Summary</strong></h3>\\n    </mdb-card-header>\\n\\n      <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table text-right\\\">\\n              <tbody>\\n\\n                  <td colspan=\\\"2\\\">Subtotal:</td>\\n                  <td colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</td>\\n\\n                  <tr>\\n                      <td colspan=\\\"2\\\">\\n                        Applied D/C:\\n                      </td>\\n                      <td colspan=\\\"2\\\">\\n\\n                      </td>\\n                  </tr>\\n\\n                  <tr>\\n                  <td colspan=\\\"2\\\">Estimated Tax:</td>\\n                  <td colspan=\\\"1\\\"></td>\\n                  </tr>\\n                  <tr>\\n                      <th colspan=\\\"2\\\">Total:</th>\\n                      <th colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</th>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"4\\\">\\n                        <button class=\\\"btn btn-block btn-sm red\\\" id=\\\"couponBtn\\\" (click)=\\\"goCancel()\\\">Cancel</button>\\n                    </td>\\n                   </tr>\\n              </tbody>\\n          </table>\\n      </div>\\n\\n    <mdb-card-footer class=\\\"text-muted success-color white-text\\\">\\n      <p class=\\\"mb-0\\\">2 days ago</p>\\n    </mdb-card-footer>\\n  </mdb-card>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvcGF5bWVudC1jaGVja291dC9wYXltZW50LW9yZGVyLXN1bW1hcnkvcGF5bWVudC1vcmRlci1zdW1tYXJ5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment-order-summary',\n  templateUrl: './payment-order-summary.component.html',\n  styleUrls: ['./payment-order-summary.component.scss']\n})\nexport class PaymentOrderSummaryComponent {\n\n  checkShoppingCart = false;\n\n  @Input() totalAmount: number;\n\n  constructor(private location: Location,\n              private router: Router) {}\n\n  goCancel() {\n    this.router.navigate(['/']);\n  }\n  getPromoCode() {\n    console.log('promo click');\n  }\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"row mx-0 p-3\\\">\\n    <div class=\\\"col-md-9 mx-auto\\\">\\n        <div class=\\\"card\\\">\\n            <h3 class=\\\"card-header text-center\\\">Payment Method Selection</h3>\\n            <mdb-progress-bar class=\\\"progress primary-color-dark\\\" mode=\\\"indeterminate\\\"></mdb-progress-bar>\\n              <div class=\\\"card-body\\\">\\n                  <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n\\n                          <div class=\\\"form-check\\\">\\n                                      <input class=\\\"form-check-input\\\" [checked]=\\\"stripeCheckbox\\\" (change)=\\\"activeStripe()\\\" mdbInputDirective type=\\\"checkbox\\\"  id=\\\"checkbox1\\\">\\n                                      <label class=\\\"form-check-label\\\" for=\\\"checkbox1\\\">Credit or Debit Card</label>\\n                          </div>\\n                          <form [formGroup]=\\\"stripeForm\\\" (ngSubmit)=\\\"onStripeSubmit()\\\">\\n\\n                              <fieldset [disabled]=\\\"!stripeisActive\\\">\\n\\n                                          <div class=\\\"row\\\">\\n                                              <div class=\\\"col-md-1\\\"></div>\\n                                              <div class=\\\"col-md-11\\\">\\n                                                    <div class=\\\"md-form\\\">\\n                                                            <input mdbInputDirective\\n                                                                  type=\\\"text\\\"\\n                                                                  id=\\\"cardHolderName\\\"\\n                                                                  formControlName=\\\"cardHolderName\\\"\\n                                                            class=\\\"form-control\\\">\\n                                                            <label for=\\\"cardHolderName\\\">Name</label>\\n                                                    </div>\\n                                              </div>\\n                                          </div>\\n                                          <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-md-1\\\"></div>\\n                                                    <div class=\\\"col-md-7\\\">\\n                                                        <div class=\\\"md-form\\\">\\n                                                              <input mdbInputDirective\\n                                                                      type=\\\"email\\\"\\n                                                                      id=\\\"cardHolderEmail\\\"\\n                                                                      formControlName=\\\"cardHolderEmail\\\"\\n                                                                      class=\\\"form-control\\\">\\n                                                              <label for=\\\"cardHolderEmail\\\">Email</label>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-4\\\">\\n                                                        <div class=\\\"md-form\\\">\\n                                                              <input mdbInputDirective\\n                                                                      type=\\\"text\\\"\\n                                                                      id=\\\"cardHolderZip\\\"\\n                                                                      formControlName=\\\"cardHolderZip\\\"\\n                                                                      class=\\\"form-control\\\">\\n                                                              <label for=\\\"cardHolderZip\\\">Zip</label>\\n                                                        </div>\\n                                                    </div>\\n\\n                                          </div>\\n                                          <br>\\n                                          <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12 text-center\\\">\\n                                                  <div id=\\\"cardImages\\\" >\\n                                                    <i class=\\\"fa fa-cc-mastercard\\\" id=\\\"fa-cc-mastercard\\\"  aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-visa\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-amex\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-stripe\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-google-wallet\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-discover\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-jcb\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                    <i class=\\\"fa fa-cc-diners-club\\\" size=\\\"2x\\\" aria-hidden=\\\"true\\\"></i>\\n                                                  </div>\\n                                            </div>\\n                                          </div>\\n\\n                                          <hr>\\n\\n                                          <div class=\\\"row ml-2\\\">\\n                                            <div class=\\\"col-md-3\\\">\\n                                              <p>Card Number</p>\\n                                            </div>\\n                                              <div class=\\\"col-md-8\\\">\\n                                                <div id=\\\"card-number\\\"></div>\\n                                              </div>\\n                                          </div>\\n\\n                                          <div class=\\\"row ml-2\\\">\\n                                            <div class=\\\"col-md-3\\\">\\n                                              <p>Expiration Date</p>\\n                                            </div>\\n                                              <div class=\\\"col-md-3\\\">\\n                                                <div id=\\\"card-expiry\\\"></div>\\n                                              </div>\\n                                              <div class=\\\"col-md-3 ml-0\\\">\\n                                                <p>CVC</p>\\n                                              </div>\\n                                                <div class=\\\"col-md-3\\\">\\n                                                  <div id=\\\"card-cvc\\\"></div>\\n                                                </div>\\n\\n                                          </div>\\n\\n                                          <div class=\\\"text-center mt-3\\\">\\n                                              <button mdbBtn type=\\\"submit\\\" color=\\\"indigo\\\" size=\\\"md\\\" [disabled]=\\\"!stripeForm\\\" mdbWavesEffect>\\n                                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                            Checkout With Credit Card\\n                                              </button>\\n                                          </div>\\n                              </fieldset>\\n                          </form>\\n                      </div>\\n                  </div>\\n                  <br>\\n                  <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n                          <br>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4 pt-3\\\">\\n                                <div class=\\\"form-check align-middle\\\">\\n                                    <input class=\\\"form-check-input\\\" [checked]= \\\"paypalCheckbox\\\" (change)=\\\"activePaypal()\\\" mdbInputDirective type=\\\"checkbox\\\"  id=\\\"checkbox2\\\">\\n                                    <label class=\\\"form-check-label\\\" for=\\\"checkbox2\\\">\\n                                    Check Out With Paypal</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-8\\\">\\n                                <button mdbBtn\\n                                                [disabled]=\\\"!paypalisActive\\\"\\n                                                type=\\\"button\\\" color=\\\"indigo\\\" size=\\\"md\\\"\\n                                                (click)=\\\"onPaypalSubmit()\\\"\\n                                                mdbWavesEffect>\\n                                                <mdb-icon icon=\\\"cc-paypal\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                                Checkout With Paypal\\n                                </button>\\n\\n                            </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 mx-auto\\\">\\n      <app-payment-order-summary [totalAmount]=\\\"totalAmount\\\" id=\\\"sticky\\\" class=\\\"z-depth-2\\\"></app-payment-order-summary>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\"","module.exports = \".wrapper {\\n  position: relative;\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  margin-top: 4rem; }\\n\\n#cardImages > .fa {\\n  font-size: 2em;\\n  width: 1.5em;\\n  height: 1.5em; }\\n\\n.fa-cc-mastercard {\\n  color: #b71c1c; }\\n\\n.fa-cc-visa {\\n  color: #0d47a1; }\\n\\n.fa-cc-amex {\\n  color: #4285F4; }\\n\\n.fa-cc-discover {\\n  color: #37474F; }\\n\\n.fa-cc-jcb {\\n  color: #311b92; }\\n\\n.fa-cc-stripe {\\n  color: #2BBBAD; }\\n\\n.fa-cc-diners-club {\\n  color: #3F729B; }\\n\\n.fa-google-wallet {\\n  color: #ffd600; }\\n\\n.fa-paypal {\\n  margin-left: 1rem;\\n  font-size: 1.5rem;\\n  color: #0d47a1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL3BheW1lbnQvcGF5bWVudC1jaGVja291dC9wYXltZW50LXByb2NlZWQvcGF5bWVudC1wcm9jZWVkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNJLGNBQWM7RUFDZCxZQUFZO0VBQ1osYUFBYSxFQUFBOztBQUlqQjtFQUNJLGNBQWEsRUFBQTs7QUFFakI7RUFDRyxjQUNILEVBQUE7O0FBRUE7RUFDSSxjQUNKLEVBQUE7O0FBRUE7RUFDRyxjQUNILEVBQUE7O0FBRUE7RUFDSSxjQUNKLEVBQUE7O0FBRUE7RUFDSSxjQUNKLEVBQUE7O0FBRUE7RUFDSSxjQUNKLEVBQUE7O0FBQ0E7RUFDSSxjQUNKLEVBQUE7O0FBRUE7RUFDSSxpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvcGF5bWVudC1jaGVja291dC9wYXltZW50LXByb2NlZWQvcGF5bWVudC1wcm9jZWVkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiA0cmVtO1xufVxuXG4jY2FyZEltYWdlcz4uZmF7XG4gICAgZm9udC1zaXplOiAyZW07XG4gICAgd2lkdGg6IDEuNWVtO1xuICAgIGhlaWdodDogMS41ZW07XG4gICAgLy8gdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbi5mYS1jYy1tYXN0ZXJjYXJke1xuICAgIGNvbG9yOiNiNzFjMWM7XG59XG4uZmEtY2MtdmlzYXtcbiAgIGNvbG9yOiAjMGQ0N2ExXG59XG5cbi5mYS1jYy1hbWV4e1xuICAgIGNvbG9yOiAjNDI4NUY0XG59XG5cbi5mYS1jYy1kaXNjb3ZlcntcbiAgIGNvbG9yOiAjMzc0NzRGXG59XG5cbi5mYS1jYy1qY2J7XG4gICAgY29sb3I6IzMxMWI5MlxufVxuXG4uZmEtY2Mtc3RyaXBle1xuICAgIGNvbG9yOiAjMkJCQkFEXG59XG5cbi5mYS1jYy1kaW5lcnMtY2x1YntcbiAgICBjb2xvcjogIzNGNzI5QlxufVxuLmZhLWdvb2dsZS13YWxsZXR7XG4gICAgY29sb3I6ICNmZmQ2MDBcbn1cblxuLmZhLXBheXBhbHtcbiAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICBjb2xvcjogIzBkNDdhMTtcbn1cblxuIl19 */\"","import { UtilityService } from './../../../Utility-shared/utility.service';\nimport { Component, OnInit} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from 'ngx-stripe';\n\nimport { Payment } from '../../model/payment.model';\nimport { StripeModel } from '../../model/stripeModel';\n\nimport { ShoppingcartService } from '../../shoppingcart.service';\nimport { PaypalPaymentService } from '../../paymentAgency-Service/paypal-payment.service';\nimport { StripePaymentService } from '../../paymentAgency-Service/stripe-payment.service';\nimport { Shoppingcart } from '../../model/shoppingcart.model';\n\nimport { MainNavModel } from './../../../Utility-shared/mainNavChange.model';\nimport { PaidToeflList } from '../../model/paidToeflLists.model';\n\n@Component({\n  selector: 'app-payment-proceed',\n  templateUrl: './payment-proceed.component.html',\n  styleUrls: ['./payment-proceed.component.scss']\n})\nexport class PaymentProceedComponent implements OnInit {\n\n  userToken: string;\n  totalAmount = 0;\n  payment: Payment;\n  shoppingCartLists: Shoppingcart[];\n  paidToeflLists: PaidToeflList[];\n\n  // Stripe payment를 위한 변수선언.\n\n  stripeInfo: StripeModel;\n  cardNumber: StripeElement;\n  cardExpiry: StripeElement;\n  cardCvc: StripeElement;\n  card: StripeElement;\n  elements: Elements;\n\n  elementOptions: ElementsOptions = {\n    locale: 'auto'\n  };\n\n  // credit card information input form for stripe\n\n  stripeForm: FormGroup;\n\n  stripeCheckbox = false;\n  stripeisActive = false;\n  paypalCheckbox = false;\n  paypalisActive = false;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private route: ActivatedRoute,\n              private utilityService: UtilityService,\n              private shoppingcartService: ShoppingcartService,\n              private paypalPaymentService: PaypalPaymentService,\n              private stripePaymentService: StripePaymentService,\n              private stripeService: StripeService) {}\n\n  ngOnInit() {\n\n          this.userToken = localStorage.getItem('token');\n          this.route.params.subscribe((params: Params) => {\n                                                            this.totalAmount = +params['totalAmount'];\n                                                            console.log(this.totalAmount);\n          this.shoppingCartLists = this.shoppingcartService.getShoppingCartLists();\n                                                            });\n\n    this.stripeForm = this.fb.group({\n      cardHolderName: ['', [Validators.required]],\n      cardHolderEmail: ['', [Validators.required]],\n      cardHolderZip: ['', [Validators.required]]\n    });\n\n    this.stripeService.elements(this.elementOptions)\n               .subscribe(elements => {\n                 this.elements = elements;\n                            if (!this.cardNumber) {\n                              this.cardNumber = this.elements.create('cardNumber', {});\n\n                              this.cardNumber.mount('#card-number');\n                            }\n\n                            if (!this.cardExpiry) {\n                              this.cardExpiry = this.elements.create('cardExpiry', {});\n                              this.cardExpiry.mount('#card-expiry');\n                            }\n\n                            if (!this.cardCvc) {\n                              this.cardCvc = this.elements.create('cardCvc', {});\n                              this.cardCvc.mount('#card-cvc');\n                            }\n                });\n\n  }\n\n  onStripeSubmit() {\n\n    this.stripeService\n                      .createToken(this.cardNumber, {name})\n                      .subscribe(result => {\n                                if ( result.token ) {\n                                  const stripeToken = result.token.id;\n                                  this.stripeInfo = new StripeModel(\n                                                      this.stripeForm.value.cardHolderName,\n                                                      this.stripeForm.value.cardHolderEmail,\n                                                      this.stripeForm.value.cardHolderZip,\n                                                      stripeToken,\n                                                      this.userToken,\n                                                      this.shoppingCartLists,\n                                                      this.totalAmount * 100\n                                                    );\n                                  this.stripePaymentService.gotoStripeCharge(this.stripeInfo);\n                                } else if ( result.error) {\n                                  console.log(result.error.message);\n                                  this.utilityService.errorToast(result.error.message, 'Credit Card Payment Error');\n                                }\n                      });\n  }\n\n  onPaypalSubmit() {\n    console.log('paypal click');\n    console.log(this.totalAmount);\n    this.payment = new Payment(this.userToken, this.shoppingCartLists, this.totalAmount);\n\n    this.paypalPaymentService.checkoutPaypal(this.payment);\n  }\n\n\n  activeStripe() {\n   console.log(this.stripeCheckbox);\n             if (this.stripeCheckbox) {\n               this.stripeisActive = false;\n               this.stripeCheckbox = false;\n             } else if (!this.stripeCheckbox) {\n               this.stripeCheckbox = true;\n               this.stripeisActive = true;\n             }\n\n  }\n\n  activePaypal() {\n    console.log(this.paypalCheckbox);\n              if (this.paypalCheckbox) {\n                this.paypalCheckbox = false;\n                this.paypalisActive = false;\n              } else if (!this.paypalCheckbox) {\n                this.paypalCheckbox = true;\n                this.paypalisActive = true;\n              }\n            }\n}\n\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'app-payment',\n    template: `\n    <p> this is the check point .... </p>\n\n    <router-outlet></router-outlet>`\n})\n\nexport class PaymentComponent {\n    constructor() {}\n\n}\n","import { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\nimport { Injectable} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ShoppingcartService } from './../shoppingcart.service';\nimport { Payment } from './../model/payment.model';\nimport { PaidToeflList } from '../model/paidToeflLists.model';\nimport { User } from '../../auth/user.model';\n\n@Injectable()\nexport class PaypalPaymentService {\n\n    payment: Payment;\n    urlConfig = GlobalConstantShare.httpUrl;     // url 실제 주소가 있는곳\n    constructor(private http: HttpClient,\n                private shoppingCartService: ShoppingcartService) {}\n\n\n    checkoutPaypal(payment: Payment) {\n\n      console.log('paypal click');\n\n      return this.http.post<{ url: string }>(this.urlConfig + '/paypal/createPayment', payment)\n                      .subscribe(data => {\n                          window.location.href = data.url;\n                      }),\n                      (error) => console.log(error);\n    }\n\n    getPaypalResult() {\n        const token = localStorage.getItem('token');\n\n        return this.http.get<{ payPalResult: PaidToeflList[], paypalUserInfo: User}>\n                        (this.urlConfig + '/paypal/paymentResult/' + '?token=' + token)\n\n                        .subscribe( data => {\n                            // tslint:disable-next-line:max-line-length\n                            const reInitSuccess = this.shoppingCartService.reInitialShoppingCartLists(data.payPalResult, data.paypalUserInfo);\n                        },\n                        error => console.log(error)\n                    );\n    }\n\n}\n","import { PaidToeflList } from './../model/paidToeflLists.model';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\n\nimport { StripeModel } from '../model/stripeModel';\nimport { Subject } from 'rxjs/Subject';\nimport { Shoppingcart } from '../model/shoppingcart.model';\nimport { UtilityService } from '../../Utility-shared/utility.service';\nimport { ShoppingcartService } from '../shoppingcart.service';\nimport { Router } from '@angular/router';\nimport { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\nimport { AuthService_Local } from '../../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../auth/user.model';\n\n@Injectable()\nexport class StripePaymentService {\n\n  urlConfig = GlobalConstantShare.httpUrl;\n\n  shoppingCartLists = new Subject<Shoppingcart[]>();\n  paidToeflLists = new Subject<PaidToeflList[]>();\n    constructor(private http1: Http,\n                private http: HttpClient,\n                private router: Router,\n                private authService: AuthService_Local,\n                private shoppingCartService: ShoppingcartService,\n                private utilityService: UtilityService) {}\n\n  gotoStripeCharge(stripeCardInfo: StripeModel) {\n        // const body = JSON.stringify(stripeCardInfo);\n        // const header = new Headers({'Content-Type': 'application/json'});\n\n      return this.http.post<{ message: string, paidToeflLists: PaidToeflList[], shoppingCartLists: Shoppingcart[], stripeUserInfo: User}>\n                      (this.urlConfig + '/stripepayment', stripeCardInfo)\n                      .subscribe( data => {\n\n                                  this.utilityService.successToast('결제가 성공적으로 완료되었습니다. 감사합니다', '결제 공지사항');\n                                  const reInitSuccess = this.shoppingCartService.reInitialShoppingCartLists(data.paidToeflLists, data.stripeUserInfo);\n                if (reInitSuccess) {\n                  this.router.navigate(['/']);\n                }\n\n            },\n            (error) => console.error(error)\n          );\n\n    }\n}\n","\nimport { GlobalConstantShare } from '../Utility-shared/globalConstantShare';\n\nimport { PaidToeflList } from './model/paidToeflLists.model';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Http, Response, Headers} from '@angular/http';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from '@angular/router';\nimport { Shoppingcart } from './model/shoppingcart.model';\n\nimport { AuthService_Local } from '../auth/auth.service';\nimport { UtilityService } from '../Utility-shared/utility.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { User } from '../auth/user.model';\n@Injectable()\n\nexport class ShoppingcartService {\n\n    urlConfig = GlobalConstantShare.httpUrl;\n    shoppingCartLists: Shoppingcart[] = [];\n    paidToeflLists: PaidToeflList[] = [];                              // 실제 shopping item을 저장하는 공간\n    shoppingCartListAdded = new Subject<Shoppingcart[]>();\n    paidToeflListAdded = new Subject<PaidToeflList[]>();\n    userInfoListUpdated = new Subject<User>();\n    currentCart: Shoppingcart;\n\n    paypalCheck = false;\n\n    userInfo: User;\n\n    paidToeflListSubscription: Subscription;\n    serverCartListSubscription: Subscription;\n    userInfoSubscription: Subscription;\n\n    constructor (\n        private http: Http,\n        private router: Router,\n        private authService: AuthService_Local,\n        private utilityService: UtilityService) {}\n\n\n// 사용자가 인증을 하였을시 자동으로 이 method를 이용하여 User에 저장된 shoppingCartList를 가저온다\nconnectAuthShoppingCart() {\n      this.serverCartListSubscription = this.authService.shoppingCartLists.subscribe((shoppingcart: Shoppingcart[]) => {\n                                          this.shoppingCartLists = shoppingcart;\n                                          this.shoppingCartListAdded.next(this.shoppingCartLists);  // header에 있는 shopping list에 보냄\n      });\n\n      this.paidToeflListSubscription = this.authService.paidToeflLists.subscribe((paidToeflLists: PaidToeflList[]) => {\n                                          this.paidToeflLists = paidToeflLists;\n                                          this.paidToeflListAdded.next(this.paidToeflLists);\n      });\n\n}\n\n// 사용자가 로그인이 완료된 시점에서만 작동하며 welcome.component->tabset->장바구니를 클릭하였을시 작동됨\n  addShoppingCartList(newShoppingCartItem: Shoppingcart) {\n\n      const findShoppingItem = this.shoppingCartLists.filter( (shoppingCart: Shoppingcart) => {\n                               return shoppingCart.examNo === newShoppingCartItem.examNo;\n                               } );\n\n      console.log('새로운 쇼핑카트 아이템', newShoppingCartItem );\n      console.log('현재 쇼핑 카트안에서 추가된 쇼핑 카트내에 존재하지 않으면 0 이고 새로운 카트에 리스트를 추가한다');\n      if (findShoppingItem.length === 0) {\n        console.log('new item listed on Shoppingcart.');\n        this.shoppingCartLists.push(newShoppingCartItem);\n        console.log(this.shoppingCartLists);\n        this.utilityService.successToast( '선택하신 회차가 장바구니에 담겼습니다.', '공지사항');\n        this.shoppingCartListAdded.next(this.shoppingCartLists);                           // header에 있는 shopping list에 보냄\n      } else {\n        this.utilityService.errorToast('선택하신 회차가 이미 장바구니에 있습니다.', '에러공지');\n      }\n\n  }\n\n  // header.component에서 cart 지우기를 눌렀을때 사용\n      shoppingCartItemRemoved(shoppingCartItem: Shoppingcart) {\n\n          const findItemNumber = this.shoppingCartLists.indexOf(shoppingCartItem);\n          this.shoppingCartLists.splice(findItemNumber, 1);                                // shopping item 제거\n          this.shoppingCartListAdded.next(this.shoppingCartLists);                         // update된 shopping list를 header로 보냄\n      }\n\n  // payPal and Stripe 결재후 shoppingcartlist와 paidToeflLists를 updated하는 모드\n      reInitialShoppingCartLists(paidToeflLists, userInfo) {\n              console.log(paidToeflLists);\n              console.log(userInfo);\n              this.shoppingCartLists = [];\n              this.paidToeflLists = paidToeflLists;\n              this.userInfo = userInfo;\n              this.shoppingCartListAdded.next(this.shoppingCartLists);   // shopping cart를 초기화로 updated시킬때 사용\n              this.paidToeflListAdded.next(paidToeflLists);              // welcomeComponent를 updated할대 사용하는 Subject\n              return true;\n      }\n\n      getShoppingCartLists() {\n        return this.shoppingCartLists;\n      }\n\n      getPaidToefltLists() {\n\n        console.log(this.paidToeflLists);\n        return this.paidToeflLists;\n      }\n\n      getUserInfoListFromShoppingCartService() {\n        console.log(this.userInfo);\n        return this.userInfo;\n      }\n      goCheckOut() {\n        this.router.navigate(['/payment/shoppingcart']);\n      }\n\n      goSave() {\n        const token = localStorage.getItem('token');\n        const body = JSON.stringify(this.shoppingCartLists);\n\n        const header = new Headers({'Content-type': 'application/json'});\n\n        this.http.post(this.urlConfig + '/shoppingcart/' + '?token=' + token, body, {headers: header})\n                 .subscribe(\n                              (res: Response) => {\n                                  console.log(res);\n                                  const data = res.json();\n                                  console.log(data.result);\n                                  this.shoppingCartLists = [];\n                                  this.shoppingCartLists = data.result;\n                                  this.shoppingCartListAdded.next(this.shoppingCartLists);   // shopping cart 추가후 변화한 값 적용하기\n                              },\n                              (error) => console.log(error)\n                          );\n\n      }\n}\n\n","module.exports = \"\\n<mdb-card class=\\\"text-center\\\">\\n    <mdb-card-header class=\\\"dark-grey-text\\\">\\n      <h3><strong>Order Summary</strong></h3>\\n    </mdb-card-header>\\n\\n      <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table text-right\\\">\\n              <tbody>\\n\\n                  <td colspan=\\\"2\\\">Subtotal</td>\\n                  <td colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</td>\\n\\n                  <tr>\\n                  <td colspan=\\\"2\\\">Estimated Tax</td>\\n                  <td colspan=\\\"1\\\"></td>\\n                  </tr>\\n                  <tr>\\n                      <th colspan=\\\"2\\\">Total</th>\\n                      <th colspan=\\\"1\\\">{{ totalAmount | currency : \\\"USD\\\"}}</th>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"3\\\">\\n                        <button type=\\\"button\\\"\\n                        class=\\\"btn blue-gradient btn-block z-depth-1a waves-light\\\"\\n                        (click)=\\\"onCheckOut()\\\"\\n                        mdbWavesEffect>Check Out\\n                        </button>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"2\\\">\\n                      Promo Code\\n                    </td>\\n                    <td colspan=\\\"2\\\">\\n                        12345678\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td colspan=\\\"2\\\">\\n                        <button class=\\\"btn btn-block btn-sm red\\\" id=\\\"couponBtn\\\" (click)=\\\"goCancel()\\\">Cancel</button>\\n                    </td>\\n                    <td colspan=\\\"2\\\">\\n                        <button class=\\\"btn btn-block btn-sm green\\\" id=\\\"couponBtn\\\" (click)=\\\"getPromoCode()\\\">apply</button>\\n                    </td>\\n                  </tr>\\n              </tbody>\\n          </table>\\n      </div>\\n\\n\\n    <mdb-card-footer class=\\\"text-muted success-color white-text\\\">\\n      <p class=\\\"mb-0\\\">2 days ago</p>\\n    </mdb-card-footer>\\n  </mdb-card>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvc2hvcHBpbmdjYXJ0L29yZGVyLXN1bW1hcnkvb3JkZXItc3VtbWFyeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-order-summary',\n  templateUrl: './order-summary.component.html',\n  styleUrls: ['./order-summary.component.scss']\n})\nexport class OrderSummaryComponent {\n\n  @Input() totalAmount: number;\n\n  constructor(private location: Location,\n              private router: Router) { }\n\n\n\n  onCheckOut() {\n    console.log('check out clicked');\n    this.router.navigate(['/payment/checkout', this.totalAmount]);\n  }\n\n  goCancel() {\n    this.location.back();\n  }\n  getPromoCode() {\n    console.log('promo click');\n  }\n\n\n}\n","module.exports = \"\\n\\n<section class=\\\"wrapper\\\">\\n\\n  <div class=\\\"row mx-0 p-3\\\">\\n\\n        <div class=\\\"col-md-9 mx-auto\\\">\\n            <div class=\\\"card z-depth-1-half text-center\\\">\\n                <h3 class=\\\"card-header primary-color white-text z-depth-1\\\">ShoppingList</h3>\\n                <mdb-progress-bar class=\\\"progress primary-color-dark\\\" mode=\\\"indeterminate\\\"></mdb-progress-bar>\\n\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table align-middle text-center\\\">\\n\\n                        <thead>\\n                                <tr>\\n                                  <th colspan=\\\"1\\\">Toefl No</th>\\n                                  <th colspan=\\\"1\\\">Toefl Image</th>\\n                                  <th colspan=\\\"1\\\">Toefl Level</th>\\n                                  <th colspan=\\\"1\\\">Price</th>\\n                                </tr>\\n                        </thead>\\n\\n                        <tbody>\\n                                <tr *ngFor=\\\"let shoppingItem of shoppingCartLists\\\">\\n\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">{{shoppingItem.examNo}}</td>\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">\\n                                    <img src=\\\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\\\" class=\\\"avatar rounded-circle z-depth-1-half\\\"></td>\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">{{shoppingItem.examLevel}}</td>\\n                                  <td colspan=\\\"1\\\" class=\\\"align-middle\\\">{{shoppingItem.examPrice | currency: \\\"USD\\\"}}</td>\\n\\n                                </tr>\\n                        </tbody>\\n                <tr>\\n                  <th colspan=\\\"2\\\"></th>\\n                  <th colspan=\\\"1\\\"><strong>Total Price</strong></th>\\n                  <th colspan=\\\"1\\\"><strong>{{ totalAmount | currency: \\\"USD\\\" }}</strong></th>\\n                </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3 mx-auto\\\">\\n              <app-order-summary [totalAmount]=\\\"totalAmount\\\" id=\\\"sticky\\\" class=\\\"z-depth-2\\\"></app-order-summary>\\n        </div>\\n\\n   </div>\\n\\n\\n\\n</section>\\n\\n\\n\"","module.exports = \".wrapper {\\n  position: relative;\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  margin-top: 4rem; }\\n\\n#sidebar {\\n  float: left; }\\n\\n/* The sticky */\\n\\n#sidebar {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL3BheW1lbnQvc2hvcHBpbmdjYXJ0L3Nob3BwaW5nY2FydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNZLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixnQkFBZ0IsRUFBQTs7QUFJNUI7RUFDa0IsV0FBVyxFQUFBOztBQUk3QixlQUFBOztBQUNBO0VBQ0Usd0JBQXdCO0VBQ3hCLGdCQUFnQjtFQUNoQixNQUFNLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYXltZW50L3Nob3BwaW5nY2FydC9zaG9wcGluZ2NhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgLndyYXBwZXIge1xuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA0cmVtO1xuICB9XG5cblxuICAjc2lkZWJhciB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICB9XG5cblxuICAvKiBUaGUgc3RpY2t5ICovXG4gICNzaWRlYmFyIHtcbiAgICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XG4gICAgcG9zaXRpb246IHN0aWNreTtcbiAgICB0b3A6IDA7XG4gIH1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { Shoppingcart } from '../model/shoppingcart.model';\n\nimport { AuthService_Local } from './../../auth/auth.service';\nimport { ShoppingcartService } from '../shoppingcart.service';\n\nimport {Subject} from 'rxjs/Subject';\n@Component({\n  selector: 'app-shoppingcart',\n  templateUrl: './shoppingcart.component.html',\n  styleUrls: ['./shoppingcart.component.scss']\n})\nexport class ShoppingcartComponent implements OnInit {\n\n    shoppingCartLists: Shoppingcart[] = [];\n    shoppingCartListAdded = new Subject<Shoppingcart>();\n    totalAmount = 0;\n\n\n  constructor( private shoppingcartService: ShoppingcartService,\n               private authService: AuthService_Local) {}\n\n  ngOnInit() {\n          this.shoppingCartLists = this.shoppingcartService.getShoppingCartLists();\n          console.log(this.shoppingCartLists);\n          for ( const amount of this.shoppingCartLists) {\n                this.totalAmount += amount.examPrice;\n          }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shorten'\n})\nexport class ShortenPipe implements PipeTransform {\n\n  transform(value: any, limit: number): any {\n    if (value.length > limit) {\n      return value.substr(0, limit) + ' ...';\n    }\n    return value;\n  }\n\n}\n","\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// For MDB Angular Pro\nimport { WavesModule,PreloadersModule } from 'ng-uikit-pro-standard';\n// For MDB Angular Pro\nimport { ModalModule, InputsModule } from 'ng-uikit-pro-standard';\n\n@NgModule({\n\n  exports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      WavesModule,\n      PreloadersModule,\n      ModalModule,\n      InputsModule\n  ],\n\n})\nexport class SharedModule {}\n","\nexport class JoinPaidToefl {\n  constructor(\n              public toeflNo: number,\n              public toeflDesc: string,\n              public toeflLevel?: string,\n              public toeflImage?: string,\n              public paidToeflYesOrNo?: boolean) {}\n}\n","module.exports = \"        <!--Grid row-->\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <!--Grid column-->\\n          <div class=\\\"col-md-4 mb-3 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n            <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n              <mdb-card class=\\\"testimonial-card\\\">\\n                  <!--Bacground color-->\\n                  <div class=\\\"card-up indigo lighten-1\\\">\\n                  </div>\\n\\n                  <!--Avatar-->\\n                  <div class=\\\"avatar mx-auto\\\">\\n                    <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                  </div>\\n\\n                  <mdb-card-body>\\n                    <!--Name-->\\n                    <mdb-card-title>\\n                      <h4>{{ toefl.toeflNo }} 회차</h4>\\n                      <h6> {{ toefl.toeflLevel }}</h6>\\n                    </mdb-card-title>\\n                    <hr>\\n                    <!--Quotation-->\\n                    <p>\\n                        <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                    </p>\\n\\n                    <div *ngIf=\\\"isTeacherAuth\\\">\\n                        <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                        (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                        <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                        Take Exam\\n                        </button>\\n                    </div>\\n                    <div *ngIf=\\\"!isTeacherAuth\\\">\\n                        <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchased\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Take Exam\\n                            </button>\\n                        </div>\\n                        <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Add Cart\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchase\\n                            </button>\\n                        </div>\\n                    </div>\\n\\n                  </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <!--Bottom Table UI-->\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <!--Pagination -->\\n        <nav class=\\\"my-4 pt-2\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n\\n            <!--Arrow left-->\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n\\n            <!--Numbers-->\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS9hZHZhbmNlLXRvZWZsLWxpc3QvYWR2YW5jZS10b2VmbC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JoinPaidToefl } from '../../models/join-paidtoefl-toefl.model';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n@Component({\n  selector: 'app-advance-toefl-list',\n  templateUrl: './advance-toefl-list.component.html',\n  styleUrls: ['./advance-toefl-list.component.scss']\n})\nexport class AdvanceToeflListComponent {\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {\n\n              }\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","module.exports = \"        <!--Grid row-->\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <!--Grid column-->\\n          <div class=\\\"col-md-4 mb-3 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n            <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n              <mdb-card class=\\\"testimonial-card\\\">\\n                  <!--Bacground color-->\\n                  <div class=\\\"card-up indigo lighten-1\\\">\\n                  </div>\\n\\n                  <!--Avatar-->\\n                  <div class=\\\"avatar mx-auto\\\">\\n                    <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                  </div>\\n\\n                  <mdb-card-body>\\n                    <!--Name-->\\n                    <mdb-card-title>\\n                      <h4>{{ toefl.toeflNo }} 회차</h4>\\n                      <h6> {{ toefl.toeflLevel }}</h6>\\n                    </mdb-card-title>\\n                    <hr>\\n                    <!--Quotation-->\\n                    <p>\\n                        <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                    </p>\\n\\n\\n                    <div *ngIf=\\\"isTeacherAuth\\\">\\n                        <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                        (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                        <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                        Take Exam\\n                       </button>\\n                    </div>\\n\\n                    <div *ngIf=\\\"!isTeacherAuth\\\">\\n                        <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchased\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Take Exam\\n                            </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Add Cart\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchase\\n                            </button>\\n                          </div>\\n                    </div>\\n\\n                  </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <!--Bottom Table UI-->\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <!--Pagination -->\\n        <nav class=\\\"my-4 pt-2\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n\\n            <!--Arrow left-->\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n\\n            <!--Numbers-->\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS9iYXNpYy10b2VmbC1saXN0L2Jhc2ljLXRvZWZsLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","\nimport { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JoinPaidToefl } from '../../models/join-paidtoefl-toefl.model';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-basic-toefl-list',\n  templateUrl: './basic-toefl-list.component.html',\n  styleUrls: ['./basic-toefl-list.component.scss']\n})\nexport class BasicToeflListComponent {\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {\n\n              }\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","module.exports = \"        <!--Grid row-->\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <!--Grid column-->\\n          <div class=\\\"col-md-4 mb-3 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n            <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n              <mdb-card class=\\\"testimonial-card\\\">\\n                  <!--Bacground color-->\\n                  <div class=\\\"card-up indigo lighten-1\\\">\\n                  </div>\\n\\n                  <!--Avatar-->\\n                  <div class=\\\"avatar mx-auto\\\">\\n                    <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                  </div>\\n\\n                  <mdb-card-body>\\n                    <!--Name-->\\n                    <mdb-card-title>\\n                      <h4>{{ toefl.toeflNo }} 회차</h4>\\n                      <h6> {{ toefl.toeflLevel }}</h6>\\n                    </mdb-card-title>\\n                    <hr>\\n                    <!--Quotation-->\\n                    <p>\\n                        <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                    </p>\\n\\n\\n                    <div *ngIf=\\\"isTeacherAuth\\\">\\n                        <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                        (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                        <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                        Take Exam\\n                       </button>\\n                    </div>\\n\\n                    <div *ngIf=\\\"!isTeacherAuth\\\">\\n                        <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchased\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Take Exam\\n                            </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Add Cart\\n                            </button>\\n                            <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                  (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                  <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                  Purchase\\n                            </button>\\n                          </div>\\n                    </div>\\n\\n                  </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <!--Bottom Table UI-->\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <!--Pagination -->\\n        <nav class=\\\"my-4 pt-2\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n\\n            <!--Arrow left-->\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n\\n            <!--Numbers-->\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS9iZWdpbm5lci10b2VmbC1saXN0L2JlZ2lubmVyLXRvZWZsLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { JoinPaidToefl } from './../../models/join-paidtoefl-toefl.model';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-beginner-toefl-list',\n  templateUrl: './beginner-toefl-list.component.html',\n  styleUrls: ['./beginner-toefl-list.component.scss']\n})\nexport class BeginnerToeflListComponent {\n\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {\n\n              }\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","module.exports = \"\\n        <mdb-carousel [isControls]=\\\"true\\\" class=\\\"carousel-multi-item multi-animation\\\" [type]=\\\"'carousel-multi-item'\\\" [animation]=\\\"'slide'\\\">\\n\\n            <mdb-carousel-item>\\n            <div class=\\\"col-md-4\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(35).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(60).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            </mdb-carousel-item>\\n\\n\\n            <mdb-carousel-item>\\n            <div class=\\\"col-md-4\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(47).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(48).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(53).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            </mdb-carousel-item>\\n         \\n         \\n            <mdb-carousel-item>\\n            <div class=\\\"col-md-4\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(45).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(51).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            <div class=\\\"col-md-4 clearfix d-none d-md-block\\\">\\n                <mdb-card class=\\\"mb-3\\\">\\n                <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg\\\" alt=\\\"Card image cap\\\"></mdb-card-img>\\n                <mdb-card-body>\\n                    <mdb-card-title>\\n                    <h4>Card title</h4>\\n                    </mdb-card-title>\\n                    <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n                    <a href=\\\"#\\\" mdbBtn color=\\\"primary\\\" class=\\\"waves-light\\\" mdbWavesEffect>Button</a>\\n                </mdb-card-body>\\n                </mdb-card>\\n            </div>\\n            </mdb-carousel-item>\\n          \\n        </mdb-carousel>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS9ldmVudC10b2VmbC1saXN0L2V2ZW50LXRvZWZsLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-event-toefl-list',\n  templateUrl: './event-toefl-list.component.html',\n  styleUrls: ['./event-toefl-list.component.scss']\n})\nexport class EventToeflListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <div class=\\\"col-md-4 mt-1 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n              <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n                <mdb-card class=\\\"testimonial-card\\\">\\n\\n                    <div class=\\\"card-up indigo lighten-1\\\">\\n                    </div>\\n                    <div class=\\\"avatar mx-auto\\\">\\n                      <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                    </div>\\n\\n                    <mdb-card-body>\\n\\n                      <mdb-card-title>\\n                        <h4>{{ toefl.toeflNo }} 회차</h4>\\n                        <h6> {{ toefl.toeflLevel }}</h6>\\n                      </mdb-card-title>\\n                      <hr>\\n\\n                      <p>\\n                          <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                      </p>\\n\\n                      <div *ngIf=\\\"isTeacherAuth\\\">\\n                          <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                          (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                          <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                          Take Exam\\n                         </button>\\n                      </div>\\n\\n                      <div *ngIf=\\\"!isTeacherAuth\\\">\\n                          <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchased\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Take Exam\\n                              </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Add Cart\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchase\\n                              </button>\\n                          </div>\\n                      </div>\\n\\n                      </mdb-card-body>\\n                </mdb-card>\\n              </div>\\n\\n            </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <nav class=\\\"my-4 pt-1\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS9pbnRlcm1lZGlhdGUtdG9lZmwtbGlzdC9pbnRlcm1lZGlhdGUtdG9lZmwtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","\nimport { Component, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\n\nimport { JoinPaidToefl } from './../../models/join-paidtoefl-toefl.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-intermediate-toefl-list',\n  templateUrl: './intermediate-toefl-list.component.html',\n  styleUrls: ['./intermediate-toefl-list.component.scss']\n})\nexport class IntermediateToeflListComponent {\n\n  @Input() isAuth: boolean;                           // 일반 사용자 인증점검\n  @Input() isTeacherAuth: boolean;                    // teacher admin 인증점검\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n  price = GlobalConstantShare.price;\n\n  @ViewChildren('pages') pages: QueryList<any>;\n  itemsPerPage = 6;\n  numberOfVisiblePaginators = 10;\n  activePage = 1;\n  firstVisibleIndex = 1;\n  lastVisibleIndex: number = this.itemsPerPage;\n  firstVisiblePaginator = 0;\n  lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {}\n\n\n    onShoppingcart(toefl: JoinPaidToefl) {\n\n      console.log('장바구니 클릭');\n\n          if ( this.isAuth ) {\n                              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                            this.shoppingcartService.addShoppingCartList(cart);\n                              } else {\n                                this.router.navigate(['/auth/login']);\n          }\n    }\n\n    onDirectPayment(toefl: JoinPaidToefl) {\n      console.log('장바구니 클릭' + toefl);\n      console.log(this.isAuth);\n\n        if ( this.isAuth ) {\n              const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n              this.shoppingcartService.addShoppingCartList(cart);\n        } else {\n              this.router.navigate(['/auth/login']);\n        }\n    }\n\n\n    onPurchasedDetail(toefl) {\n      console.log('Purchased Detail has been clicked');\n    }\n\n    onTakeExam(toefl) {\n      console.log('Take Action for exam has been clicked');\n    }\n\n    changePage(event: any) {\n                          if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                              this.activePage = +event.target.text;\n                              this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                              this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          }\n    }\n    nextPage(event: any) {\n                          if (this.pages.last.nativeElement.classList.contains('active')) {\n                              if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                              } else {\n                                    this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                    this.lastVisiblePaginator = this.numberOfPaginators;\n                              }\n                          }\n\n                          this.activePage += 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n    previousPage(event: any) {\n                        if (this.pages.first.nativeElement.classList.contains('active')) {\n                              if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                              } else {\n                                  this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                              }\n                        }\n\n                          this.activePage -= 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n    }\n\n    firstPage() {\n                          this.activePage = 1;\n                          this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                          this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                          this.firstVisiblePaginator = 0;\n                          this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n    }\n    lastPage() {\n                        this.activePage = this.numberOfPaginators;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                        if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                            this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                        } else {\n                            this.lastVisiblePaginator = this.numberOfPaginators;\n                            this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                          (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                        }\n    }\n\n}\n","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toefl',\n  template: `\n          <router-outlet></router-outlet>\n  `\n})\nexport class ToeflExamComponent {\n\nconstructor() {}\n\n}\n","module.exports = \"\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n\\n          <div class=\\\"col-md-4 mt-1 \\\" *ngFor=\\\"let toefl of toefls.slice().reverse(); let indexNo=index\\\">\\n\\n\\n              <div *ngIf=\\\"indexNo+1 >= firstVisibleIndex && indexNo+1 <= lastVisibleIndex\\\">\\n\\n                <mdb-card class=\\\"testimonial-card\\\">\\n\\n                    <div class=\\\"card-up indigo lighten-1\\\">\\n                    </div>\\n                    <div class=\\\"avatar mx-auto\\\">\\n                      <img src={{toefl.toeflImage}} class=\\\"rounded-circle\\\">\\n                    </div>\\n\\n                    <mdb-card-body>\\n\\n                      <mdb-card-title>\\n                        <h4>{{ toefl.toeflNo }} 회차</h4>\\n                        <h6> {{ toefl.toeflLevel }}</h6>\\n                      </mdb-card-title>\\n                      <hr>\\n\\n                      <p>\\n                          <i class=\\\"fa fa-quote-left\\\"></i> {{ toefl.toeflDesc | shorten:50 }}<i class=\\\"fa fa-quote-right\\\"></i>\\n                      </p>\\n\\n                      <div *ngIf=\\\"isTeacherAuth\\\">\\n                          <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                          (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                          <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                          Take Exam\\n                         </button>\\n                      </div>\\n\\n                      <div *ngIf=\\\"!isTeacherAuth\\\">\\n                          <div *ngIf=\\\"toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"light-green\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onPurchasedDetail()\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchased\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"indigo\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onTakeExam(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Take Exam\\n                              </button>\\n                          </div>\\n                          <div *ngIf=\\\"!toefl.paidToeflYesOrNo\\\">\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"secondary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onShoppingcart(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"cart-plus\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Add Cart\\n                              </button>\\n                              <button mdbBtn type=\\\"button\\\" color=\\\"primary\\\" rounded=\\\"true\\\" size=\\\"sm\\\"\\n                                    (click)=\\\"onDirectPayment(toefl)\\\" mdbWavesEffect>\\n                                    <mdb-icon icon=\\\"credit-card\\\" class=\\\"mr-1\\\"></mdb-icon>\\n                                    Purchase\\n                              </button>\\n                          </div>\\n                      </div>\\n\\n                      </mdb-card-body>\\n                </mdb-card>\\n              </div>\\n\\n            </div>\\n\\n      </div>\\n\\n      <hr class=\\\"my-0\\\">\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n\\n        <nav class=\\\"my-4 pt-1\\\">\\n          <ul class=\\\"pagination pagination-circle pg-purple mb-0\\\">\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"firstPage()\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\">First</a>\\n            </li>\\n            <li class=\\\"page-item\\\" (click)=\\\"previousPage($event)\\\" [ngClass]=\\\"{disabled: activePage == 1}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Previous\\\">\\n                <span aria-hidden=\\\"true\\\">&laquo;</span>\\n                <span class=\\\"sr-only\\\">Previous</span>\\n              </a>\\n            </li>\\n            <li #pages *ngFor=\\\"let page of paginators | slice:firstVisiblePaginator:lastVisiblePaginator; let i = index\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active: i + firstVisiblePaginator + 1 == activePage}\\\">\\n                <a class=\\\"page-link waves-light\\\" (click)=\\\"changePage($event)\\\" mdbWavesEffect>{{page}}</a>\\n            </li>\\n\\n            <!--Arrow right-->\\n            <li class=\\\"page-item\\\" (click)=\\\"nextPage($event)\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\" aria-label=\\\"Next\\\">\\n                <span aria-hidden=\\\"true\\\">&raquo;</span>\\n                <span class=\\\"sr-only\\\">Next</span>\\n              </a>\\n            </li>\\n\\n            <!--First-->\\n            <li class=\\\"page-item clearfix d-none d-md-block\\\" (click)=\\\"lastPage()\\\" [ngClass]=\\\"{disabled: activePage == numberOfPaginators}\\\">\\n              <a class=\\\"page-link\\\">Last</a>\\n            </li>\\n\\n          </ul>\\n        </nav>\\n        <!--/Pagination -->\\n\\n      </div>\\n      <!--Bottom Table UI-->\\n\"","module.exports = \".view {\\n  background: url('students.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 100vh; }\\n\\n.navbar {\\n  z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS90b2VmbC1saXN0L3RvZWZsLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSx1REFBeUU7RUFDekUsc0JBQXNCO0VBQ3RCLGFBQWEsRUFBQTs7QUFHZjtFQUNFLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RvZWZsL3RvZWZsRXhhbS90b2VmbC1saXN0L3RvZWZsLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi52aWV3IHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vLi4vLi4vLi4vYXNzZXRzL3N0dWRlbnRzLmpwZ1wiKW5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4ubmF2YmFyIHtcbiAgei1pbmRleDogMTtcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChildren, QueryList, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Toefl } from './../../models/toefl.model';\nimport { Shoppingcart } from '../../../payment/model/shoppingcart.model';\nimport { ShoppingcartService } from '../../../payment/shoppingcart.service';\nimport { JoinPaidToefl } from './../../models/join-paidtoefl-toefl.model';\n\nimport { GlobalConstantShare } from '../../../Utility-shared/globalConstantShare';\n\n@Component({\n  selector: 'app-toefl-list',\n  templateUrl: './toefl-list.component.html',\n  styleUrls: ['./toefl-list.component.scss']\n})\nexport class ToeflListComponent {\n\n  @Input() isAuth: boolean;\n  @Input() isTeacherAuth: boolean;\n\n  @Input() toefls: JoinPaidToefl[];\n\n  @Input() numberOfPaginators: number;\n  @Input() paginators: Array<any>;\n\n\n  // tab 페이지 관련 변수설정 영역\n    @ViewChildren('pages') pages: QueryList<any>;\n    itemsPerPage = 6;\n    numberOfVisiblePaginators = 10;\n\n    activePage = 1;\n    firstVisibleIndex = 1;\n    lastVisibleIndex: number = this.itemsPerPage;\n    firstVisiblePaginator = 0;\n    lastVisiblePaginator = this.numberOfVisiblePaginators;\n\n    // shopping cart내 toefl 가격 명시 global 변수: 10불기준\n    price = GlobalConstantShare.price;\n\n  constructor(private shoppingcartService: ShoppingcartService,\n              private router: Router,\n              private ref: ElementRef) {}\n\n  onShoppingcart(toefl: JoinPaidToefl) {\n\n    console.log('장바구니 클릭');\n\n        if ( this.isAuth ) {\n                            const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n                                         this.shoppingcartService.addShoppingCartList(cart);\n                            } else {\n                              this.router.navigate(['/auth/login']);\n        }\n  }\n\n  onDirectPayment(toefl: JoinPaidToefl) {\n    console.log('장바구니 클릭' + toefl);\n    console.log(this.isAuth);\n\n      if ( this.isAuth ) {\n            const cart = new Shoppingcart(toefl.toeflNo, toefl.toeflLevel, this.price);\n            this.shoppingcartService.addShoppingCartList(cart);\n      } else {\n            this.router.navigate(['/auth/login']);\n      }\n  }\n\n  onPurchasedDetail(toefl) {\n    console.log('Purchased Detail has been clicked');\n  }\n\n  onTakeExam(toefl) {\n    console.log('Take Action for exam has been clicked');\n  }\n\n  changePage(event: any) {\n                        if (event.target.text >= 1 && event.target.text <= this.numberOfPaginators) {\n                            this.activePage = +event.target.text;\n                            this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                            this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                        }\n  }\n  nextPage(event: any) {\n                        if (this.pages.last.nativeElement.classList.contains('active')) {\n                            if ((this.numberOfPaginators - this.numberOfVisiblePaginators) >= this.lastVisiblePaginator) {\n                                  this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator += this.numberOfVisiblePaginators;\n                            } else {\n                                  this.firstVisiblePaginator += this.numberOfVisiblePaginators;\n                                  this.lastVisiblePaginator = this.numberOfPaginators;\n                            }\n                        }\n\n                        this.activePage += 1;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n  previousPage(event: any) {\n                      if (this.pages.first.nativeElement.classList.contains('active')) {\n                            if ((this.lastVisiblePaginator - this.firstVisiblePaginator) === this.numberOfVisiblePaginators)  {\n                                this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                this.lastVisiblePaginator -= this.numberOfVisiblePaginators;\n                            } else {\n                                this.firstVisiblePaginator -= this.numberOfVisiblePaginators;\n                                this.lastVisiblePaginator -= (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                            }\n                      }\n\n                        this.activePage -= 1;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n  }\n\n  firstPage() {\n                        this.activePage = 1;\n                        this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                        this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n                        this.firstVisiblePaginator = 0;\n                        this.lastVisiblePaginator = this.numberOfVisiblePaginators;\n  }\n  lastPage() {\n                      this.activePage = this.numberOfPaginators;\n                      this.firstVisibleIndex = this.activePage * this.itemsPerPage - this.itemsPerPage + 1;\n                      this.lastVisibleIndex = this.activePage * this.itemsPerPage;\n\n                      if (this.numberOfPaginators % this.numberOfVisiblePaginators === 0) {\n                          this.firstVisiblePaginator = this.numberOfPaginators - this.numberOfVisiblePaginators;\n                          this.lastVisiblePaginator = this.numberOfPaginators;\n                      } else {\n                          this.lastVisiblePaginator = this.numberOfPaginators;\n                          this.firstVisiblePaginator = this.lastVisiblePaginator -\n                                                        (this.numberOfPaginators % this.numberOfVisiblePaginators);\n                      }\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\n\nimport { ToeflListComponent } from './toefl-list/toefl-list.component';\n\nimport { ToeflExamComponent } from './toefl-exam.component';\n\nexport const toeflExamRoutes: Routes = [\n { path: 'toeflexam', component: ToeflExamComponent, children: [\n ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(toeflExamRoutes)],\n  exports: [RouterModule]\n})\nexport class ToeflExamRoutingModule {}\nexport const toeflExamRoutingComponents = [\n                                            ToeflExamComponent\n                                          ];\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToeflExamRoutingModule, toeflExamRoutingComponents } from './toefl-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ToeflExamService } from './toeflexam.service';\n\n@NgModule({\n  declarations: [\n    toeflExamRoutingComponents\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ToeflExamRoutingModule\n  ],\n  providers: [ ToeflExamService ]\n})\nexport class ToeflExamModule {}\n","import { GlobalConstantShare } from '../../Utility-shared/globalConstantShare';\n\nimport { Toefl } from './../models/toefl.model';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class ToeflExamService {\n\n  loginStatusChecked = false;\n  urlConfig = GlobalConstantShare.httpUrl;  // 실제 url 주소가 있는곳\n  private toefls: Toefl[] = [];\n  public toeflListChanged = new Subject<Toefl[]>();\n  constructor(private http: HttpClient)  {}\n\n  getAllToeflLists() {\n\n    this.http.get<{ message: string, toefls: Toefl[] }>(this.urlConfig + '/showExam/')\n                  .subscribe((postToefls) => {\n                                                this.toefls = postToefls.toefls;\n                                                this.toeflListChanged.next([...this.toefls]);\n                                              },\n                                                (error) => console.log(error)\n                );\n  }\n\n}\n\n\n","module.exports = \"\\n<!-- 메인화면 모드 -->\\n\\n<div class=\\\"view\\\">\\n  <div class=\\\"full-bg-img\\\">\\n      <div class=\\\"mask rgba-black-light flex-center\\\">\\n          <div class=\\\"container\\\">\\n              <div class=\\\"white-text text-center wow fadeInUp\\\">\\n                  <h2 class=\\\"font-weight-bold\\\">TOEFL EXAM SIMULATOR</h2>\\n                  <h5 class=\\\"font-weight-bold\\\">When you need to get better scores</h5>\\n                  <br>\\n                  <p>In your heart, You know you can get the TOEFL SCORES eaily and fast that you want !!! </p>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n</div>\\n\\n<!-- 두번째 2개 카드 모드 -->\\n\\n<section class=\\\"pt-3 pb-3\\\">\\n    <div class=\\\"row\\\" id=\\\"floatingCard\\\">\\n        <div class=\\\"col-md-1\\\"></div>\\n        <div class=\\\"col-md-5\\\">\\n            <div class=\\\"border border-gray rounded z-depth-4\\\">\\n                <div class=\\\"card white text-center\\\">\\n                        <!-- Card content -->\\n                        <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\n\\n                                <!--Title-->\\n                                <mdb-card-title>\\n                                <h4>\\n                                    <strong><i class=\\\"fa fa-share-alt-square\\\"></i> To Share Your Tests</strong>\\n                                </h4>\\n                                </mdb-card-title>\\n\\n                                <hr>\\n                                <button type=\\\"button\\\" class=\\\"btn indigo accent-4 btn-rounded\\\">SignUp</button>\\n                                <mdb-card-text class=\\\"mt-3\\\">\\n                                    If you want to share your Toefl Test, Please Sign Up for Sharing...\\n                                </mdb-card-text>\\n\\n                                <a type=\\\"button\\\" class=\\\"btn-floating btn-sm btn-fb\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\n                                <a type=\\\"button\\\" class=\\\"btn-floating btn-sm btn-ins\\\"><i class=\\\"fa fa-instagram\\\"></i></a>\\n                                <a type=\\\"button\\\" class=\\\"btn-floating btn-sm btn-yt\\\"><i class=\\\"fa fa-youtube\\\"></i></a>\\n\\n                        </mdb-card-body>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"border border-gray rounded z-depth-4\\\">\\n              <div class=\\\"card white text-center\\\">\\n                      <!-- Card content -->\\n                      <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\n\\n                              <!--Title-->\\n                              <mdb-card-title>\\n                              <h4>\\n                                  <strong><i class=\\\"fa fa-pencil-square\\\"></i> To Take Our Best Toefl Exams</strong>\\n                              </h4>\\n                              </mdb-card-title>\\n\\n                              <hr>\\n                              <button type=\\\"button\\\" class=\\\"btn deep-orange darken-4 btn-rounded\\\">   SignUp   </button>\\n                              <mdb-card-text class=\\\"mt-3\\\">\\n                                  If you want to take Our Toefl Test, Please Sign Up for taking...\\n                              </mdb-card-text>\\n\\n                              <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" size=\\\"sm\\\" class=\\\"btn-fb waves-light\\\" mdbWavesEffect>\\n                                 <i class=\\\"fa fa-facebook\\\"></i></a>\\n                              <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" size=\\\"sm\\\" class=\\\" btn-gplus waves-light\\\" mdbWavesEffect>\\n                                 <i class=\\\"fa fa-google-plus\\\"></i></a>\\n\\n                      </mdb-card-body>\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n</section>\\n\\n<!-- 세번째 이영역을 carousal을 구현하는 영역임 -->\\n<section class=\\\"pb-3\\\">\\n\\n    <h2 class=\\\"h1 py-5 font-weight-bold text-center\\\">Do You Want To Take Our Free Toefl Exams?</h2>\\n\\n    <p class=\\\"px-5 mb-3 pb-3 lead grey-text text-center\\\">\\n        Please just SignUp or Login to take our Free Toefl Exams to help your decisions.\\n    </p>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n\\n          <mdb-carousel [isControls]=\\\"true\\\" [animation]=\\\"'slide'\\\">\\n\\n              <mdb-carousel-item>\\n                  <img class=\\\"view1\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\\\" alt=\\\"First slide\\\">\\n                    <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\n                    <div class=\\\"carousel-caption\\\">\\n                        <h3 class=\\\"py-3 font-weight-bold\\\">\\n                            <strong>으메이징한 무료시험 체험하기</strong>\\n                        </h3>\\n                        <button class=\\\"btn btn-secondary btn-rounded btn-md  waves-light\\\" mdbWavesEffect>\\n                            <i class=\\\"fa fa-clone left\\\"></i>무료시험 보러가기\\n                        </button>\\n                      </div>\\n              </mdb-carousel-item>\\n              <mdb-carousel-item>\\n                  <img class=\\\"view1\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\\\" alt=\\\"Second slide\\\">\\n                  <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\n                  <div class=\\\"carousel-caption\\\">\\n                      <h3 class=\\\"py-3 font-weight-bold\\\">\\n                          <strong>으메이징한 무료시험 체험하기</strong>\\n                      </h3>\\n                      <button class=\\\"btn btn-secondary btn-rounded btn-md  waves-light\\\" mdbWavesEffect>\\n                          <i class=\\\"fa fa-clone left\\\"></i>무료시험 보러가기\\n                      </button>\\n                    </div>\\n              </mdb-carousel-item>\\n              <mdb-carousel-item>\\n                  <img class=\\\"view1\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\\\" alt=\\\"Third slide\\\">\\n                  <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\n                  <div class=\\\"carousel-caption\\\">\\n                      <h3 class=\\\"py-3 font-weight-bold\\\">\\n                          <strong>으메이징한 무료시험 체험하기</strong>\\n                      </h3>\\n                      <button class=\\\"btn btn-secondary btn-rounded btn-md  waves-light\\\" mdbWavesEffect>\\n                          <i class=\\\"fa fa-clone left\\\"></i>무료시험 보러가기\\n                      </button>\\n                    </div>\\n              </mdb-carousel-item>\\n\\n          </mdb-carousel>\\n\\n      </div>\\n  </div>\\n\\n</section>\\n\\n<!-- 네번째 이영역은 핫 이벤트 세일이 가능한 toefl list를 전시하고 결재가 이루어 지도록 한다 -->\\n<section class=\\\"pb-3\\\">\\n\\n  <h2 class=\\\"h1 py-5 font-weight-bold text-center\\\">The Latest Tests With The Highest Hit Rate? 75%Off</h2>\\n  <p class=\\\"px-5 mb-3 pb-3 lead grey-text text-center\\\">\\n      You can take a Toefl Exam with one of the hottest deals for our best Toefl Exams.\\n  </p>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-11 mx-auto\\\">\\n              <app-event-toefl-list></app-event-toefl-list>\\n      </div>\\n  </div>\\n\\n\\n</section>\\n\\n\\n<!-- 다섯번째 tab을 이용한 모든 토플 시험을 볼수 있도록 구성한다 -->\\n<section class=\\\"text-center\\\">\\n\\n  <h2 class=\\\"h1-responsive font-weight-bold text-center my-5\\\">Current Toefl Exams</h2>\\n  <p class=\\\"grey-text text-center w-responsive mx-auto mb-5\\\">Look at our best Toefl Exams for your success. Please try to select one of them to get your best results for your Toefl Scores</p>\\n\\n<div *ngIf=\\\"toefls\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-11 p-0 mx-auto\\\">\\n              <mdb-tabset #staticTabs [buttonClass]=\\\"'md-tabs tabs-6 pills-secondary blue lighten-2'\\\" [contentClass]=\\\"''\\\">\\n\\n                          <mdb-tab heading=\\\"All Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-toefl-list\\n                                                    [toefls]=\\\"jointPaidToeflLists\\\"\\n                                                    [numberOfPaginators]=\\\"numberOfPaginators\\\"\\n                                                    [paginators]=\\\"paginators\\\"\\n                                                    [isAuth]=\\\"isAuth\\\"\\n                                                    [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Beginners Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12 \\\">\\n\\n                                      <app-beginner-toefl-list\\n                                                              [toefls]=\\\"beginnerToefls\\\"\\n                                                              [numberOfPaginators]=\\\"beginnerNumberOfPaginators\\\"\\n                                                              [paginators]=\\\"beginnerPaginators\\\"\\n                                                              [isAuth]=\\\"isAuth\\\"\\n                                                              [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-beginner-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Basic Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-basic-toefl-list\\n                                                            [toefls]=\\\"basicToefls\\\"\\n                                                            [numberOfPaginators]=\\\"basicNumberOfPaginators\\\"\\n                                                            [paginators]=\\\"basicPaginators\\\"\\n                                                            [isAuth]=\\\"isAuth\\\"\\n                                                            [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-basic-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Intermediate Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-intermediate-toefl-list\\n                                                                  [toefls]=\\\"intermediateToefls\\\"\\n                                                                  [numberOfPaginators]=\\\"interNumberOfPaginators\\\"\\n                                                                  [paginators]=\\\"interPaginators\\\"\\n                                                                  [isAuth]=\\\"isAuth\\\"\\n                                                                  [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-intermediate-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Advanced Exams\\\">\\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-12\\\">\\n\\n                                      <app-advance-toefl-list\\n                                                            [toefls]=\\\"advancedToefls\\\"\\n                                                            [numberOfPaginators]=\\\"advNumberOfPaginators\\\"\\n                                                            [paginators]=\\\"advPaginators\\\"\\n                                                            [isAuth]=\\\"isAuth\\\"\\n                                                            [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-advance-toefl-list>\\n                                  </div>\\n                              </div>\\n                          </mdb-tab>\\n\\n\\n                          <mdb-tab heading=\\\"Each Section Exams\\\">\\n                                  <div class=\\\"row\\\">\\n                                      <div class=\\\"col-12\\\">\\n\\n                                          <app-toefl-list\\n                                                        [toefls]=\\\"jointPaidToeflLists\\\"\\n                                                        [numberOfPaginators]=\\\"numberOfPaginators\\\"\\n                                                        [paginators]=\\\"paginators\\\"\\n                                                        [isAuth]=\\\"isAuth\\\"\\n                                                        [isTeacherAuth]=\\\"isTeacherAuth\\\"></app-toefl-list>\\n                                        </div>\\n                                  </div>\\n                          </mdb-tab>\\n\\n              </mdb-tabset>\\n      </div>\\n  </div>\\n</div>\\n</section>\\n\\n<app-footer></app-footer>\\n\"","module.exports = \".view {\\n  background: url('university.jpg') no-repeat center center;\\n  background-size: cover;\\n  height: 80vh; }\\n\\n.view1 {\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 30rem; }\\n\\n#floatingCard {\\n  position: relative;\\n  bottom: 50px; }\\n\\n.navbar {\\n  z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNoZW9saGEvRGVza3RvcC9leGFtc2ltdjIuMC4wLXB1Ymxpc2hlZC9zcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLHlEQUFzRTtFQUN0RSxzQkFBc0I7RUFDdEIsWUFBWSxFQUFBOztBQUdkO0VBQ0UsT0FBTztFQUNQLFFBQVE7RUFDUixXQUFXO0VBQ1gsYUFBYSxFQUFBOztBQUdmO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVksRUFBQTs7QUFHZDtFQUNFLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnZpZXcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9hc3NldHMvdW5pdmVyc2l0eS5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogODB2aDtcbn1cblxuLnZpZXcxIHtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDMwcmVtO1xufVxuXG4jZmxvYXRpbmdDYXJke1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvdHRvbTogNTBweDtcbn1cblxuLm5hdmJhciB7XG4gIHotaW5kZXg6IDE7XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthService_Local } from '../auth/auth.service';\n\nimport {Toefl} from '../toefl/models/toefl.model';\nimport {ToeflExamService} from '../toefl/toeflExam/toeflexam.service';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport { ShoppingcartService } from '../payment/shoppingcart.service';\nimport { PaidToeflList } from '../payment/model/paidToeflLists.model';\nimport { JoinPaidToefl } from '../toefl/models/join-paidtoefl-toefl.model';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit, OnDestroy {\n\n   // 원본 toefl list init\n       toefls: Toefl[] = [];\n\n   // 지불이 완료된 toefl list\n       newPaidToeflLists: PaidToeflList[] = [];\n\n   // paid Toefl List와 합쳐진 toefl lists\n       joinPaidToefl: JoinPaidToefl;\n       jointPaidToeflLists: JoinPaidToefl[] = [];\n\n       beginnerToefls: JoinPaidToefl[] = [];\n       basicToefls: JoinPaidToefl[] = [];\n       intermediateToefls: JoinPaidToefl[] = [];\n       advancedToefls: JoinPaidToefl[] = [];\n\n\n    // 각 인증에 필요한 기능 설정\n      paidToeflCheck = false;\n      isAuth = false;\n      isTeacherAuth = false;\n\n    // Subscription 설정\n    toeflListSubscription: Subscription;\n    paidToeflListSubscription: Subscription;\n\n    // bootstrap tab에서 사용하는 각종 기능규정\n\n        itemsPerPage = 6;\n        numberOfPaginators: number;\n        paginators: Array<any> = [];\n\n        beginnerNumberOfPaginators: number;\n        beginnerPaginators: Array<any> = [];\n\n        basicNumberOfPaginators: number;\n        basicPaginators: Array<any> = [];\n\n        interNumberOfPaginators: number;\n        interPaginators: Array<any> = [];\n\n        advNumberOfPaginators: number;\n        advPaginators: Array<any> = [];\n\n\n  constructor(\n              private toeflExamService: ToeflExamService,\n              private authService: AuthService_Local,\n              private shoppincartService: ShoppingcartService\n              ) {}\n\n   ngOnInit() {\n\n\n    /* 새로 결재된 토플명단을 추출하는 subject: this.shoppincartService.paidToeflListAdded\n                                        paidToeflListAdded observable 위치: authservice내 로그인시\n                                                                           shoppingcat 연결시\n    */\n\n      this.paidToeflListSubscription = this.shoppincartService.paidToeflListAdded\n                                                              .subscribe((paidToeflLists: PaidToeflList[]) => {\n                                                                this.newPaidToeflLists = paidToeflLists;\n                                                                console.log('updated newPaid Toefl Lists: ' + this.newPaidToeflLists);\n                                                              });\n\n      this.toeflListSubscription = this.toeflExamService.toeflListChanged\n                                                              .subscribe((toefls: Toefl[]) => {\n                                                                this.toefls = toefls;\n                                                                console.log('original toefl lists: ' + this.toefls);\n\n                                                                console.log('new paid toefl lists: ' + this.newPaidToeflLists);\n\n                                                                if (this.newPaidToeflLists.length !== 0) {\n                                                                  this.jointPaidToeflLists = [];\n                                                                    for (const toeflItem of this.toefls) {\n                                                                      this.paidToeflCheck = false;\n                                                                        for (const paidToeflItem of this.newPaidToeflLists) {\n                                                                          if ( toeflItem.toeflNo === paidToeflItem.examNo) {\n                                                                                this.paidToeflCheck = true;\n                                                                          }\n                                                                        }\n                                                                        this.joinPaidToefl = new JoinPaidToefl(toeflItem.toeflNo,\n                                                                                                                toeflItem.toeflDesc,\n                                                                                                                toeflItem.toeflLevel,\n                                                                                                                toeflItem.toeflImage,\n                                                                                                                this.paidToeflCheck);\n                                                                        this.jointPaidToeflLists.push(this.joinPaidToefl);\n                                                                    }\n                                                                  } else {\n                                                                    this.jointPaidToeflLists = [];\n\n                                                                  for (const toeflItem of this.toefls) {\n                                                                      this.paidToeflCheck = false;\n                                                                      this.joinPaidToefl = new JoinPaidToefl(toeflItem.toeflNo,\n                                                                                                        toeflItem.toeflDesc,\n                                                                                                        toeflItem.toeflLevel,\n                                                                                                        toeflItem.toeflImage,\n                                                                                                        this.paidToeflCheck);\n                                                                      this.jointPaidToeflLists.push(this.joinPaidToefl);\n                                                                  }\n                                                                }\n\n                                                            for (const eachToefl of this.jointPaidToeflLists) {\n                                                              if ( eachToefl.toeflLevel === 'Beginner' ) {\n                                                                    this.beginnerToefls.push(eachToefl);\n                                                              } else if ( eachToefl.toeflLevel === 'Basic' ) {\n                                                                    this.basicToefls.push(eachToefl);\n                                                              } else if ( eachToefl.toeflLevel === 'InterMediate' ) {\n                                                                    this.intermediateToefls.push(eachToefl);\n                                                              } else if ( eachToefl.toeflLevel === 'Advanced' ) {\n                                                                    this.advancedToefls.push(eachToefl);\n                                                              }\n                                                          }\n\n                                                        this.calculatePagenator(this.jointPaidToeflLists,\n                                                                                this.beginnerToefls,\n                                                                                this.basicToefls,\n                                                                                this.intermediateToefls,\n                                                                                this.advancedToefls);\n\n\n                                                      console.log('this is join paid toefl lists: ' + this.jointPaidToeflLists);\n                                                              });\n\n      this.toeflExamService.getAllToeflLists();\n      this.newPaidToeflLists = this.shoppincartService.getPaidToefltLists();\n      this.isAuth = this.authService.isAuthenticated;         // 일반 사용자 인증\n      this.isTeacherAuth = this.authService.isteacherAuthenticated;   // teacher 관리자 인증\n\n    }\n\n    ngOnDestroy() {\n      this.toeflListSubscription.unsubscribe();\n      this.paidToeflListSubscription.unsubscribe();\n    }\n\n    calculatePagenator(toefls, beginnerToefls, basicToefls, interToefls, advancedToefls) {\n\n           // 모든 토플 명단에 관한 pagenator 산출\n           if (toefls.length % this.itemsPerPage === 0) {\n                this.numberOfPaginators = Math.floor(toefls.length / this.itemsPerPage);\n          } else {\n                this.numberOfPaginators = Math.floor(toefls.length / this.itemsPerPage + 1);\n          }\n\n                for (let i = 1; i <= this.numberOfPaginators; i++) {\n                      this.paginators.push(i);\n                }\n\n          // beginner level toefl pagenator 산출\n\n          if (beginnerToefls.length % this.itemsPerPage === 0) {\n                this.beginnerNumberOfPaginators = Math.floor(beginnerToefls.length / this.itemsPerPage);\n          } else {\n                this.beginnerNumberOfPaginators = Math.floor(beginnerToefls.length / this.itemsPerPage + 1);\n          }\n\n                for (let i = 1; i <= this.beginnerNumberOfPaginators; i++) {\n                      this.beginnerPaginators.push(i);\n                }\n\n         // basic level toefl pagenator 산출\n\n          if (basicToefls.length % this.itemsPerPage === 0) {\n                this.basicNumberOfPaginators = Math.floor(basicToefls.length / this.itemsPerPage);\n              } else {\n                    this.basicNumberOfPaginators = Math.floor(basicToefls.length / this.itemsPerPage + 1);\n          }\n                  for (let i = 1; i <= this.basicNumberOfPaginators; i++) {\n                    this.basicPaginators.push(i);\n                  }\n\n\n           // intermediate level toefl pagenator 산출\n\n           if (interToefls.length % this.itemsPerPage === 0) {\n                this.interNumberOfPaginators = Math.floor(interToefls.length / this.itemsPerPage);\n              } else {\n                this.interNumberOfPaginators = Math.floor(interToefls.length / this.itemsPerPage + 1);\n            }\n                for (let i = 1; i <= this.interNumberOfPaginators; i++) {\n                  this.interPaginators.push(i);\n                }\n\n        // advanced level toefl pagenator 산출\n\n            if (advancedToefls.length % this.itemsPerPage === 0) {\n                  this.advNumberOfPaginators = Math.floor(advancedToefls.length / this.itemsPerPage);\n            } else {\n                  this.advNumberOfPaginators = Math.floor(advancedToefls.length / this.itemsPerPage + 1);\n            }\n                for (let i = 1; i <= this.advNumberOfPaginators; i++) {\n                      this.advPaginators.push(i);\n                }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { AuthServiceConfig, GoogleLoginProvider, FacebookLoginProvider } from 'angular-6-social-login';\n\nexport const environment = {\n  production: false\n};\n\nexport function getAuthServiceConfigs() {\n  const config = new AuthServiceConfig(\n    [\n      {\n          id: FacebookLoginProvider.PROVIDER_ID,\n          provider: new FacebookLoginProvider('506098316522281')\n      },\n      {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider('97692696799-l8i6pfujb3fnh1at7bgch6t48pdh90fo.apps.googleusercontent.com')\n      }\n    ]\n  );\n  return config;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}